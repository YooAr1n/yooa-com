{"version":3,"file":"js/app.95b3be55.js","mappings":"0EAAAA,OAAOC,UAAY,SAASA,EAAUC,GACrC,GAAIA,EAAEC,QAAU,EAAG,OAAOD,EAC1B,IAAIE,EAAMF,EAAEC,OAAS,EAErB,OADW,GAAPC,IAAUA,EAAM,GACbF,EAAEG,MAAM,EAAGD,GAAO,IAAMH,EAAUC,EAAEG,MAAMD,GAClD,EAEAJ,OAAOM,kBAAoB,SAA2BC,EAAKC,GAC1D,IAAIC,EAAIF,EAAIG,QAAQC,QAChBC,EAAIL,EAAIM,IAAIC,QAAQC,IAAI,GAAIN,IACc,IAA1CG,EAAEI,0BAA0BR,KACzBI,EAAI,IAAIE,QAAQ,GAChBL,EAAIA,EAAEQ,IAAI,IAEVR,EAAES,GAAG,KACLN,EAAIA,EAAEO,IAAI,IACVV,EAAIA,EAAEW,IAAI,IAEjB,IAAIC,EAAQ,GACRZ,EAAEa,MAAMJ,GAAG,OACgC,IAA1CN,EAAEI,0BAA0BR,KACtBI,EAAI,IAAIE,QAAQ,GAChBL,EAAIA,EAAEQ,IAAI,IAEpBI,EAAQT,EAAEI,0BAA0BR,IAGrC,IAAIe,EAAMd,EAAEO,0BAA0B,GAGtC,OAFKO,EAAIC,SAAS,OAAMD,EAAMtB,UAAUsB,EAAIE,QAAQ,KAAM,MACtDhB,EAAES,GAAG,KAAIK,EAAM,IAAIA,GAChBF,EAAQ,IAAME,CACtB,EAEAvB,OAAO0B,YAAc,SAAqBnB,EAAKC,GAC3C,GAAY,OAARD,QAAwBoB,IAARpB,EAAmB,MAAO,MAC9C,GAAIA,EAAIqB,IAAM,KAAO,OAAQ,GAAGC,QAAQrB,GACxC,IAAIsB,EAAOvB,EAAIS,0BAA0BR,GACrCuB,EAAWD,EAAKE,MAAM,KAE1B,OADAD,EAAS,GAAKA,EAAS,GAAGN,QAAQ,2BAA4B,OACvC,GAAnBM,EAAS5B,OAAoB4B,EAAS,GACnCA,EAAS,GAAK,IAAMA,EAAS,EACxC,EAEA/B,OAAOiC,cAAgB,SAAuB1B,EAAKC,GAC/C,OAAY,OAARD,QAAwBoB,IAARpB,EAA0B,MAC1CA,EAAIqB,IAAM,MAAgB,GAAGC,QAAQrB,IACrCD,EAAIqB,IAAM,IAAoB,IAAbpB,IAAgBA,EAAY0B,KAAKC,IAAI3B,EAAW,IAC9DD,EAAIS,0BAA0BR,GACzC,EAEAR,OAAOoC,SAAW,SAAkBC,EAAGC,EAAI,GAC1C,OAAOD,GAAK,IAAIvB,QAAQwB,EACzB,EAEAtC,OAAOuC,UAAY,SAAmBF,GAErC,OADAA,EAAIG,OAAOC,OAAOJ,GACbA,EAAE,GACAA,EAAEK,QAAO,CAACC,EAAGC,IAAM9B,QAAQG,IAAI0B,EAAGC,KADvB,IAAI9B,QAAQ,EAE/B,EAEAd,OAAO6C,OAAS,SAASA,EAAOC,EAAStC,EAAY,GAEpD,GADGsC,EAAU,IAAIhC,QAAQgC,GACrBC,MAAMD,EAAQE,OAAOD,MAAMD,EAAQG,QAAQF,MAAMD,EAAQlB,KAC5D,MAAO,MAER,GAAIkB,EAAQE,KAAO,EAAG,MAAO,IAAIH,EAAOC,EAAQI,MAAO1C,GACvD,GAAIsC,EAAQlB,IAAI,EAAG,CAClB,GAAIkB,EAAQG,MAAQ,GAAMH,EAAQlB,KAAO,MAAyB,GAAjBkB,EAAQG,MAAa,MAAO,KAAOJ,EAAOC,EAAQK,QAAS3C,GACvGF,kBAAkBwC,EAAStC,EACjC,CACA,GAAIsC,EAAQlB,KAAOwB,OAAOC,kBAAmB,MAAO,WACpD,GAAIP,EAAQG,MAAQ,GAAMH,EAAQlB,KAAO,MAAyB,GAAjBkB,EAAQG,MAAa,CACrE,IAAIK,EAAOR,EAAQQ,OACnB,OAAIA,EAAKC,IAAI,KAAa,IAAMC,YAAYF,EAAK3C,SAC7C2C,EAAKC,IAAI,KAAazC,QAAQC,IAAI,GAAIuC,EAAKlC,IAAIkC,EAAK3C,UAAUK,0BAA0B,GAAK,IAAMU,YAAY4B,EAAK3C,QAAS,GACrHG,QAAQC,IAAI,GAAIuC,EAAKlC,IAAIkC,EAAK3C,UAAUK,0BAA0B,GAAK,IAAMU,YAAY4B,EAAK3C,QAAS,EACpH,CAAO,OAAImC,EAAQG,MAAQ,GAAMf,KAAKZ,IAAIwB,EAAQlB,KAAO,KAAwB,GAAjBkB,EAAQG,MAChE,IAAMJ,EAAOC,EAAQpC,QAASF,GAC3BsC,EAAQG,MAAQ,GAAMf,KAAKZ,IAAIwB,EAAQlB,MAAQ,MAAyB,GAAjBkB,EAAQG,MAClE,IAAMJ,EAAOC,EAAQpC,QAAS,GAC3BoC,EAAQG,MAAQ,GAAKH,EAAQlB,KAAO,IACvCtB,kBAAkBwC,EAAStC,GACxBsC,EAAQlB,KAAO,IAClBF,YAAYoB,EAAS,GAClBA,EAAQlB,KAAK,KAChBK,cAAca,EAAStC,GACN,GAAdsC,EAAQE,KACX1C,kBAAkBwC,EAAStC,GACrByB,cAAca,EAAStC,EACtC,EAEAR,OAAOwD,YAAc,SAAqBV,GAEtC,OADAA,EAAU,IAAIhC,QAAQgC,GAClBA,EAAQS,IAAI,MACZT,EAAQW,IAAI,OAAUX,EAAQY,GAAG,GADRb,OAAOC,EAAS,GAEtCD,OAAOC,EAAS,EAC3B,EAEA9C,OAAO2D,WAAa,SAAoBzD,GACpC,OAAIA,EAAI,GAAW2C,OAAO3C,GAAK,IACtBA,EAAI,KAAasD,YAAYtB,KAAKvB,MAAMT,EAAI,KAAO,KAAO2C,OAAO3C,EAAI,IAAM,IAC3EA,EAAI,MAAcsD,YAAYtB,KAAKvB,MAAMT,EAAI,OAAS,KAAOsD,YAAYtB,KAAKvB,MAAMT,EAAI,IAAM,IAAM,KAAO2C,OAAO3C,EAAI,IAAM,IAC5HA,EAAI,QAAiBsD,YAAYtB,KAAKvB,MAAMT,EAAI,OAAS,KAAO,KAAOsD,YAAYtB,KAAKvB,MAAMT,EAAI,MAAQ,IAAM,KAAOsD,YAAYtB,KAAKvB,MAAMT,EAAI,IAAM,IAAM,KAAO2C,OAAO3C,EAAI,IAAM,IACnLsD,YAAYtB,KAAKvB,MAAMT,EAAI,UAAa,KAAOsD,YAAYtB,KAAKvB,MAAMT,EAAI,OAAS,KAAO,KAAOsD,YAAYtB,KAAKvB,MAAMT,EAAI,MAAQ,IAAM,KAAOsD,YAAYtB,KAAKvB,MAAMT,EAAI,IAAM,IAAM,KAAO2C,OAAO3C,EAAI,IAAM,GAChO,EAEAF,OAAO4D,SAAW,SAAkBvB,EAAG7B,EAAWqD,GAC9CxB,EAAI,IAAIvB,QAAQuB,GAChB,IAAIyB,EAASzB,EAAErB,0BAA0BR,GAIzC,OAHI,IAAIM,QAAQgD,GAAQP,IAAIM,KACxBC,EAAS,IAAIhD,QAAQ+C,EAAc3B,KAAKnB,IAAI,GAAKP,IAAYQ,0BAA0BR,IAEpFsD,CACX,EAGA9D,OAAO+D,YAAc,SAAqB1B,EAAG7B,EAAU,GACnD,OAAOqC,OAAOR,EAAG7B,GAAW,EAChC,EAEAR,OAAOgE,UAAY,SAAmB3B,GAClC,IAAI5B,EAAI4B,EAAE3B,QAAQuD,OACdrD,EAAIyB,EAAExB,IAAIC,QAAQC,IAAI,GAAIN,IAI9B,OAHAA,EAAIA,EAAEyC,MACNb,EAAI,IAAIvB,QAAQ,IAAIC,IAAIN,GAAGyD,MAAMtD,GAE1ByB,CACX,EAEArC,OAAOmE,UAAY,SAAmBC,EAAMC,EAAOC,GAClD,MAAO,IAAMF,EAAO,iBAAmBC,EAAQ,+BAAiCC,EAAO,KAAOF,EAAO,GACtG,C,uCCnIA,SAAWG,EAAQC,GACgDC,EAAOC,QAAUF,GAGjF,CAJH,CAIKG,GAAO,WAAc,aAEtB,SAASC,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,CACA,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAM/E,OAAQgF,IAAK,CACrC,IAAIC,EAAaF,EAAMC,GACvBC,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjD/C,OAAOgD,eAAeP,EAAQQ,EAAeL,EAAWM,KAAMN,EAChE,CACF,CACA,SAASO,EAAab,EAAac,EAAYC,GAM7C,OALID,GAAYZ,EAAkBF,EAAYgB,UAAWF,GACrDC,GAAab,EAAkBF,EAAae,GAChDrD,OAAOgD,eAAeV,EAAa,YAAa,CAC9CS,UAAU,IAELT,CACT,CACA,SAASiB,EAAaC,EAAOC,GAC3B,GAAqB,kBAAVD,GAAgC,OAAVA,EAAgB,OAAOA,EACxD,IAAIE,EAAOF,EAAMG,OAAOC,aACxB,QAAazE,IAATuE,EAAoB,CACtB,IAAIG,EAAMH,EAAKI,KAAKN,EAAOC,GAAQ,WACnC,GAAmB,kBAARI,EAAkB,OAAOA,EACpC,MAAM,IAAItB,UAAU,+CACtB,CACA,OAAiB,WAATkB,EAAoBM,OAASnD,QAAQ4C,EAC/C,CACA,SAASP,EAAee,GACtB,IAAId,EAAMK,EAAaS,EAAK,UAC5B,MAAsB,kBAARd,EAAmBA,EAAMa,OAAOb,EAChD,CAKA,IAAIe,EAAwB,WAS1B,SAASA,EAASC,GAChB9B,EAAgBD,KAAM8B,GACtB9B,KAAKgC,IAAM,IAAIC,IAMfjC,KAAKkC,WAAQlF,EACbgD,KAAKmC,UAAOnF,EACZgD,KAAK+B,QAAUA,CACjB,CAqGA,OApGAf,EAAac,EAAU,CAAC,CACtBf,IAAK,OACLqB,IAAK,WACH,OAAOpC,KAAKgC,IAAIK,IAClB,GAOC,CACDtB,IAAK,MACLuB,MAAO,SAAavB,GAClB,IAAIwB,EAAOvC,KAAKgC,IAAII,IAAIrB,GACxB,QAAa/D,IAATuF,EAsCJ,OA7BIA,IAASvC,KAAKkC,QAIZK,IAASvC,KAAKmC,MAEhBnC,KAAKmC,KAAOI,EAAKC,KAMjBxC,KAAKmC,KAAKM,UAAOzF,IAMjBuF,EAAKC,KAAKC,KAAOF,EAAKE,KAEtBF,EAAKE,KAAKD,KAAOD,EAAKC,MAExBD,EAAKE,KAAOzC,KAAKkC,MAIjBlC,KAAKkC,MAAMM,KAAOD,EAClBvC,KAAKkC,MAAQK,GAERA,EAAKD,KACd,GAQC,CACDvB,IAAK,MACLuB,MAAO,SAAavB,EAAKuB,GAEvB,KAAItC,KAAK+B,QAAU,GAAnB,CAGA,GAAI/B,KAAKgC,IAAIU,IAAI3B,GACf,MAAM,IAAI4B,MAAM,4CAElB,IAAIJ,EAAO,IAAIK,EAAS7B,EAAKuB,QAEVtF,IAAfgD,KAAKkC,OAGPlC,KAAKkC,MAAQK,EACbvC,KAAKmC,KAAOI,IAGZA,EAAKE,KAAOzC,KAAKkC,MACjBlC,KAAKkC,MAAMM,KAAOD,EAClBvC,KAAKkC,MAAQK,GAEfvC,KAAKgC,IAAIa,IAAI9B,EAAKwB,GAClB,MAAOvC,KAAKgC,IAAIK,KAAOrC,KAAK+B,QAAS,CAMnC,IAAII,EAAOnC,KAAKmC,KAChBnC,KAAKgC,IAAI,UAAUG,EAAKpB,KACxBf,KAAKmC,KAAOA,EAAKK,KAEjBxC,KAAKmC,KAAKM,UAAOzF,CACnB,CA7BA,CA8BF,KAEK8E,CACT,CA1H4B,GA8HxBc,EAAwB5B,GAAa,SAAS4B,EAAS7B,EAAKuB,GAC9DrC,EAAgBD,KAAM4C,GACtB5C,KAAKyC,UAAOzF,EACZgD,KAAKwC,UAAOxF,EACZgD,KAAKe,IAAMA,EACXf,KAAKsC,MAAQA,CACf,IAEIQ,EAAyB,GACzBC,EAAY,KACZC,EAAazF,KAAKxB,MAAM,MACxBkH,EAAkB,EAAI,KACtBC,EAAiB,IACjBC,GAAkB,IAClBC,EAAkB,EAClBC,EAAiC,KACjCC,EAAY,WAMd,IADA,IAAIC,EAAa,GACR/C,EAAI2C,EAAiB,EAAG3C,GAAK0C,EAAgB1C,IACpD+C,EAAWC,KAAK/E,OAAO,KAAO+B,IAEhC,IAAIiD,EAAuB,IAC3B,OAAO,SAAUC,GACf,OAAOH,EAAWG,EAAQD,EAC5B,CACF,CAbgB,GAgBZE,EAAmB,CAAC,EAAGpG,KAAKqG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpDC,EAAuB,CAAC,CAE5B,EAAG,mBAAuB,mBAAuB,mBAAuB,mBAAuB,mBAAuB,mBAAuB,mBAAuB,kBAAuB,mBAAuB,GAAI,CAEtN,EAAG,mBAAuB,kBAAuB,mBAAuB,mBAAuB,mBAAuB,mBAAuB,kBAAuB,mBAAuB,mBAAuBtG,KAAKqG,GACpN,CAEH,EAAG,mBAAoB,mBAAoB,iBAAkB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,GAAI,CAEvL,EAAG,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,GAAI,CAEzL,EAAG,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,GAAI,CAExL,EAAG,kBAAmB,kBAAmB,mBAAoB,mBAAoB,iBAAkB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,GAAI,CAEtL,EAAG,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,iBAAkB,mBAAoB,kBAAmB,kBAAmB,GAAI,CAEvL,EAAG,mBAAoB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,GAAI,CAExL,EAAG,mBAAoB,kBAAmB,iBAAkB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,GAAI,CAErL,EAAG,mBAAuB,mBAAuB,mBAAuB,kBAAsB,mBAAuB,kBAAuB,mBAAuB,kBAAuB,kBAAuB,KAC7ME,EAAuB,CAAC,EAE3B,GAAI,mBAAqB,mBAAqB,mBAAqB,mBAAqB,mBAAqB,mBAAqB,mBAAqB,kBAAoB,mBAAqB,GAAI,EAEpM,GAAI,iBAAmB,iBAAmB,gBAAkB,iBAAmB,iBAAmB,iBAAmB,iBAAmB,iBAAmB,gBAAkB,GAC3K,EAEF,GAAI,mBAAqB,mBAAqB,mBAAqB,mBAAqB,kBAAoB,mBAAqB,oBAAsB,mBAAqB,mBAAqB,GAAI,EAErM,GAAI,mBAAqB,kBAAoB,mBAAqB,mBAAqB,mBAAqB,oBAAsB,mBAAqB,mBAAqB,kBAAoB,GAAI,EAEpM,GAAI,mBAAqB,mBAAqB,mBAAqB,mBAAqB,mBAAqB,oBAAsB,oBAAsB,oBAAsB,mBAAqB,GAAI,EAExM,GAAI,mBAAqB,mBAAqB,mBAAqB,kBAAoB,mBAAqB,mBAAqB,oBAAsB,mBAAqB,mBAAqB,GAAI,EAErM,GAAI,mBAAqB,mBAAqB,mBAAqB,mBAAqB,oBAAsB,oBAAsB,mBAAqB,mBAAqB,mBAAqB,GAAI,EAEvM,GAAI,mBAAqB,mBAAqB,mBAAqB,mBAAqB,oBAAsB,oBAAsB,oBAAsB,kBAAoB,mBAAqB,GAAI,EAEvM,GAAI,mBAAqB,mBAAqB,mBAAqB,oBAAsB,kBAAoB,mBAAqB,oBAAsB,oBAAsB,kBAAoB,GAAI,EAEtM,GAAI,mBAAqB,kBAAoB,mBAAqB,mBAAqB,mBAAqB,oBAAsB,mBAAqB,oBAAsB,oBAAsB,IAChMC,EAAI,SAAWzB,GACjB,OAAOnG,EAAQ6H,kBAAkB1B,EACnC,EACI2B,EAAK,SAAY5F,EAAMC,EAAOrB,GAChC,OAAOd,EAAQ+H,eAAe7F,EAAMC,EAAOrB,EAC7C,EACIkH,EAAQ,SAAe9F,EAAMC,EAAOrB,GACtC,OAAOd,EAAQiI,2BAA2B/F,EAAMC,EAAOrB,EACzD,EACIoH,EAAgB,SAAuB/B,EAAOgC,GAChD,IAAIC,EAAMD,EAAS,EACfE,EAAYjH,KAAK+B,KAAK/B,KAAKxB,MAAMwB,KAAKZ,IAAI2F,KAC1CmC,EAAUlH,KAAKmH,MAAMpC,EAAQ/E,KAAKnB,IAAI,GAAImI,EAAMC,IAAcjH,KAAKnB,IAAI,GAAIoI,EAAYD,GAC3F,OAAOI,WAAWF,EAAQvH,QAAQK,KAAKC,IAAI+G,EAAMC,EAAW,IAC9D,EACII,EAAa,SAAoBC,GACnC,OAAOtH,KAAKc,KAAKwG,GAAKtH,KAAKxB,MAAMwB,KAAKZ,IAAIkI,GAC5C,EAEIC,EAAU,SAAiBD,GAC7B,IAAKE,SAASF,GACZ,OAAOA,EAET,GAAIA,GAAK,GACP,OAAIA,IAAMtH,KAAKyH,MAAMH,GACZpG,OAAOwG,kBAET,EAET,IAAIC,EAAQ,EACZ,MAAOL,EAAI,GACTK,GAAgBL,IACdA,EAEJA,GAAK,EACL,IAAIM,EAAI,kBACRA,IAASN,EAAI,IAAOtH,KAAK6H,IAAIP,GAC7BM,GAAQN,EACR,IAAIQ,EAAKR,EAAIA,EACTS,EAAKT,EAgBT,OAfAM,GAAQ,GAAK,GAAKG,GAClBA,GAAUD,EACVF,GAAQ,GAAK,IAAMG,GACnBA,GAAUD,EACVF,GAAQ,GAAK,KAAOG,GACpBA,GAAUD,EACVF,GAAQ,GAAK,KAAOG,GACpBA,GAAUD,EACVF,GAAQ,GAAK,KAAOG,GACpBA,GAAUD,EACVF,GAAQ,KAAO,OAASG,GACxBA,GAAUD,EACVF,GAAQ,GAAK,KAAOG,GACpBA,GAAUD,EACVF,GAAQ,MAAQ,OAASG,GAClB/H,KAAKgI,IAAIJ,GAAKD,CACvB,EACIM,EAAS,mBACTC,EAAQ,kBAIRC,EAAa,SAAoBC,GACnC,IAEIC,EACAC,EAHAC,EAAMC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,MAC1EC,IAAYD,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,KAAmBA,UAAU,GAG/E,IAAKtH,OAAOsG,SAASY,GACnB,OAAOA,EAET,GAAIK,EAAW,CACb,GAAU,IAANL,EACF,OAAOA,EAET,GAAU,IAANA,EACF,OAAOF,EAGPG,EADED,EAAI,GACF,EAEApI,KAAK6H,IAAIO,GAAKpI,KAAK6H,IAAI7H,KAAK6H,IAAIO,GAExC,KAAO,CACL,GAAU,IAANA,EAAS,OAAQM,IAEnBL,EADED,IAAM,IACH,EAEDpI,KAAK6H,KAAKO,GAAKpI,KAAK6H,KAAK7H,KAAK6H,KAAKO,GAE3C,CACA,IAAK,IAAInF,EAAI,EAAGA,EAAI,MAAOA,EAAG,CAE5B,GADAqF,GAAMF,EAAIpI,KAAKgI,KAAKK,GAAKA,EAAIA,IAAMA,EAAI,GACnCrI,KAAKZ,IAAIkJ,EAAKD,GAAKE,EAAMvI,KAAKZ,IAAIkJ,GACpC,OAAOA,EAEPD,EAAIC,CAER,CACA,MAAMlD,MAAM,iCAAiCuD,OAAOP,EAAEQ,YAExD,EAMA,SAASC,EAAWT,GAClB,IAEIC,EACAS,EAAIC,EAAMT,EAHVC,EAAMC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,MAC1EC,IAAYD,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,KAAmBA,UAAU,GAG/E,IAAKtH,OAAOsG,SAASY,EAAE1I,KACrB,OAAO,IAAId,EAAQwJ,GAErB,GAAIK,EAAW,CACb,GAAIL,EAAE5G,GAAG5C,EAAQoK,OACf,OAAOpC,EAAM,EAAG,EAAG,GAErB,GAAIwB,EAAE5G,GAAG5C,EAAQqK,MAEf,OAAOrK,EAAQsK,WAAWhB,GAG5BG,EAAIzJ,EAAQuK,GAAGf,EACjB,KAAO,CACL,GAAIA,EAAE5G,GAAG5C,EAAQoK,OACf,OAAO,IAAIpK,EAAQA,EAAQwK,SAG7Bf,EAAIzJ,EAAQuK,GAAGf,EAAEpH,MACnB,CAEA,IAAK,IAAIiC,EAAI,EAAGA,EAAI,MAAOA,EAAG,CAI5B,GAHA6F,EAAKT,EAAErH,MAAMgH,MACbe,EAAOV,EAAEnJ,IAAIkJ,EAAEnJ,IAAI6J,IACnBR,EAAKD,EAAEnJ,IAAI6J,EAAKpK,IAAI0J,EAAEtJ,IAAI,GAAGG,IAAImJ,EAAEtJ,IAAI,GAAGE,IAAI8J,GAAMpK,IAAIC,EAAQK,IAAI,EAAGoJ,GAAGtJ,IAAI,OAC1EH,EAAQQ,IAAIkJ,EAAGpJ,IAAImJ,IAAIrJ,GAAGJ,EAAQQ,IAAIkJ,GAAIrJ,IAAIsJ,IAChD,OAAOD,EAEPD,EAAIC,CAER,CACA,MAAMlD,MAAM,iCAAiCuD,OAAOP,EAAEQ,YAExD,CAIA,IAAIhK,EAAuB,WACzB,SAASA,EAAQmG,GACfrC,EAAgBD,KAAM7D,GACtB6D,KAAK3B,KAAO,EACZ2B,KAAK/C,IAAM,EACX+C,KAAK1B,MAAQ,EACTgE,aAAiBnG,EACnB6D,KAAK4G,YAAYtE,GACS,kBAAVA,EAChBtC,KAAKyG,WAAWnE,GACU,kBAAVA,GAChBtC,KAAK6G,WAAWvE,EAEpB,CAm4IA,OAl4IAtB,EAAa7E,EAAS,CAAC,CACrB4E,IAAK,IACLqB,IAAK,WACH,GAAkB,IAAdpC,KAAK3B,KACP,OAAO,EACF,GAAmB,IAAf2B,KAAK1B,MAAa,CAC3B,IAEIwI,EAFAvB,EAAMhI,KAAKvB,MAAMuB,KAAKxB,MAAMiE,KAAK/C,MAQrC,OAJE6J,EADe,SAAb9G,KAAK/C,IACD,EAEA+C,KAAK/C,IAAMqG,EAAUiC,GAEtBvF,KAAK3B,KAAOyI,CACrB,CAAO,GAAmB,IAAf9G,KAAK1B,MAAa,CAC3B,IAAIyI,EAAU/G,KAAK/C,IAAMM,KAAKvB,MAAMgE,KAAK/C,KACzC,OAAO+C,KAAK3B,KAAOd,KAAKnB,IAAI,GAAI2K,EAClC,CAEE,OAAO/G,KAAK3B,IAEhB,EACAwE,IAAK,SAAaP,GACZtC,KAAK1B,OAAS,EAChB0B,KAAKgH,qBAAqB1E,EAAOtC,KAAKlE,IAGtCkE,KAAK3B,KAAOd,KAAKc,KAAKiE,GACJ,IAAdtC,KAAK3B,OACP2B,KAAK1B,MAAQ,EACb0B,KAAKiH,SAAW,GAGtB,GACC,CACDlG,IAAK,IACLqB,IAAK,WACH,OAAkB,IAAdpC,KAAK3B,KACA,EACiB,IAAf2B,KAAK1B,MACPf,KAAKvB,MAAMuB,KAAKxB,MAAMiE,KAAK/C,MACV,IAAf+C,KAAK1B,MACPf,KAAKvB,MAAMgE,KAAK/C,KACC,IAAf+C,KAAK1B,MACPf,KAAKvB,MAAMuB,KAAKc,KAAK2B,KAAK/C,KAAOM,KAAKnB,IAAI,GAAImB,KAAKZ,IAAIqD,KAAK/C,OAE5D+C,KAAK/C,IAAMwB,OAAOC,iBAE7B,EACAmE,IAAK,SAAaP,GAChBtC,KAAKgH,qBAAqBhH,KAAK/D,EAAGqG,EACpC,GACC,CACDvB,IAAK,IACLqB,IAAK,WACH,OAAOpC,KAAK3B,IACd,EACAwE,IAAK,SAAaP,GACF,IAAVA,GACFtC,KAAK3B,KAAO,EACZ2B,KAAK1B,MAAQ,EACb0B,KAAK/C,IAAM,GAEX+C,KAAK3B,KAAOiE,CAEhB,GAEC,CACDvB,IAAK,WACLqB,IAAK,WACH,OAAOpC,KAAK/D,CACd,EACA4G,IAAK,SAAaP,GAChBtC,KAAK/D,EAAIqG,CACX,GACC,CACDvB,IAAK,WACLqB,IAAK,WACH,OAAOpC,KAAKlE,CACd,EACA+G,IAAK,SAAaP,GAChBtC,KAAKlE,EAAIwG,CACX,GAIC,CACDvB,IAAK,YACLuB,MAMA,WAgBE,GAAkB,IAAdtC,KAAK3B,MAA2B,IAAb2B,KAAK/C,KAA4B,IAAf+C,KAAK1B,OAAe0B,KAAK/C,MAAQwB,OAAOwG,mBAAqBjF,KAAK1B,MAAQ,GAAKG,OAAOsG,SAAS/E,KAAK1B,OAI3I,OAHA0B,KAAK3B,KAAO,EACZ2B,KAAK/C,IAAM,EACX+C,KAAK1B,MAAQ,EACN0B,KAQT,GALmB,IAAfA,KAAK1B,OAAe0B,KAAK/C,IAAM,IACjC+C,KAAK/C,KAAO+C,KAAK/C,IACjB+C,KAAK3B,MAAQ2B,KAAK3B,MAGhB2B,KAAK/C,MAAQwB,OAAOC,mBAAqBsB,KAAK1B,QAAUG,OAAOC,mBAAqBsB,KAAK/C,MAAQwB,OAAOwG,mBAAqBjF,KAAK1B,QAAUG,OAAOwG,kBAGrJ,OAFAjF,KAAK/C,IAAMwB,OAAOC,kBAClBsB,KAAK1B,MAAQG,OAAOC,kBACbsB,KAGT,GAAmB,IAAfA,KAAK1B,OAAe0B,KAAK/C,IAAMgG,EAGjC,OAFAjD,KAAK1B,OAAS,EACd0B,KAAK/C,IAAMM,KAAKxB,MAAMiE,KAAK/C,KACpB+C,KAET,IAAIkH,EAAS3J,KAAKZ,IAAIqD,KAAK/C,KACvBkK,EAAU5J,KAAKc,KAAK2B,KAAK/C,KAC7B,GAAIiK,GAAUnE,EAGZ,OAFA/C,KAAK1B,OAAS,EACd0B,KAAK/C,IAAMkK,EAAU5J,KAAKxB,MAAMmL,GACzBlH,KAEP,MAAOkH,EAASlE,GAAchD,KAAK1B,MAAQ,EACzC0B,KAAK1B,OAAS,EACK,IAAf0B,KAAK1B,MACP0B,KAAK/C,IAAMM,KAAKnB,IAAI,GAAI4D,KAAK/C,MAE7B+C,KAAK/C,IAAMkK,EAAU5J,KAAKnB,IAAI,GAAI8K,GAClCA,EAAS3J,KAAKZ,IAAIqD,KAAK/C,KACvBkK,EAAU5J,KAAKc,KAAK2B,KAAK/C,MAmB/B,OAhBqB,IAAf+C,KAAK1B,QACH0B,KAAK/C,IAAM,GAEb+C,KAAK/C,KAAO+C,KAAK/C,IACjB+C,KAAK3B,MAAQ2B,KAAK3B,MACI,IAAb2B,KAAK/C,MAEd+C,KAAK3B,KAAO,KAIdI,OAAOL,MAAM4B,KAAK3B,OAASI,OAAOL,MAAM4B,KAAK1B,QAAUG,OAAOL,MAAM4B,KAAK/C,QAC3E+C,KAAK3B,KAAOI,OAAO2I,IACnBpH,KAAK1B,MAAQG,OAAO2I,IACpBpH,KAAK/C,IAAMwB,OAAO2I,KAEbpH,IACT,GAMC,CACDe,IAAK,iBACLuB,MAAO,SAAwBjE,EAAMC,EAAOrB,GAK1C,OAJA+C,KAAK3B,KAAOA,EACZ2B,KAAK1B,MAAQA,EACb0B,KAAK/C,IAAMA,EACX+C,KAAKqH,YACErH,IACT,GAMC,CACDe,IAAK,6BACLuB,MAAO,SAAoCjE,EAAMC,EAAOrB,GAItD,OAHA+C,KAAK3B,KAAOA,EACZ2B,KAAK1B,MAAQA,EACb0B,KAAK/C,IAAMA,EACJ+C,IACT,GAMC,CACDe,IAAK,uBACLuB,MAAO,SAA8BgF,EAAUL,GAM7C,OALAjH,KAAK1B,MAAQ,EACb0B,KAAK3B,KAAOd,KAAKc,KAAKiJ,GACtBA,EAAW/J,KAAKZ,IAAI2K,GACpBtH,KAAK/C,IAAMgK,EAAW1J,KAAKxB,MAAMuL,GACjCtH,KAAKqH,YACErH,IACT,GAMC,CACDe,IAAK,mCACLuB,MAAO,SAA0CgF,EAAUL,GAGzD,OADAjH,KAAKgH,qBAAqBM,EAAUL,GAC7BjH,IACT,GAMC,CACDe,IAAK,cACLuB,MAAO,SAAqBA,GAI1B,OAHAtC,KAAK3B,KAAOiE,EAAMjE,KAClB2B,KAAK1B,MAAQgE,EAAMhE,MACnB0B,KAAK/C,IAAMqF,EAAMrF,IACV+C,IACT,GAMC,CACDe,IAAK,aACLuB,MAAO,SAAoBA,GAKzB,OAJAtC,KAAK/C,IAAMM,KAAKZ,IAAI2F,GACpBtC,KAAK3B,KAAOd,KAAKc,KAAKiE,GACtBtC,KAAK1B,MAAQ,EACb0B,KAAKqH,YACErH,IACT,GAQC,CACDe,IAAK,aACLuB,MAAO,SAAoBA,GACzB,IAAIiF,EAAexB,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC9EyB,EAAgBlF,EAChBmF,EAAStL,EAAQuL,gBAAgBtF,IAAIoF,GACzC,QAAexK,IAAXyK,EACF,OAAOzH,KAAK4G,YAAYa,GAGxBnF,EAAQA,EAAMxF,QAAQ,IAAK,IAG7B,IAAI6K,EAAiBrF,EAAMjF,MAAM,OACjC,GAA8B,IAA1BsK,EAAenM,OAAc,CAC/B,IAAIoM,EAAQjD,WAAWgD,EAAe,IAClCE,EAAUlD,WAAWgD,EAAe,IACpCG,EAAcH,EAAe,GAAGtK,MAAM,KACtC0K,EAAU,EAOd,GAN2B,IAAvBD,EAAYtM,SACduM,EAAUpD,WAAWmD,EAAY,IAC5B/C,SAASgD,KACZA,EAAU,IAGVhD,SAAS6C,IAAU7C,SAAS8C,GAAU,CACxC,IAAI1I,EAAShD,EAAQ6L,QAAQJ,EAAOC,EAASE,EAASR,GAOtD,OANAvH,KAAK3B,KAAOc,EAAOd,KACnB2B,KAAK1B,MAAQa,EAAOb,MACpB0B,KAAK/C,IAAMkC,EAAOlC,IACdd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IACT,CACF,CAEA,IAAIiI,EAAiB3F,EAAMjF,MAAM,MACjC,GAA8B,IAA1B4K,EAAezM,OAAc,CAC/B,IAAI0M,EAASvD,WAAWsD,EAAe,IACnCE,EAAWxD,WAAWsD,EAAe,IACrCG,EAAeH,EAAe,GAAG5K,MAAM,KACvCgL,EAAW,EAOf,GAN4B,IAAxBD,EAAa5M,SACf6M,EAAW1D,WAAWyD,EAAa,IAC9BrD,SAASsD,KACZA,EAAW,IAGXtD,SAASmD,IAAWnD,SAASoD,GAAW,CAC1C,IAAIG,EAAUnM,EAAQoM,QAAQL,EAAQC,EAAUE,EAAUd,GAO1D,OANAvH,KAAK3B,KAAOiK,EAAQjK,KACpB2B,KAAK1B,MAAQgK,EAAQhK,MACrB0B,KAAK/C,IAAMqL,EAAQrL,IACfd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IACT,CACF,CAEA,IAkBIwI,EACAC,EAnBAC,EAAWpG,EAAMjF,MAAM,KAC3B,GAAwB,IAApBqL,EAASlN,OAAc,CACzB,IAAImN,EAAShE,WAAW+D,EAAS,IAC7BE,EAAYjE,WAAW+D,EAAS,IACpC,GAAI3D,SAAS4D,IAAW5D,SAAS6D,GAAY,CAC3C,IAAIC,EAAW1M,EAAQC,IAAIuM,EAAQC,GAOnC,OANA5I,KAAK3B,KAAOwK,EAASxK,KACrB2B,KAAK1B,MAAQuK,EAASvK,MACtB0B,KAAK/C,IAAM4L,EAAS5L,IAChBd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IACT,CACF,CAEAsC,EAAQA,EAAMwG,OAAOC,cAIrB,IAAIC,EAAU1G,EAAMjF,MAAM,MAC1B,GAAuB,IAAnB2L,EAAQxN,OAAc,CACxBgN,EAAO,GACP,IAAIS,GAAW,EACM,KAAjBD,EAAQ,GAAG,KACbC,GAAW,EACXD,EAAQ,GAAKA,EAAQ,GAAGtN,MAAM,IAEhC+M,EAAS9D,WAAWqE,EAAQ,IAC5BA,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrCkM,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrC,IAAIoM,EAAYvE,WAAWqE,EAAQ,IAInC,GAHKjE,SAASmE,KACZA,EAAY,GAEVnE,SAASyD,IAASzD,SAAS0D,GAAS,CACtC,IAAIU,EAAWhN,EAAQoM,QAAQC,EAAMC,EAAQS,EAAW3B,GAQxD,OAPAvH,KAAK3B,KAAO8K,EAAS9K,KACrB2B,KAAK1B,MAAQ6K,EAAS7K,MACtB0B,KAAK/C,IAAMkM,EAASlM,IAChBd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE7DiJ,IAAUjJ,KAAK3B,OAAS,GACrB2B,IACT,CACF,CAGA,GADAgJ,EAAU1G,EAAMjF,MAAM,KACC,IAAnB2L,EAAQxN,OAAc,CACxBgN,EAAO,GACP,IAAIY,GAAY,EACK,KAAjBJ,EAAQ,GAAG,KACbI,GAAY,EACZJ,EAAQ,GAAKA,EAAQ,GAAGtN,MAAM,IAEhC+M,EAAS9D,WAAWqE,EAAQ,IAC5BA,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrCkM,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrC,IAAIuM,EAAY1E,WAAWqE,EAAQ,IAInC,GAHKjE,SAASsE,KACZA,EAAY,GAEVtE,SAASyD,IAASzD,SAAS0D,GAAS,CACtC,IAAIa,EAAWnN,EAAQoM,QAAQC,EAAMC,EAAQY,EAAW9B,GAQxD,OAPAvH,KAAK3B,KAAOiL,EAASjL,KACrB2B,KAAK1B,MAAQgL,EAAShL,MACtB0B,KAAK/C,IAAMqM,EAASrM,IAChBd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE7DoJ,IAAWpJ,KAAK3B,OAAS,GACtB2B,IACT,CACF,CAGA,GADAgJ,EAAU1G,EAAMjF,MAAM,KACC,IAAnB2L,EAAQxN,OAAc,CACxBgN,EAAO,GACP,IAAIe,GAAa,EACI,KAAjBP,EAAQ,GAAG,KACbO,GAAa,EACbP,EAAQ,GAAKA,EAAQ,GAAGtN,MAAM,IAEhCsN,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrCkM,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrC,IAAI0M,EAAY7E,WAAWqE,EAAQ,IAOnC,GANAA,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrCkM,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrC2L,EAAS9D,WAAWqE,EAAQ,IACvBjE,SAASyE,KACZA,EAAY,GAEVzE,SAASyD,IAASzD,SAAS0D,GAAS,CACtC,IAAIgB,EAAWtN,EAAQoM,QAAQC,EAAMC,EAAQe,EAAWjC,GAQxD,OAPAvH,KAAK3B,KAAOoL,EAASpL,KACrB2B,KAAK1B,MAAQmL,EAASnL,MACtB0B,KAAK/C,IAAMwM,EAASxM,IAChBd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE7DuJ,IAAYvJ,KAAK3B,OAAS,GACvB2B,IACT,CACF,CACA,IAAI0J,EAAQpH,EAAMjF,MAAM,KACpBsM,EAASD,EAAMlO,OAAS,EAE5B,GAAe,IAAXmO,EAAc,CAChB,IAAIC,EAAgBjF,WAAWrC,GAC/B,GAAIyC,SAAS6E,GAKX,OAJA5J,KAAKyG,WAAWmD,GACZzN,EAAQuL,gBAAgBrF,MAAQ,GAClClG,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IAEX,MAAO,GAAe,IAAX2J,EAAc,CAEvB,IAAIE,EAAiBlF,WAAWrC,GAChC,GAAIyC,SAAS8E,IAAsC,IAAnBA,EAK9B,OAJA7J,KAAKyG,WAAWoD,GACZ1N,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IAEX,CAEA,IAAI8J,EAAWxH,EAAMjF,MAAM,MAC3B,GAAwB,IAApByM,EAAStO,OAAc,CACzBwE,KAAK3B,KAAO,EACiB,KAAzByL,EAAS,GAAGC,OAAO,KACrB/J,KAAK3B,MAAQ,GAGf,IADA,IAAI2L,EAAc,GACTxJ,EAAI,EAAGA,EAAIsJ,EAAS,GAAGtO,SAAUgF,EAAG,CAC3C,IAAIyJ,EAAUH,EAAS,GAAGI,WAAW1J,GACrC,KAAIyJ,GAAW,IAAMA,GAAW,IAAkB,MAAZA,GAIjC,CAIH,GAHAjK,KAAK1B,MAAQqG,WAAWqF,GACxBhK,KAAK/C,IAAM0H,WAAWmF,EAAS,GAAGK,OAAO3J,EAAI,IAEzCR,KAAK1B,MAAQ,GAAK0B,KAAK1B,MAAQ,GAAK,EAAG,CACzC,IAAI8L,EAAWjO,EAAQoM,QAAQ,GAAIvI,KAAK1B,MAAO0B,KAAK/C,IAAKsK,GACzDvH,KAAK3B,KAAO+L,EAAS/L,KACrB2B,KAAK1B,MAAQ8L,EAAS9L,MACtB0B,KAAK/C,IAAMmN,EAASnN,GACtB,CAKA,OAJA+C,KAAKqH,YACDlL,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IACT,CAjBEgK,GAAeF,EAAS,GAAGC,OAAOvJ,EAkBtC,CACF,CACA,GAAImJ,EAAS,EAOX,OANA3J,KAAK3B,KAAO,EACZ2B,KAAK1B,MAAQ,EACb0B,KAAK/C,IAAM,EACPd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,KAET,IAAIsH,EAAW3C,WAAW+E,EAAM,IAChC,GAAiB,IAAbpC,EAOF,OANAtH,KAAK3B,KAAO,EACZ2B,KAAK1B,MAAQ,EACb0B,KAAK/C,IAAM,EACPd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,KAET,IAAIiH,EAAWtC,WAAW+E,EAAMA,EAAMlO,OAAS,IAE/C,GAAImO,GAAU,EAAG,CACf,IAAIU,EAAK1F,WAAW+E,EAAMA,EAAMlO,OAAS,IACrCuJ,SAASsF,KACXpD,GAAY1J,KAAKc,KAAKgM,GACtBpD,GAAYrC,EAAWyF,GAE3B,CAEA,GAAKtF,SAASuC,GAMT,GAAe,IAAXqC,EACP3J,KAAK3B,KAAOd,KAAKc,KAAKiJ,GACtBtH,KAAK1B,MAAQ,EAEb0B,KAAK/C,IAAMgK,EAAW1J,KAAKxB,MAAMwB,KAAKZ,IAAI2K,QAGvC,CAGH,GAFAtH,KAAK3B,KAAOd,KAAKc,KAAKiJ,GACtBtH,KAAK1B,MAAQqL,EACE,IAAXA,EAAc,CAChB,IAAIW,EAAWnO,EAAQK,IAAIyH,EAAG,EAAG,EAAGgD,GAAWlD,EAAEuD,IAOjD,OANAtH,KAAK3B,KAAOiM,EAASjM,KACrB2B,KAAK1B,MAAQgM,EAAShM,MACtB0B,KAAK/C,IAAMqN,EAASrN,IAChBd,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IACT,CAEEA,KAAK/C,IAAMgK,CAEf,MA5BEjH,KAAK3B,KAAoB,MAAbqL,EAAM,IAAc,EAAI,EACpC1J,KAAK1B,MAAQqL,EACb3J,KAAK/C,IAAMgK,EA+Bb,OAJAjH,KAAKqH,YACDlL,EAAQuL,gBAAgB3F,SAAW,GACrC5F,EAAQuL,gBAAgB7E,IAAI2E,EAAerL,EAAQyK,YAAY5G,OAE1DA,IACT,GAMC,CACDe,IAAK,YACLuB,MAAO,SAAmBA,GACxB,OAAIA,aAAiBnG,EACZ6D,KAAK4G,YAAYtE,GAEL,kBAAVA,EACFtC,KAAKyG,WAAWnE,GAEJ,kBAAVA,EACFtC,KAAK6G,WAAWvE,IAEzBtC,KAAK3B,KAAO,EACZ2B,KAAK1B,MAAQ,EACb0B,KAAK/C,IAAM,EACJ+C,KACT,GAIC,CACDe,IAAK,WACLuB,MAAO,WACL,OAAItC,KAAK/C,MAAQwB,OAAOC,mBAAqBsB,KAAK1B,QAAUG,OAAOC,mBAAmC,IAAdsB,KAAK3B,KACpFI,OAAOC,kBAEZsB,KAAK/C,MAAQwB,OAAOC,mBAAqBsB,KAAK1B,QAAUG,OAAOC,oBAAoC,IAAfsB,KAAK3B,KACpFI,OAAOwG,kBAEXxG,OAAOsG,SAAS/E,KAAK1B,OAGP,IAAf0B,KAAK1B,MACA0B,KAAK3B,KAAO2B,KAAK/C,IACA,IAAf+C,KAAK1B,MACP0B,KAAK3B,KAAOd,KAAKnB,IAAI,GAAI4D,KAAK/C,KAG9B+C,KAAK/C,IAAM,EAAI+C,KAAK3B,KAAO,EAAII,OAAOC,kBAAoBD,OAAOwG,kBAAoB,EARrFxG,OAAO2I,GAUlB,GACC,CACDrG,IAAK,4BACLuB,MAAO,SAAmCgC,GAExC,OAAIlG,MAAM4B,KAAK/D,GACNwC,OAAO2I,IAED,IAAXpH,KAAK/D,EACA,EAEFoI,EAAcrE,KAAK/D,EAAGqI,EAC/B,GACC,CACDvD,IAAK,6BACLuB,MAAO,SAAoCgC,GAEzC,OAAIlG,MAAM4B,KAAK/C,KACNwB,OAAO2I,IAEC,IAAbpH,KAAK/C,IACA,EAEFoH,EAAcrE,KAAK/C,IAAKqH,EACjC,GAMC,CACDvD,IAAK,WACLuB,MAAO,WACL,OAAIlE,MAAM4B,KAAK1B,QAAUF,MAAM4B,KAAK3B,OAASD,MAAM4B,KAAK/C,KAC/C,MAEL+C,KAAK/C,MAAQwB,OAAOC,mBAAqBsB,KAAK1B,QAAUG,OAAOC,kBAC5C,IAAdsB,KAAK3B,KAAa,WAAa,YAErB,IAAf2B,KAAK1B,MACH0B,KAAK/C,IAAM,MAAQ+C,KAAK/C,IAAM,MAAqB,IAAb+C,KAAK/C,KACrC+C,KAAK3B,KAAO2B,KAAK/C,KAAKkJ,WAEzBnG,KAAK/D,EAAI,IAAM+D,KAAKlE,EACH,IAAfkE,KAAK1B,MACP0B,KAAK/D,EAAI,IAAM+D,KAAKlE,EAGvBkE,KAAK1B,OAAS8E,IACO,IAAfpD,KAAK3B,KAAc,IAAM,IAAM,IAAIkM,OAAOvK,KAAK1B,OAAS0B,KAAK/C,MAE9C,IAAf+C,KAAK3B,KAAc,IAAM,IAAM,MAAQ2B,KAAK1B,MAAQ,IAAM0B,KAAK/C,GAG7E,GACC,CACD8D,IAAK,gBACLuB,MAAO,SAAuBgC,GAC5B,OAAmB,IAAftE,KAAK1B,OACC0B,KAAK3B,KAAO2B,KAAK/C,KAAKuN,cAAclG,GAEvCtE,KAAK3D,0BAA0BiI,EACxC,GACC,CACDvD,IAAK,UACLuB,MAAO,SAAiBgC,GACtB,OAAmB,IAAftE,KAAK1B,OACC0B,KAAK3B,KAAO2B,KAAK/C,KAAKC,QAAQoH,GAEjCtE,KAAK3D,0BAA0BiI,EACxC,GACC,CACDvD,IAAK,cACLuB,MAAO,SAAqBgC,GAC1B,OAAItE,KAAKlE,IAAM,EACNkE,KAAKwK,cAAclG,EAAS,GAEjCA,EAAStE,KAAKlE,EACTkE,KAAK9C,QAAQoH,EAAStE,KAAKiH,SAAW,GAExCjH,KAAKwK,cAAclG,EAAS,EACrC,GACC,CACDvD,IAAK,UACLuB,MAAO,WACL,OAAOtC,KAAKmG,UACd,GACC,CACDpF,IAAK,SACLuB,MAAO,WACL,OAAOtC,KAAKmG,UACd,GACC,CACDpF,IAAK,4BACLuB,MAAO,SAAmCgC,GACxC,OAAmB,IAAftE,KAAK1B,MACH0B,KAAK/C,IAAM,MAAQ+C,KAAK/C,IAAM,MAAqB,IAAb+C,KAAK/C,KACrC+C,KAAK3B,KAAO2B,KAAK/C,KAAKC,QAAQoH,GAEjCD,EAAcrE,KAAK/D,EAAGqI,GAAU,IAAMD,EAAcrE,KAAKlE,EAAGwI,GAC3C,IAAftE,KAAK1B,MACP+F,EAAcrE,KAAK/D,EAAGqI,GAAU,IAAMD,EAAcrE,KAAKlE,EAAGwI,GAG/DtE,KAAK1B,OAAS8E,IACO,IAAfpD,KAAK3B,KAAc,IAAM,IAAM,IAAIkM,OAAOvK,KAAK1B,OAAS+F,EAAcrE,KAAK/C,IAAKqH,KAEjE,IAAftE,KAAK3B,KAAc,IAAM,IAAM,MAAQ2B,KAAK1B,MAAQ,IAAM+F,EAAcrE,KAAK/C,IAAKqH,EAGhG,GAIC,CACDvD,IAAK,MACLuB,MAAO,WACL,OAAO6B,EAAoB,IAAdnE,KAAK3B,KAAa,EAAI,EAAG2B,KAAK1B,MAAO0B,KAAK/C,IACzD,GAIC,CACD8D,IAAK,MACLuB,MAAO,WACL,OAAO6B,GAAOnE,KAAK3B,KAAM2B,KAAK1B,MAAO0B,KAAK/C,IAC5C,GAIC,CACD8D,IAAK,SACLuB,MAAO,WACL,OAAOtC,KAAKzB,KACd,GAIC,CACDwC,IAAK,UACLuB,MAAO,WACL,OAAOtC,KAAKzB,KACd,GAOC,CACDwC,IAAK,MACLuB,MAAO,WACL,OAAOtC,KAAK3B,IACd,GAIC,CACD0C,IAAK,QACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACNkH,EAAM,EAAG,EAAG,GAEF,IAAfnE,KAAK1B,MACA2F,EAAGjE,KAAK3B,KAAM,EAAGd,KAAKmH,MAAM1E,KAAK/C,MAEnC,IAAId,EAAQ6D,KACrB,GAIC,CACDe,IAAK,QACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,GACM,IAAf+C,KAAK3B,KAAoB8F,GAAO,EAAG,EAAG,GAAeA,EAAM,EAAG,EAAG,IAEpD,IAAfnE,KAAK3B,KAAoB2B,KAAKzB,MAAMe,OAAOf,MAC5B,IAAfyB,KAAK1B,MACA2F,EAAGjE,KAAK3B,KAAM,EAAGd,KAAKvB,MAAMgE,KAAK/C,MAEnC,IAAId,EAAQ6D,KACrB,GAIC,CACDe,IAAK,OACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACK,IAAd+C,KAAK3B,KAAmB8F,EAAM,EAAG,EAAG,GAC5BA,EAAM,EAAG,EAAG,IAEP,IAAfnE,KAAK3B,KAAoB2B,KAAKzB,MAAMvC,QAAQuC,MAC7B,IAAfyB,KAAK1B,MACA2F,EAAGjE,KAAK3B,KAAM,EAAGd,KAAK+B,KAAKU,KAAK/C,MAElC,IAAId,EAAQ6D,KACrB,GAIC,CACDe,IAAK,QACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACNkH,EAAM,EAAG,EAAG,GAEF,IAAfnE,KAAK1B,MACA2F,EAAGjE,KAAK3B,KAAM,EAAGd,KAAKyH,MAAMhF,KAAK/C,MAEnC,IAAId,EAAQ6D,KACrB,GAIC,CACDe,IAAK,MACLuB,MAAO,SAAaA,GAClB,IAuBItE,EACAC,EAxBAE,EAAU4F,EAAEzB,GAEhB,GAAItC,KAAKjB,GAAG5C,EAAQsO,OAAStM,EAAQY,GAAG5C,EAAQwK,UAAY3G,KAAKjB,GAAG5C,EAAQwK,UAAYxI,EAAQY,GAAG5C,EAAQsO,MACzG,OAAO,IAAItO,EAAQA,EAAQuO,MAG7B,IAAKjM,OAAOsG,SAAS/E,KAAK1B,OACxB,OAAO,IAAInC,EAAQ6D,MAErB,IAAKvB,OAAOsG,SAAS5G,EAAQG,OAC3B,OAAO,IAAInC,EAAQgC,GAGrB,GAAkB,IAAd6B,KAAK3B,KACP,OAAO,IAAIlC,EAAQgC,GAErB,GAAqB,IAAjBA,EAAQE,KACV,OAAO,IAAIlC,EAAQ6D,MAGrB,GAAIA,KAAK3B,QAAUF,EAAQE,MAAQ2B,KAAK1B,QAAUH,EAAQG,OAAS0B,KAAK/C,MAAQkB,EAAQlB,IACtF,OAAOkH,EAAM,EAAG,EAAG,GAKrB,GAAInE,KAAK1B,OAAS,GAAKH,EAAQG,OAAS,EACtC,OAAO0B,KAAK2K,OAAOxM,GASrB,GAPIhC,EAAQyO,OAAO5K,KAAM7B,GAAW,GAClCH,EAAI,IAAI7B,EAAQ6D,MAChB/B,EAAI,IAAI9B,EAAQgC,KAEhBH,EAAI,IAAI7B,EAAQgC,GAChBF,EAAI,IAAI9B,EAAQ6D,OAEF,IAAZhC,EAAEM,OAA2B,IAAZL,EAAEK,MACrB,OAAOnC,EAAQsK,WAAWzI,EAAEK,KAAOL,EAAEf,IAAMgB,EAAEI,KAAOJ,EAAEhB,KAExD,IAAI4N,EAAS7M,EAAEM,MAAQf,KAAKc,KAAKL,EAAEf,KAC/B6N,EAAS7M,EAAEK,MAAQf,KAAKc,KAAKJ,EAAEhB,KAEnC,GAAI4N,EAASC,GAAU,EACrB,OAAO9M,EAET,GAAe,IAAX6M,IAA4B,IAAZC,EAAe,CACjC,GAAIvN,KAAKZ,IAAIsB,EAAEhB,IAAMM,KAAKxB,MAAMiC,EAAEf,MAAQ6F,EACxC,OAAO9E,EAEP,IAAI+M,EAAUxN,KAAKnB,IAAI,GAAImB,KAAKxB,MAAMiC,EAAEf,KAAOgB,EAAEhB,KAC7CqK,EAAWrJ,EAAEI,KAAOL,EAAEK,KAAO0M,EACjC,OAAO9G,EAAG1G,KAAKc,KAAKiJ,GAAW,EAAGrJ,EAAEhB,IAAMM,KAAKxB,MAAMwB,KAAKZ,IAAI2K,IAElE,CACA,GAAe,IAAXuD,GAA2B,IAAXC,EAAc,CAChC,GAAIvN,KAAKZ,IAAIqB,EAAEf,IAAMM,KAAKxB,MAAMkC,EAAEhB,MAAQ6F,EACxC,OAAO9E,EAEP,IAAIgN,EAAWzN,KAAKnB,IAAI,GAAI4B,EAAEf,IAAMM,KAAKxB,MAAMkC,EAAEhB,MAC7CgO,EAAYhN,EAAEI,KAAOL,EAAEK,KAAO2M,EAClC,OAAO/G,EAAG1G,KAAKc,KAAK4M,GAAY,EAAG1N,KAAKxB,MAAMkC,EAAEhB,KAAOM,KAAKxB,MAAMwB,KAAKZ,IAAIsO,IAE/E,CACA,GAAI1N,KAAKZ,IAAIqB,EAAEf,IAAMgB,EAAEhB,KAAO6F,EAC5B,OAAO9E,EAEP,IAAIkN,EAAY3N,KAAKnB,IAAI,GAAI4B,EAAEf,IAAMgB,EAAEhB,KACnCkO,EAAalN,EAAEI,KAAOL,EAAEK,KAAO6M,EACnC,OAAOjH,EAAG1G,KAAKc,KAAK8M,GAAa,EAAGlN,EAAEhB,IAAMM,KAAKxB,MAAMwB,KAAKZ,IAAIwO,IAEpE,GAIC,CACDpK,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOtC,KAAK1D,IAAIgG,EAClB,GAIC,CACDvB,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOtC,KAAK1D,IAAIyH,EAAEzB,GAAO/D,MAC3B,GAIC,CACDwC,IAAK,WACLuB,MAAO,SAAkBA,GACvB,OAAOtC,KAAKvD,IAAI6F,EAClB,GAIC,CACDvB,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOtC,KAAKvD,IAAI6F,EAClB,GAIC,CACDvB,IAAK,MACLuB,MAAO,SAAaA,GAClB,IA4BItE,EACAC,EA7BAE,EAAU4F,EAAEzB,GAEhB,GAAItC,KAAKjB,GAAG5C,EAAQsO,OAAStM,EAAQY,GAAG5C,EAAQwK,UAAY3G,KAAKjB,GAAG5C,EAAQwK,UAAYxI,EAAQY,GAAG5C,EAAQsO,MACzG,OAAO,IAAItO,EAAQA,EAAQwK,SAG7B,GAAI3G,KAAK/C,KAAOwB,OAAOC,mBAAqBP,EAAQY,GAAG5C,EAAQoK,QAAUvG,KAAKjB,GAAG5C,EAAQoK,QAAUvG,KAAK/C,KAAOwB,OAAOC,kBACpH,OAAO,IAAIvC,EAAQA,EAAQuO,MAG7B,GAAI1K,KAAKjB,GAAG5C,EAAQwK,UAAYxI,EAAQY,GAAG5C,EAAQwK,SACjD,OAAO,IAAIxK,EAAQA,EAAQsO,MAG7B,IAAKhM,OAAOsG,SAAS/E,KAAK1B,OACxB,OAAO,IAAInC,EAAQ6D,MAErB,IAAKvB,OAAOsG,SAAS5G,EAAQG,OAC3B,OAAO,IAAInC,EAAQgC,GAGrB,GAAkB,IAAd6B,KAAK3B,MAA+B,IAAjBF,EAAQE,KAC7B,OAAO8F,EAAM,EAAG,EAAG,GAGrB,GAAInE,KAAK1B,QAAUH,EAAQG,OAAS0B,KAAK/C,OAASkB,EAAQlB,IACxD,OAAOkH,EAAMnE,KAAK3B,KAAOF,EAAQE,KAAM,EAAG,GAY5C,GAPI2B,KAAK1B,MAAQH,EAAQG,OAAS0B,KAAK1B,OAASH,EAAQG,OAASf,KAAKZ,IAAIqD,KAAK/C,KAAOM,KAAKZ,IAAIwB,EAAQlB,MACrGe,EAAI,IAAI7B,EAAQ6D,MAChB/B,EAAI,IAAI9B,EAAQgC,KAEhBH,EAAI,IAAI7B,EAAQgC,GAChBF,EAAI,IAAI9B,EAAQ6D,OAEF,IAAZhC,EAAEM,OAA2B,IAAZL,EAAEK,MACrB,OAAOnC,EAAQsK,WAAWzI,EAAEK,KAAOJ,EAAEI,KAAOL,EAAEf,IAAMgB,EAAEhB,KAGxD,GAAIe,EAAEM,OAAS,GAAKN,EAAEM,MAAQL,EAAEK,OAAS,EACvC,OAAO2F,EAAGjG,EAAEK,KAAOJ,EAAEI,KAAML,EAAEM,MAAON,EAAEf,KAExC,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MACrB,OAAO2F,EAAGjG,EAAEK,KAAOJ,EAAEI,KAAM,EAAGL,EAAEf,IAAMM,KAAKxB,MAAMkC,EAAEhB,MAErD,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MACrB,OAAO2F,EAAGjG,EAAEK,KAAOJ,EAAEI,KAAM,EAAGL,EAAEf,IAAMgB,EAAEhB,KAE1C,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MAAa,CAClC,IAAI8M,EAASnH,EAAG1G,KAAKc,KAAKL,EAAEf,KAAMe,EAAEM,MAAQ,EAAGf,KAAKZ,IAAIqB,EAAEf,MAAMX,IAAI2H,EAAG1G,KAAKc,KAAKJ,EAAEhB,KAAMgB,EAAEK,MAAQ,EAAGf,KAAKZ,IAAIsB,EAAEhB,OACjH,OAAOgH,EAAGjG,EAAEK,KAAOJ,EAAEI,KAAM+M,EAAO9M,MAAQ,EAAG8M,EAAO/M,KAAO+M,EAAOnO,IACpE,CACA,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MAAa,CAClC,IAAI+M,EAAUpH,EAAG1G,KAAKc,KAAKL,EAAEf,KAAMe,EAAEM,MAAQ,EAAGf,KAAKZ,IAAIqB,EAAEf,MAAMX,IAAI2H,EAAG1G,KAAKc,KAAKJ,EAAEhB,KAAMgB,EAAEK,MAAQ,EAAGf,KAAKZ,IAAIsB,EAAEhB,OAClH,OAAOgH,EAAGjG,EAAEK,KAAOJ,EAAEI,KAAMgN,EAAQ/M,MAAQ,EAAG+M,EAAQhN,KAAOgN,EAAQpO,IACvE,CACA,MAAM0F,MAAM,yBAA2B3C,KAAO,KAAOsC,EACvD,GAIC,CACDvB,IAAK,WACLuB,MAAO,SAAkBA,GACvB,OAAOtC,KAAKxD,IAAI8F,EAClB,GAIC,CACDvB,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOtC,KAAKxD,IAAI8F,EAClB,GAIC,CACDvB,IAAK,MACLuB,MAAO,SAAaA,GAClB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAKxD,IAAI2B,EAAQK,QAC1B,GAIC,CACDuC,IAAK,SACLuB,MAAO,SAAgBA,GACrB,OAAOtC,KAAK9D,IAAIoG,EAClB,GAIC,CACDvB,IAAK,WACLuB,MAAO,SAAkBA,GACvB,OAAOtC,KAAK9D,IAAIoG,EAClB,GAIC,CACDvB,IAAK,YACLuB,MAAO,SAAmBA,GACxB,OAAOtC,KAAK9D,IAAIoG,EAClB,GAIC,CACDvB,IAAK,QACLuB,MAAO,WACL,OAAiB,IAAbtC,KAAK/C,IACA,IAAId,EAAQA,EAAQuO,MAClB1K,KAAK/C,MAAQwB,OAAOC,kBACtByF,EAAM,EAAG,EAAG,GACK,IAAfnE,KAAK1B,MACP2F,EAAGjE,KAAK3B,KAAM,EAAG,EAAI2B,KAAK/C,KAE1BgH,EAAGjE,KAAK3B,KAAM2B,KAAK1B,OAAQ0B,KAAK/C,IAE3C,GAIC,CACD8D,IAAK,aACLuB,MAAO,WACL,OAAOtC,KAAKxB,OACd,GAIC,CACDuC,IAAK,cACLuB,MAAO,WACL,OAAOtC,KAAKxB,OACd,GAQC,CACDuC,IAAK,MACLuB,MAAO,SAAaA,GAClB,IAAIgJ,EAAUvF,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GACzEwF,EAAKxH,EAAEzB,GACPnE,EAAUoN,EAAG5O,MACjB,GAAIqD,KAAKjB,GAAG5C,EAAQoK,QAAUpI,EAAQY,GAAG5C,EAAQoK,OAAQ,OAAOpC,EAAM,EAAG,EAAG,GAC5E,GAAImH,EAAS,CACX,IAAIE,EAASxL,KAAKrD,MAAM8O,IAAItN,GAE5B,OADkB,GAAd6B,KAAK3B,QAA2B,GAAZkN,EAAGlN,QAAamN,EAASD,EAAG5O,MAAMF,IAAI+O,IACvDA,EAAOhP,IAAI+O,EAAGlN,KACvB,CACA,IAAIqN,EAAW1L,KAAK2L,WAChBC,EAAczN,EAAQwN,WAE1B,OAAI5G,SAAS2G,IAAa3G,SAAS6G,IAA4B,GAAZF,GAAgC,GAAfE,EAC3D,IAAIzP,EAAQuP,EAAWE,GAE5B5L,KAAKvD,IAAI0B,GAASY,GAAGiB,MAEhBmE,EAAM,EAAG,EAAG,GAEjBhG,EAAQ1B,IAAIuD,MAAMjB,GAAGZ,GAEhB,IAAIhC,EAAQ6D,OAEH,GAAdA,KAAK3B,KAAmB2B,KAAKrD,MAAM8O,IAAItN,GAASI,MAC7CyB,KAAKvD,IAAIuD,KAAK9D,IAAIiC,GAASnC,QAAQQ,IAAI2B,GAChD,GAOC,CACD4C,IAAK,SACLuB,MAAO,SAAgBA,GACrB,IAAIgJ,EAAUvF,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC7E,OAAO/F,KAAKyL,IAAInJ,EAAOgJ,EACzB,GAOC,CACDvK,IAAK,UACLuB,MAAO,SAAiBA,GACtB,IAAIgJ,EAAUvF,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC7E,OAAO/F,KAAKyL,IAAInJ,EAAOgJ,EACzB,GAIC,CACDvK,IAAK,MACLuB,MAAO,SAAaA,GAClB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAItC,KAAK3B,KAAOF,EAAQE,KACf,EAEL2B,KAAK3B,KAAOF,EAAQE,MACd,EAEH2B,KAAK3B,KAAO2B,KAAK4K,OAAOtI,EACjC,GAKC,CACDvB,IAAK,SACLuB,MAAO,SAAgBA,GACrB,IAAInE,EAAU4F,EAAEzB,GACZuI,EAAS7K,KAAK/C,IAAM,EAAI+C,KAAK1B,OAAS0B,KAAK1B,MAC3CwM,EAAS3M,EAAQlB,IAAM,EAAIkB,EAAQG,OAASH,EAAQG,MACxD,OAAIuM,EAASC,EACJ,EAELD,EAASC,GACH,EAEN9K,KAAK/C,IAAMkB,EAAQlB,IACd,EAEL+C,KAAK/C,IAAMkB,EAAQlB,KACb,EAEH,CACT,GAIC,CACD8D,IAAK,UACLuB,MAAO,SAAiBA,GACtB,OAAOtC,KAAK6L,IAAIvJ,EAClB,GAIC,CACDvB,IAAK,QACLuB,MAAO,WACL,OAAOlE,MAAM4B,KAAK3B,OAASD,MAAM4B,KAAK1B,QAAUF,MAAM4B,KAAK/C,IAC7D,GAIC,CACD8D,IAAK,WACLuB,MAAO,SAAUwJ,GACf,SAAS/G,IACP,OAAO+G,EAAWC,MAAM/L,KAAM+F,UAChC,CAIA,OAHAhB,EAASoB,SAAW,WAClB,OAAO2F,EAAW3F,UACpB,EACOpB,CACT,CARO,EAQL,WACA,OAAOA,SAAS/E,KAAK3B,OAAS0G,SAAS/E,KAAK1B,QAAUyG,SAAS/E,KAAK/C,IACtE,KAIC,CACD8D,IAAK,KACLuB,MAAO,SAAYA,GACjB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAK3B,OAASF,EAAQE,MAAQ2B,KAAK1B,QAAUH,EAAQG,OAAS0B,KAAK/C,MAAQkB,EAAQlB,GAC5F,GAIC,CACD8D,IAAK,SACLuB,MAAO,SAAgBA,GACrB,OAAOtC,KAAKjB,GAAGuD,EACjB,GAIC,CACDvB,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAQtC,KAAKjB,GAAGuD,EAClB,GAIC,CACDvB,IAAK,YACLuB,MAAO,SAAmBA,GACxB,OAAOtC,KAAKgM,IAAI1J,EAClB,GAIC,CACDvB,IAAK,KACLuB,MAAO,SAAYA,GACjB,OAA4B,IAArBtC,KAAK6L,IAAIvJ,EAClB,GAIC,CACDvB,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAQtC,KAAKiM,GAAG3J,EAClB,GAIC,CACDvB,IAAK,KACLuB,MAAO,SAAYA,GACjB,OAA2B,IAApBtC,KAAK6L,IAAIvJ,EAClB,GAIC,CACDvB,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAQtC,KAAKzD,GAAG+F,EAClB,GAIC,CACDvB,IAAK,MACLuB,MAAO,SAAaA,GAClB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAKzD,GAAG4B,GAAW,IAAIhC,EAAQgC,GAAW,IAAIhC,EAAQ6D,KAC/D,GAIC,CACDe,IAAK,MACLuB,MAAO,SAAaA,GAClB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAKiM,GAAG9N,GAAW,IAAIhC,EAAQgC,GAAW,IAAIhC,EAAQ6D,KAC/D,GAIC,CACDe,IAAK,SACLuB,MAAO,SAAgBA,GACrB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAK4K,OAAOzM,GAAW,EAAI,IAAIhC,EAAQgC,GAAW,IAAIhC,EAAQ6D,KACvE,GAIC,CACDe,IAAK,SACLuB,MAAO,SAAgBA,GACrB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAK4K,OAAOzM,GAAW,EAAI,IAAIhC,EAAQgC,GAAW,IAAIhC,EAAQ6D,KACvE,GAKC,CACDe,IAAK,QACLuB,MAAO,SAAe4J,EAAK1O,GACzB,OAAOwC,KAAKxC,IAAI0O,GAAKA,IAAI1O,EAC3B,GAIC,CACDuD,IAAK,WACLuB,MAAO,SAAkB4J,GACvB,OAAOlM,KAAKxC,IAAI0O,EAClB,GAIC,CACDnL,IAAK,WACLuB,MAAO,SAAkB9E,GACvB,OAAOwC,KAAKkM,IAAI1O,EAClB,GAQC,CACDuD,IAAK,gBACLuB,MAAO,SAAuBA,EAAO6J,GACnC,IAAIhO,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAKoM,aAAajO,EAASgO,GAAa,EAAInM,KAAK6L,IAAI1N,EAC9D,GAQC,CACD4C,IAAK,oBACLuB,MAAO,SAA2BA,EAAO6J,GACvC,OAAOnM,KAAKqM,cAAc/J,EAAO6J,EACnC,GAOC,CACDpL,IAAK,eACLuB,MAAO,SAAsBA,EAAO6J,GAClC,IAAIhO,EAAU4F,EAAEzB,GAKhB,GAJiB,MAAb6J,IACFA,EAAY,MAGVnM,KAAK3B,OAASF,EAAQE,KACxB,OAAO,EAET,GAAId,KAAKZ,IAAIqD,KAAK1B,MAAQH,EAAQG,OAAS,EACzC,OAAO,EAGT,IAAIgO,EAAOtM,KAAK/C,IACZsP,EAAOpO,EAAQlB,IAOnB,OANI+C,KAAK1B,MAAQH,EAAQG,QACvBiO,EAAO3H,EAAW2H,IAEhBvM,KAAK1B,MAAQH,EAAQG,QACvBgO,EAAO1H,EAAW0H,IAEb/O,KAAKZ,IAAI2P,EAAOC,IAASJ,EAAY5O,KAAKC,IAAID,KAAKZ,IAAI2P,GAAO/O,KAAKZ,IAAI4P,GAChF,GAOC,CACDxL,IAAK,mBACLuB,MAAO,SAA0BA,EAAO6J,GACtC,OAAOnM,KAAKoM,aAAa9J,EAAO6J,EAClC,GAOC,CACDpL,IAAK,gBACLuB,MAAO,SAAuBA,EAAO6J,GACnC,OAAQnM,KAAKoM,aAAa9J,EAAO6J,EACnC,GAOC,CACDpL,IAAK,sBACLuB,MAAO,SAA6BA,EAAO6J,GACzC,OAAOnM,KAAKwM,cAAclK,EAAO6J,EACnC,GAQC,CACDpL,IAAK,eACLuB,MAAO,SAAsBA,EAAO6J,GAClC,IAAIhO,EAAU4F,EAAEzB,GAChB,OAAQtC,KAAKoM,aAAajO,EAASgO,IAAcnM,KAAKzD,GAAG4B,EAC3D,GAQC,CACD4C,IAAK,gBACLuB,MAAO,SAAuBA,EAAO6J,GACnC,IAAIhO,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAKoM,aAAajO,EAASgO,IAAcnM,KAAKzD,GAAG4B,EAC1D,GAQC,CACD4C,IAAK,eACLuB,MAAO,SAAsBA,EAAO6J,GAClC,IAAIhO,EAAU4F,EAAEzB,GAChB,OAAQtC,KAAKoM,aAAajO,EAASgO,IAAcnM,KAAKiM,GAAG9N,EAC3D,GAQC,CACD4C,IAAK,gBACLuB,MAAO,SAAuBA,EAAO6J,GACnC,IAAIhO,EAAU4F,EAAEzB,GAChB,OAAOtC,KAAKoM,aAAajO,EAASgO,IAAcnM,KAAKiM,GAAG9N,EAC1D,GAIC,CACD4C,IAAK,SACLuB,MAAO,WACL,OAAItC,KAAKzD,GAAGJ,EAAQoK,OACXpC,EAAM,EAAG,EAAG,GAEdnE,KAAKjE,OACd,GAIC,CACDgF,IAAK,WACLuB,MAAO,WACL,OAAkB,IAAdtC,KAAK3B,KACA,IAAIlC,EAAQA,EAAQuO,MAClB1K,KAAK1B,MAAQ,EACf2F,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM+C,KAAK1B,MAAQ,EAAGf,KAAKZ,IAAIqD,KAAK/C,MAEtDgH,EAAG,EAAG,EAAG1G,KAAKxB,MAAMiE,KAAK/C,KAEpC,GAKC,CACD8D,IAAK,QACLuB,MAAO,WACL,OAAItC,KAAK3B,MAAQ,EACR,IAAIlC,EAAQA,EAAQuO,MAClB1K,KAAK1B,MAAQ,EACf2F,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM+C,KAAK1B,MAAQ,EAAGf,KAAKZ,IAAIqD,KAAK/C,MAEtDgH,EAAGjE,KAAK3B,KAAM,EAAGd,KAAKxB,MAAMiE,KAAK/C,KAE5C,GAIC,CACD8D,IAAK,MACLuB,MAAO,SAAakG,GAElB,OADAA,EAAOzE,EAAEyE,GACLxI,KAAK3B,MAAQ,GAGbmK,EAAKnK,MAAQ,GAGC,IAAdmK,EAAKnK,MAA6B,IAAfmK,EAAKlK,OAA4B,IAAbkK,EAAKvL,IALvC,IAAId,EAAQA,EAAQuO,MAOH,IAAf1K,KAAK1B,OAA8B,IAAfkK,EAAKlK,MAC3B2F,EAAGjE,KAAK3B,KAAM,EAAGd,KAAK6H,IAAIpF,KAAK/C,KAAOM,KAAK6H,IAAIoD,EAAKvL,MAEtDd,EAAQD,IAAI8D,KAAKjE,QAASyM,EAAKzM,QACxC,GAIC,CACDgF,IAAK,OACLuB,MAAO,WACL,OAAItC,KAAK3B,MAAQ,EACR,IAAIlC,EAAQA,EAAQuO,MACH,IAAf1K,KAAK1B,MACP2F,EAAGjE,KAAK3B,KAAM,EAAGd,KAAKkP,KAAKzM,KAAK/C,MACf,IAAf+C,KAAK1B,MACP2F,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM,EAAwB,kBAArBM,KAAKZ,IAAIqD,KAAK/C,MACxB,IAAf+C,KAAK1B,MACP2F,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM,EAAGM,KAAKZ,IAAIqD,KAAK/C,KAAO,mBAEhDgH,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM+C,KAAK1B,MAAQ,EAAGf,KAAKZ,IAAIqD,KAAK/C,KAEjE,GAIC,CACD8D,IAAK,KACLuB,MAAO,WACL,OAAItC,KAAK3B,MAAQ,EACR,IAAIlC,EAAQA,EAAQuO,MACH,IAAf1K,KAAK1B,MACP2F,EAAGjE,KAAK3B,KAAM,EAAGd,KAAK6H,IAAIpF,KAAK/C,MACd,IAAf+C,KAAK1B,MACP2F,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM,EAAwB,kBAArBM,KAAKZ,IAAIqD,KAAK/C,MACxB,IAAf+C,KAAK1B,MACP2F,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM,EAAGM,KAAKZ,IAAIqD,KAAK/C,KAAO,oBAEhDgH,EAAG1G,KAAKc,KAAK2B,KAAK/C,KAAM+C,KAAK1B,MAAQ,EAAGf,KAAKZ,IAAIqD,KAAK/C,KAEjE,GAIC,CACD8D,IAAK,YACLuB,MAAO,SAAmBkG,GACxB,OAAOxI,KAAKoF,IAAIoD,EAClB,GAIC,CACDzH,IAAK,MACLuB,MAAO,SAAaA,GAClB,IAAInE,EAAU4F,EAAEzB,GACZtE,EAAI,IAAI7B,EAAQ6D,MAChB/B,EAAI,IAAI9B,EAAQgC,GAEpB,GAAe,IAAXH,EAAEK,KACJ,OAAOJ,EAAEc,GAAG,GAAKoF,EAAM,EAAG,EAAG,GAAKnG,EAGpC,GAAe,IAAXA,EAAEK,MAA0B,IAAZL,EAAEM,OAAyB,IAAVN,EAAEf,IACrC,OAAOe,EAGT,GAAe,IAAXC,EAAEI,KACJ,OAAO8F,EAAM,EAAG,EAAG,GAGrB,GAAe,IAAXlG,EAAEI,MAA0B,IAAZJ,EAAEK,OAAyB,IAAVL,EAAEhB,IACrC,OAAOe,EAET,IAAImB,EAASnB,EAAE0O,WAAWlQ,IAAIyB,GAAG0O,QACjC,OAAmB,IAAf3M,KAAK3B,KACHd,KAAKZ,IAAIsB,EAAE0N,WAAa,GAAK,IAAM,EAC9BxM,EAAOZ,MACLhB,KAAKZ,IAAIsB,EAAE0N,WAAa,GAAK,IAAM,EACrCxM,EAEF,IAAIhD,EAAQA,EAAQuO,MAEtBvL,CACT,GAIC,CACD4B,IAAK,QACLuB,MAAO,WAQL,GAAItC,KAAKjB,GAAG5C,EAAQsO,MAClB,OAAO,IAAItO,EAAQA,EAAQsO,MAE7B,GAAIzK,KAAKjB,GAAG5C,EAAQwK,SAClB,OAAOxC,EAAM,EAAG,EAAG,GAErB,IAAK1F,OAAOsG,SAAS/E,KAAK1B,SAAWG,OAAOsG,SAAS/E,KAAK/C,KACxD,OAAO,IAAId,EAAQA,EAAQuO,MAE7B,IAAI1M,EAAI,IAAI7B,EAAQ6D,MAEpB,GAAgB,IAAZhC,EAAEM,MAAa,CACjB,IAAI8M,EAAS7N,KAAKnB,IAAI,GAAI4B,EAAEK,KAAOL,EAAEf,KACrC,GAAIwB,OAAOsG,SAASqG,IAAW7N,KAAKZ,IAAIyO,IAAW,GACjD,OAAOnH,EAAG,EAAG,EAAGmH,GAEhB,GAAe,IAAXpN,EAAEK,KACJ,OAAO8F,EAAM,EAAG,EAAG,GAEnBnG,EAAImG,EAAMnG,EAAEK,KAAML,EAAEM,MAAQ,EAAGf,KAAKxB,MAAMiC,EAAEf,KAGlD,CAEA,OAAIe,EAAEK,KAAO,GAAKL,EAAEf,KAAO,EAClBgH,EAAGjG,EAAEK,KAAML,EAAEM,MAAQ,EAAGN,EAAEf,KAE/Be,EAAEK,KAAO,GAAKL,EAAEf,KAAO,EAClBgH,GAAIjG,EAAEK,KAAML,EAAEM,MAAQ,GAAIN,EAAEf,KAG9BkH,EAAM,EAAG,EAAG,EACrB,GAIC,CACDpD,IAAK,WACLuB,MAAO,SAAkBA,GACvB,OAAOyB,EAAEzB,GAAOlG,IAAI4D,KACtB,GAKC,CACDe,IAAK,OACLuB,MAAO,SAAcA,GACnB,IAAInE,EAAU4F,EAAEzB,GAChB,OAAItC,KAAKzD,GAAG,IAAM4B,EAAQsN,IAAI,GAAG,GAAM1M,GAAG,GAAWiB,KAAKzB,MAAMqO,KAAKzO,GAASI,MACvEyB,KAAK5D,IAAI+B,EAAQK,QAC1B,GAKC,CACDuC,IAAK,YACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,GAEW,IAAf+C,KAAK1B,MADP0B,KAAK1D,IAAI,GAAGuQ,QAGK,IAAf7M,KAAK1B,MACPnC,EAAQoJ,IAAIpJ,EAAQK,IAAIwD,KAAM7D,EAAQuK,GAAG1G,MAAMvD,IAAI,KAEnDN,EAAQoJ,IAAIvF,KAEvB,GAOC,CACDe,IAAK,QACLuB,MAAO,WACL,GAAItC,KAAK/C,IAAM,EACb,OAAO+C,KAAKxB,QACP,GAAmB,IAAfwB,KAAK1B,MAAa,CAC3B,GAAI0B,KAAKzD,GAAG4H,EAAM,EAAG,EAAG,KACtB,OAAOhI,EAAQsK,WAAW3B,EAAQ9E,KAAK3B,KAAO2B,KAAK/C,MAErD,IAAI6P,EAAI9M,KAAK/C,IAAM,EACfkI,EAAI,kBACRA,IAAS2H,EAAI,IAAOvP,KAAK6H,IAAI0H,GAC7B3H,GAAQ2H,EACR,IAAIzH,EAAKyH,EAAIA,EACTxH,EAAKwH,EACLC,EAAK,GAAKzH,EACV0H,EAAM,EAAID,EACVE,EAAK9H,EAAI6H,EACb,GAAIC,IAAO9H,EACT,OAAOhJ,EAAQoJ,IAAIJ,GAOrB,GALAA,EAAI8H,EACJ3H,GAAUD,EACV0H,EAAK,IAAMzH,EACX0H,EAAM,EAAID,EACVE,EAAK9H,EAAI6H,EACLC,IAAO9H,EACT,OAAOhJ,EAAQoJ,IAAIJ,GAErBA,EAAI8H,EACJ3H,GAAUD,EACV0H,EAAK,KAAOzH,EACZ,IAAI/I,EAAK,EAAIwQ,EAMb,OALA5H,GAAQ5I,EACR+I,GAAUD,EACV0H,EAAK,KAAOzH,EACZ/I,EAAK,EAAIwQ,EACT5H,GAAQ5I,EACDJ,EAAQoJ,IAAIJ,EACrB,CAAO,OAAmB,IAAfnF,KAAK1B,MACPnC,EAAQoJ,IAAIpJ,EAAQK,IAAIwD,KAAM7D,EAAQuK,GAAG1G,MAAMvD,IAAI,KAEnDN,EAAQoJ,IAAIvF,KAEvB,GAIC,CACDe,IAAK,UACLuB,MAAO,WACL,OAAOtC,KAAK6M,QAAQnG,IACtB,GAIC,CACD3F,IAAK,MACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACNkH,EAAM,EAAG,EAAG,GAEF,IAAfnE,KAAK1B,OAAe0B,KAAK/C,KAAO,MAC3Bd,EAAQsK,WAAWlJ,KAAKgI,IAAIvF,KAAK3B,KAAO2B,KAAK/C,MAC5B,IAAf+C,KAAK1B,MACP2F,EAAG,EAAG,EAAGjE,KAAK3B,KAAOd,KAAKxB,MAAMwB,KAAKqG,GAAK5D,KAAK/C,KAC9B,IAAf+C,KAAK1B,MACP2F,EAAG,EAAG,EAAGjE,KAAK3B,MAAQd,KAAKxB,MAAM,mBAAsBiE,KAAK/C,MAE5DgH,EAAG,EAAGjE,KAAK1B,MAAQ,EAAG0B,KAAK3B,KAAO2B,KAAK/C,IAElD,GAIC,CACD8D,IAAK,MACLuB,MAAO,WACL,OAAOtC,KAAK5D,IAAI,EAClB,GAIC,CACD2E,IAAK,OACLuB,MAAO,WACL,GAAmB,IAAftC,KAAK1B,MACP,OAAOnC,EAAQsK,WAAWlJ,KAAK2P,KAAKlN,KAAK3B,KAAO2B,KAAK/C,MAChD,GAAmB,IAAf+C,KAAK1B,MACd,OAAO2F,EAAG,EAAG,EAAG1G,KAAKxB,MAAMiE,KAAK/C,KAAO,mBAEvC,IAAIkC,EAAShD,EAAQD,IAAIiI,EAAMnE,KAAK3B,KAAM2B,KAAK1B,MAAQ,EAAG0B,KAAK/C,KAAMkH,EAAM,EAAG,EAAG,IAGjF,OAFAhF,EAAOb,OAAS,EAChBa,EAAOkI,YACAlI,CAEX,GAIC,CACD4B,IAAK,OACLuB,MAAO,WACL,OAAOtC,KAAK5D,IAAI,EAClB,GAIC,CACD2E,IAAK,OACLuB,MAAO,WACL,OAAItC,KAAKzD,GAAG,GAAWyD,KAAKzB,MAAMnC,IAAI,EAAI,GAAGmC,MACtCyB,KAAK5D,IAAI,EAAI,EACtB,GAYC,CACD2E,IAAK,UACLuB,MAAO,WACL,IAAImG,EAAS1C,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC7EgC,EAAUhC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5B,EAAM,EAAG,EAAG,GAC1FgJ,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAE5E,GAAe,IAAX0C,EACF,OAAOtM,EAAQC,IAAI4D,KAAM+H,GAG3B,GAAe,IAAXU,EACF,OAAO,IAAItM,EAAQ4L,GAGrB,GAAI/H,KAAKjB,GAAG5C,EAAQqK,MAClB,OAAOrC,EAAM,EAAG,EAAG,GAGrB,GAAInE,KAAKjB,IAAI,GACX,OAAO5C,EAAQC,IAAI4D,KAAM+H,GAE3B,GAAIU,IAAWhK,OAAOC,kBAAmB,CACvC,IAAI0O,EAAWpN,KAAK2L,WAEpB,GAAIyB,GAAY,mBAA0BA,GAAY,mBAAwB,CAC5E,IAAIC,EAAQlR,EAAQuK,GAAG1G,MAAMzB,MAEzB+O,EAAQD,EAAME,WAAWrR,IAAImR,GAEjC,GAAID,EAAW,EAAG,OAAOE,EACzB,IAAIE,EAAQH,EAAME,UAAS,GAAOrR,IAAImR,GAMtC,OAJID,EAAW,oBACbE,EAAQE,EAAQrR,EAAQsK,WAAWlJ,KAAKqG,IAE1CmE,EAAUhE,EAAEgE,GACRA,EAAQhJ,GAAGyO,GAAeA,EAAezF,EAAQxL,GAAGiR,GAAeF,EAAkB,IAAInR,EAAQA,EAAQsO,KAC/G,CAAO,OAEE,IAAItO,EAFFiR,EAAW,kBAEDjR,EAAQsO,KAIRtO,EAAQuO,KAE/B,CAGA,GAAI1K,KAAKjB,GAAG5C,EAAQoK,OAAQ,CAC1B,IAAIpH,EAAS5B,KAAKZ,KAAK8L,EAAS,GAAK,GAIrC,OAHItJ,EAAS,IACXA,EAAS,EAAIA,GAERhD,EAAQsK,WAAWtH,EAC5B,CACA,GAAIsJ,EAAS,EACX,OAAOtM,EAAQsR,YAAY1F,EAAS/H,MAAOyI,EAAQ0E,GAErDpF,EAAU,IAAI5L,EAAQ4L,GACtB,IAAI2F,EAAYjF,EAChBA,EAASlL,KAAKyH,MAAMyD,GACpB,IAAIkF,EAAaD,EAAYjF,EAC7B,GAAIzI,KAAKiM,GAAG9P,EAAQoK,SAAWvG,KAAKzD,GAAG,IAAMyD,KAAKlB,IAAI,oBAA2BiJ,EAAQjJ,IAAI3C,EAAQuK,GAAG1G,MAAMzB,MAAMgP,UAAS,GAAOrR,IAAIC,EAAQuK,GAAG1G,MAAMzB,WAAamP,EAAY,MAAUP,GAAS,CAEnM,IAAIS,EAAcrQ,KAAK2O,IAAI,IAAOzD,GACJV,EAA1BA,EAAQhJ,GAAG5C,EAAQqK,MAAiBxG,KAAK5D,IAAIuR,GAAqB3N,KAAKzD,GAAG,GAAcwL,EAAQ3L,IAAI,EAAIuR,GAAYnR,IAAIwD,KAAK5D,IAAI2L,GAAS3L,IAAIuR,IAA4B5F,EAAQ8F,SAASF,EAAY3N,MAC3M,IAAK,IAAIQ,EAAI,EAAGA,EAAIoN,IAAepN,EAAG,CACpC,IAAIsN,EAAc/F,EAGlB,GAFAA,EAAU/H,KAAK5D,IAAI2L,GAEf+F,EAAY/O,GAAGgJ,GACjB,OAAOA,CAEX,CACA,OAAI2F,EAAY,KAASnQ,KAAK+B,KAAKoO,GAAa,GAAK,EAC5C1N,KAAK5D,IAAI2L,GAEXA,CACT,CAEmB,IAAf4F,IACE5F,EAAQhJ,GAAG5C,EAAQqK,MAGjBxG,KAAKiM,GAAG,KAAOkB,EACjBpF,EAAU/H,KAAK5D,IAAIuR,IAEnB5F,EAAU5L,EAAQsK,WAAWtK,EAAQ4R,iBAAiB/N,KAAK2L,WAAYgC,IAGnE3N,KAAKzD,GAAG,KACVwL,EAAUA,EAAQtL,IAAI,GAAGD,IAAIwD,KAAKgO,MAAM,IAAIC,KAAK,KAKnDlG,EADE/H,KAAKjB,GAAG,IACAgJ,EAAQmG,WAAWP,EAAYR,GAChCnN,KAAKzD,GAAG,GACPwL,EAAQ3L,IAAI,EAAIuR,GAAYnR,IAAIwD,KAAK5D,IAAI2L,GAAS3L,IAAIuR,IAEtD5F,EAAQ8F,SAASF,EAAY3N,KAAMmN,IAInD,IAAK,IAAIgB,EAAK,EAAGA,EAAK1F,IAAU0F,EAAI,CAGlC,GAFApG,EAAU/H,KAAK5D,IAAI2L,IAEdhD,SAASgD,EAAQzJ,SAAWyG,SAASgD,EAAQ9K,KAChD,OAAO8K,EAAQV,YAGjB,GAAIU,EAAQzJ,MAAQ0B,KAAK1B,MAAQ,EAC/B,OAAO6F,EAAM4D,EAAQ1J,KAAM0J,EAAQzJ,OAASmK,EAAS0F,EAAK,GAAIpG,EAAQ9K,KAGxE,GAAIkR,EAAK,IACP,OAAOpG,CAEX,CACA,OAAOA,CACT,GAWC,CACDhH,IAAK,cACLuB,MAAO,WACL,IAAImG,EAAS1C,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC7EgC,EAAUhC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5B,EAAM,EAAG,EAAG,GAC1FgJ,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAO/F,KAAKuI,QAAQE,EAAQV,EAASoF,EACvC,GASC,CACDpM,IAAK,cACLuB,MAAO,WACL,IAAIkG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3ExG,EAAQwG,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC5EoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,GAAIxG,EAAQ,EACV,OAAOpD,EAAQoM,QAAQC,GAAOjJ,EAAOS,KAAMmN,GAE7C3E,EAAOzE,EAAEyE,GACT,IAAIrJ,EAAShD,EAAQyK,YAAY5G,MAC7BoO,EAAY7O,EAChBA,EAAQhC,KAAKyH,MAAMzF,GACnB,IAAI8O,EAAWD,EAAY7O,EAC3B,GAAIJ,EAAOb,MAAQkK,EAAKlK,MAAQ,EAAG,CACjC,IAAIgQ,EAAY/Q,KAAK2O,IAAI3M,EAAOJ,EAAOb,MAAQkK,EAAKlK,MAAQ,GAC5DiB,GAAS+O,EACTnP,EAAOb,OAASgQ,CAClB,CACA,IAAK,IAAI9N,EAAI,EAAGA,EAAIjB,IAASiB,EAAG,CAG9B,GAFArB,EAASA,EAAOiG,IAAIoD,IAEfzD,SAAS5F,EAAOb,SAAWyG,SAAS5F,EAAOlC,KAC9C,OAAOkC,EAAOkI,YAGhB,GAAI7G,EAAI,IACN,OAAOrB,CAEX,CAUA,OARIkP,EAAW,GAAKA,EAAW,IAE3BlP,EADEqJ,EAAKzJ,GAAG,IACDI,EAAO+O,YAAYG,EAAUlB,GAG7BhO,EAAO0O,UAAUQ,EAAU7F,EAAM2E,IAGvChO,CACT,GAaC,CACD4B,IAAK,OACLuB,MAAO,WAQL,IAPA,IAAIkG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3EwI,EAAaxI,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,IACjFoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GACxEyI,EAAY,KACZC,GAA8B,EAC9BC,GAAkB,EAClBvP,EAASa,KAAK2O,cAAcnG,EAAM2E,GAAQxB,WACrCnL,EAAI,EAAGA,EAAI+N,IAAc/N,EAAG,CACnC,IAAIoO,EAAc,IAAIzS,EAAQqM,GAAMD,QAAQpJ,EAAQhD,EAAQqK,KAAM2G,GAC9D0B,EAAiBD,EAAY3C,GAAGjM,MAcpC,GAbIQ,EAAI,GACFkO,GAAmBG,IACrBJ,GAA8B,GAGlCC,EAAkBG,EACdJ,EACFD,GAAa,EAEbA,GAAa,EAEfA,EAAYjR,KAAKZ,IAAI6R,IAAcK,GAAkB,EAAI,GACzD1P,GAAUqP,EACQ,IAAdA,EACF,KAEJ,CACA,OAAOrS,EAAQsK,WAAWtH,EAC5B,GACC,CACD4B,IAAK,gBACLuB,MAAO,WACL,IAAIkG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3EoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAI5E,GAHAyC,EAAOzE,EAAEyE,GAGLA,EAAK1J,IAAI3C,EAAQoK,OACnB,OAAO,IAAIpK,EAAQA,EAAQuO,MAG7B,GAAIlC,EAAKzJ,GAAG5C,EAAQqK,MAClB,OAAO,IAAIrK,EAAQA,EAAQuO,MAG7B,GAAIlC,EAAKjM,GAAGJ,EAAQqK,MAClB,OAAIxG,KAAKjB,GAAG5C,EAAQqK,MACXrC,EAAM,EAAG,EAAG,GAEjBnE,KAAKjB,GAAG5C,EAAQoK,OACXpC,GAAO,EAAG,EAAG,GAKf,IAAIhI,EAAQA,EAAQuO,MAG7B,GAAI1K,KAAK/C,IAAM,GAAK+C,KAAKjB,GAAG5C,EAAQoK,OAClC,OAAOpC,GAAO,EAAG,EAAG,GAEtB,GAAIqE,EAAKjM,GAAG,mBAAyB,CACnC,IAAI8Q,EAAQlR,EAAQuK,GAAG8B,GAAMjK,MACzBuQ,EAAWzB,EAAME,WAAWrR,IAAImR,GACpC,GAAIrN,KAAKjB,GAAG+P,GAAW,OAAO,IAAI3S,EAAQA,EAAQsO,MAClD,GAAIzK,KAAKiM,GAAG6C,GAAW,OAAO,IAAI3S,EAAQA,EAAQuO,KACpD,CACA,IAAIvL,EAAS,EACT4P,EAAO5S,EAAQyK,YAAY5G,MAC/B,GAAI+O,EAAKzQ,MAAQkK,EAAKlK,MAAQ,EAAG,CAC/B,IAAIgQ,EAAYS,EAAKzQ,MAAQkK,EAAKlK,MAAQ,EAC1Ca,GAAUmP,EACVS,EAAKzQ,OAASgQ,CAChB,CACA,IAAK,IAAI9N,EAAI,EAAGA,EAAI,MAAOA,EACzB,GAAIuO,EAAKxS,GAAGJ,EAAQoK,OAClBwI,EAAO5S,EAAQC,IAAIoM,EAAMuG,GACzB5P,GAAU,MACL,IAAI4P,EAAKjQ,IAAI3C,EAAQqK,MAC1B,OAAI2G,EAAehR,EAAQsK,WAAWtH,EAAS4P,EAAKpD,WAAa,GAAexP,EAAQsK,WAAWtH,EAAShD,EAAQ6S,cAAcxG,EAAKmD,WAAYoD,EAAKpD,aAExJxM,GAAU,EACV4P,EAAO5S,EAAQiJ,IAAI2J,EAAMvG,EAC3B,CAEF,OAAOrM,EAAQsK,WAAWtH,EAC5B,GAEC,CACD4B,IAAK,aACLuB,MAUA,SAAoB2M,GAClB,IAAI9B,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5EkJ,EAAO9S,EAAQ6H,kBAAkBiL,GAAMtD,WACvC,IAAIxM,EAAShD,EAAQyK,YAAY5G,MACjC,GAAIiP,GAAQ,EAAG,CAET9P,EAAOlC,IAAM,GAAKkC,EAAOb,MAAQ,GACnCa,EAAOd,KAAO,EACdc,EAAOlC,IAAM,EACbkC,EAAOb,MAAQ,IACW,IAAjBa,EAAOd,MAA+B,GAAhBc,EAAOb,QAEtCa,EAAOd,KAAO,EACdc,EAAOlC,KAAOkC,EAAOlC,KAEvB,IAAI4Q,EAAWtQ,KAAKyH,MAAMiK,GAC1BA,GAAQpB,EACR1O,EAAOb,OAASuP,CAClB,CACA,GAAIoB,IAAS,EAAG,CACd,IAAIC,EAAY3R,KAAKyH,MAAMiK,GAG3B,GAFAA,GAAQC,EACR/P,EAAOb,OAAS4Q,EACZ/P,EAAOb,MAAQ,EACjB,IAAK,IAAIkC,EAAI,EAAGA,EAAI,MAAOA,EAAG,CAG5B,GAFArB,EAAOb,QACPa,EAAOlC,IAAMM,KAAKxB,MAAMoD,EAAOlC,MAC1B8H,SAAS5F,EAAOlC,KASnB,OAPoB,IAAhBkC,EAAOd,OACTc,EAAOd,KAAO,GAGZc,EAAOb,MAAQ,IACjBa,EAAOb,MAAQ,GAEVa,EAAOkI,YAEhB,GAAIlI,EAAOb,OAAS,EAClB,KAEJ,CAEJ,CACA,MAAOa,EAAOb,MAAQ,EACpBa,EAAOb,QACPa,EAAOlC,IAAMM,KAAKxB,MAAMoD,EAAOlC,KAYjC,OAToB,IAAhBkC,EAAOd,OACTc,EAAOd,KAAO,EACK,IAAfc,EAAOlC,KAAakC,EAAOb,OAAS,IACtCa,EAAOb,OAAS,EAChBa,EAAOlC,IAAM,IAGjBkC,EAAOkI,YAEM,IAAT4H,EACK9P,EAAO0O,SAASoB,EAAM,GAAI9B,GAG5BhO,CACT,GASC,CACD4B,IAAK,WACLuB,MAAO,SAAkB2M,EAAMzG,GAC7B,IAAI2E,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GACxEoJ,EAAQpL,EAAEyE,GACd,GAAI2G,EAAMlD,GAAG,IAAMkD,EAAMrQ,IAAI,mBAAyB,CACpD,IAAIsQ,EAAajT,EAAQkT,YAAYrP,KAAMwI,EAAM2E,GAC7CmC,EAAYF,EAAW,GAAGzD,WAC1B4D,EAAQH,EAAW,GACnBI,EAAYF,EAAYL,EACxB5B,EAAQlR,EAAQuK,GAAG8B,GAAMjK,MACzB+O,EAAQD,EAAME,WAAWrR,IAAImR,GAC7BG,EAAQH,EAAME,UAAS,GAAOrR,IAAImR,GAClCoC,EAAWtT,EAAQqK,KACV,GAAT+I,EAAYE,EAAWnC,EAAM9Q,IAAIgR,GAAON,OAAyB,GAATqC,IAAYE,EAAWjC,EAAMhR,IAAI,IAC7F,IAAIkT,EAAUP,EAAM/S,IAAIqT,GACpBE,EAAcpS,KAAKvB,MAAMwT,GACzB7B,EAAa6B,EAAYG,EACzBC,EAAWH,EAASrT,IAAI,EAAIuR,GAAYnR,IAAIkT,EAAQtT,IAAIuR,IAC5D,OAAOxR,EAAQoM,QAAQ4G,EAAOQ,EAAaC,EAAUzC,EACvD,CAEA,IAAI0C,EAAW7P,KAAKrB,KAAK6J,EAAM,IAAK2E,GAAQxB,WACxCmE,EAAWD,EAAWZ,EAC1B,OAAIa,GAAY,EACP3T,EAAQoM,QAAQC,EAAMsH,EAAU3T,EAAQqK,KAAM2G,GAC3C1O,OAAOsG,SAAS+K,GAEjBA,IAAa,EACf3T,EAAQiJ,IAAIjJ,EAAQoM,QAAQC,EAAMsH,EAAW,EAAG3T,EAAQqK,KAAM2G,GAAS3E,GAEvErM,EAAQiJ,IAAIjJ,EAAQiJ,IAAIjJ,EAAQoM,QAAQC,EAAMsH,EAAW,EAAG3T,EAAQqK,KAAM2G,GAAS3E,GAAOA,GAJ1F,IAAIrM,EAAQA,EAAQuO,KAM/B,GAYC,CACD3J,IAAK,WACLuB,MAUA,WACE,IAAI0D,IAAYD,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,KAAmBA,UAAU,GAC/E,OAAI/F,KAAKzD,IAAI,mBACJ,IAAIJ,EAAQA,EAAQuO,MAClB1E,EACLhG,KAAKrD,MAAMJ,GAAG,UAAkB,IAAIJ,EAAQ6D,MAAeA,KAAK/C,IAAM,EACjEd,EAAQsK,WAAWf,EAAW1F,KAAK2L,aAClB,IAAf3L,KAAK1B,MACPnC,EAAQsK,WAAWf,EAAW1F,KAAK3B,KAAO2B,KAAK/C,MAC7C+C,KAAKzD,GAAG,SACV6J,EAAWpG,MAGXA,KAAK0G,KAGI,IAAd1G,KAAK3B,KACA,IAAIlC,EAAQA,EAAQuO,MAGV,IAAf1K,KAAK1B,MACAnC,EAAQsK,WAAWf,EAAW1F,KAAK3B,KAAO2B,KAAK/C,IAAK,OAAO,IAC3C,GAAd+C,KAAK1B,MACP8H,EAAWpG,KAAM,OAAO,GAExBA,KAAKzB,MAAMC,QAAQ+O,WAAWhP,KAG3C,GAIC,CACDwC,IAAK,QACLuB,MAAO,WACL,OAAOtC,KAAK+P,aAAa,EAC3B,GASC,CACDhP,IAAK,eACLuB,MAAO,SAAsB0N,GAE3B,GAAc,GAAVA,EACF,OAAOhQ,KAET,GAAIA,KAAKjB,GAAG5C,EAAQsO,MAClB,OAAO,IAAItO,EAAQA,EAAQsO,MAE7B,IAAKzK,KAAK+E,WACR,OAAO,IAAI5I,EAAQA,EAAQuO,MAG7B,GAAIsF,EAAS,GAAKA,EAAS,EACzB,OAAOhQ,KAAK4M,KAAKoD,GAGnB,GAAIA,GAAU,GAAKA,GAAU,EAC3B,OAAO7T,EAAQsK,WAAWuJ,GAAQ1T,IAAI,GAAGF,IAAI4D,KAAKxB,SAGpD,GAAIwR,GAAU,EACZ,OAAO,IAAI7T,EAAQA,EAAQuO,MAG7B,GAAIsF,GAAUvR,OAAOC,kBAAmB,CACtC,IAAI0O,EAAWpN,KAAK2L,WACpB,OAAIyB,EAAW7P,KAAKqG,GAAKwJ,EAAW5H,EAC3BxF,KAAK5D,IAAI4D,KAAKxB,SAEd,IAAIrC,EAAQA,EAAQuO,KAE/B,CAEA,GAAI1K,KAAKjB,GAAG,GACV,OAAOoF,EAAM,EAAG,EAAG,GAGrB,GAAInE,KAAKzD,GAAG,GACV,OAAO,IAAIJ,EAAQA,EAAQuO,MAG7B,GAAI1K,KAAKlB,IAAI,UACX,OAA4B,IAAI3C,EAA5B6T,EAAS,GAAK,EAAsBhQ,KAA8B7D,EAAQuO,MAGhF,GAAI1K,KAAKiM,GAAG,GAAI,CAKd,IAAIgE,EAAa9T,EAAQ+T,KACrBlQ,KAAKpB,IAAIzC,EAAQoM,QAAQ,GAAIyH,EAAQ,GAAG,MAC1CC,EAAajQ,KAAKyN,YAAY,GAAIuC,EAAS,GAAG,IAE5CA,GAAU,IACZC,EAAajQ,KAAK4M,KAAKoD,IAEzB,IAAI1C,EAAQnR,EAAQoK,MAChBjI,EAAQ2R,EAAW3R,MACnBkP,EAAQyC,EAAWxC,YAAY,GAAInP,GAAO,GAC1C6R,EAAW3C,EACX4C,EAAQ5C,EAAMtR,IAAI,GAClBmU,GAAY,EAChB,MAAOA,EACLD,EAAQ9C,EAAMhR,IAAIkR,GAAOtR,IAAI,GACzBC,EAAQmU,YAAY,GAAIhS,EAAO8R,GAAO,GAAM7H,QAAQyH,EAAQ,GAAG,GAAM/D,GAAGjM,MAAOwN,EAAQ4C,EAAW9C,EAAQ8C,EAC1GA,EAAMrR,GAAGoR,GAAWE,GAAY,EAAWF,EAAWC,EAE5D,OAAOjU,EAAQmU,YAAY,GAAIhS,EAAO8R,GAAO,EAC/C,CAkBE,IAAIG,EAAQ,EACRC,EAAUvM,EAAG,EAAG,GAAI,GACpBwM,EAAUxM,EAAG,EAAG,GAAI,GACpByM,EAASzM,EAAG,EAAG,GAAI,GACnB0M,EAAS1M,EAAG,EAAG,GAAI,IACnB2M,EAAWzU,EAAQoK,MACnBsK,EAAa5M,EAAG,EAAG,GAAI,GACvB6M,EAAcH,EAAOhE,QAAQnO,QAC7BuS,EAAW5U,EAAQoK,MACnByK,EAAYF,EACZG,EAAYH,EACZI,EAAa3T,KAAK+B,KAAK0Q,GAAU,GAAK,EACtCT,EAAQ,EACR4B,EAAYlN,EAAG,EAAG,GAAI,GACtBmN,GAAkB,EAClBC,EAAgBlV,EAAQoK,MACxB+K,GAAkB,EACtB,MAAOf,EAAQ,EAAG,CAChB,GAAa,GAATA,EAAY,CAEd,GAAIW,EAAY,MACdR,EAASzM,EAAG,EAAG,GAAI,GACnB0M,EAASH,EACTD,EAAQ,EACRM,EAAa5M,EAAG,EAAG,GAAI,GACvBkN,EAAYlN,EAAG,EAAG,GAAI,EAE1B,CACAmN,GAAkB,EAClB,MAAOT,EAAO3E,IAAI0E,GAAS,CAEzB,GADAW,EAAgBV,EACZA,EAAOhE,QAAQnO,QAAQ+J,QAAQyH,EAAQ,GAAG,GAAMjR,GAAG,IAAM4R,EAAOhE,QAAQnO,QAAQjC,GAAG,IACrFuU,EAAcH,EAAOhE,QAAQnO,QAC7BwS,EAAYL,EAAOhE,QAAQnO,QAC3ByS,EAAYN,EAAOhE,QAAQnO,QAC3BuS,EAAW5U,EAAQoK,MACnBgJ,GAAS,EACI,GAATgB,IAAYY,EAAYR,QACvB,GAAIA,EAAOhE,QAAQnO,QAAQ+J,QAAQyH,EAAQ,GAAG,GAAMjR,GAAG4R,EAAOhE,QAAQnO,WAAa0S,GAAcP,EAAOhE,QAAQnO,QAAQjC,GAAG,IAChIuU,EAAcH,EAAOhE,QAAQnO,QAC7BwS,EAAYL,EAAOhE,QAAQnO,QAC3ByS,EAAYN,EAAOhE,QAAQnO,QAC3BuS,EAAW5U,EAAQoK,MACnBgJ,EAAQ,OACH,GAAIoB,EAAOhE,QAAQnO,QAAQ+J,QAAQyH,EAAQ,GAAG,GAAMjR,GAAG4R,EAAOhE,QAAQnO,QAAQhC,IAAI,GAAG+L,QAAQyH,EAAQ,GAAG,IAG7Gc,EAAcH,EAAOhE,QAAQnO,QAC7BwS,EAAY7U,EAAQoK,MACpB0K,EAAYH,EAAYtU,IAAI,GAC5BuU,EAAWD,EACKvB,EAAZ2B,GAAqB,EAAe,MACnC,CAELN,EAAWD,EAAOnU,IAAI,QACtBsU,EAAcH,EAAOhE,QAAQnO,QAC7BwS,EAAYL,EAAOrU,IAAIsU,GAAUjE,QAAQnO,QACzCuS,EAAWD,EAAYrU,IAAIuU,GAC3BC,EAAYH,EAAYxU,IAAIyU,GAG5B,MAAOC,EAAUzI,QAAQyH,EAAQ,GAAG,GAAMjR,GAAG+R,EAAYvI,QAAQyH,EAAQ,GAAG,KAAUiB,EAAU1I,QAAQyH,EAAQ,GAAG,GAAMjR,GAAG+R,EAAYvI,QAAQyH,EAAQ,GAAG,KAAUgB,EAAUpS,IAAIkS,IAAgBG,EAAUnS,IAAIgS,GAC/MF,EAAWA,EAASpU,IAAI,GACxBwU,EAAYL,EAAOrU,IAAIsU,GAAUjE,QAAQnO,QACzCuS,EAAWD,EAAYrU,IAAIuU,GAC3BC,EAAYH,EAAYxU,IAAIyU,GAK9B,IAHa,GAATR,GAAcU,EAAU1I,QAAQyH,EAAQ,GAAG,GAAM/D,GAAG6E,EAAYvI,QAAQyH,EAAQ,GAAG,KAAUgB,EAAUzI,QAAQyH,EAAQ,GAAG,GAAM/D,GAAG6E,EAAYvI,QAAQyH,EAAQ,GAAG,KAAmB,GAATO,GAAcU,EAAU1I,QAAQyH,EAAQ,GAAG,GAAMzT,GAAGuU,EAAYvI,QAAQyH,EAAQ,GAAG,KAAUgB,EAAUzI,QAAQyH,EAAQ,GAAG,GAAMzT,GAAGuU,EAAYvI,QAAQyH,EAAQ,GAAG,OAChVmB,EAAYR,GAEVM,EAAU1I,QAAQyH,EAAQ,GAAG,GAAMzT,GAAGuU,EAAYvI,QAAQyH,EAAQ,GAAG,IAEvET,GAAS,OACJ,GAAI2B,EAET3B,EAAQ,OACH,GAAa,GAATgB,GAAcI,EAAOY,aAAaf,EAAS,MAEpDjB,EAAQ,MACH,CAEL,MAAOyB,EAAUzI,QAAQyH,EAAQ,GAAG,GAAM5D,aAAa0E,EAAYvI,QAAQyH,EAAQ,GAAG,GAAO,OAASiB,EAAU1I,QAAQyH,EAAQ,GAAG,GAAM5D,aAAa0E,EAAYvI,QAAQyH,EAAQ,GAAG,GAAO,OAASgB,EAAUpS,IAAIkS,IAAgBG,EAAUnS,IAAIgS,GAC/OF,EAAWA,EAASpU,IAAI,GACxBwU,EAAYL,EAAOrU,IAAIsU,GAAUjE,QAAQnO,QACzCuS,EAAWD,EAAYrU,IAAIuU,GAC3BC,EAAYH,EAAYxU,IAAIyU,GAI5BxB,EAFE0B,EAAU1I,QAAQyH,EAAQ,GAAG,GAAMvT,IAAIqU,EAAYvI,QAAQyH,EAAQ,GAAG,IAAOzT,GAAGuU,EAAYvI,QAAQyH,EAAQ,GAAG,GAAMvT,IAAIuU,EAAUzI,QAAQyH,EAAQ,GAAG,KAEhJ,EAGA,CAEZ,CACF,CAEA,IADc,GAAVT,IAAa+B,GAAkB,GACtB,GAATf,GAAuB,GAAThB,GAAuB,GAATgB,GAAuB,GAAThB,EAE5C,GAAImB,EAAO3R,GAAGkF,EAAG,EAAG,GAAI,IACtB0M,EAASA,EAAOnU,IAAI,OACf,CACL,IAAIgV,GAAS,EAGb,GAFIJ,IAA6B,GAAT7B,GAAuB,GAATgB,IAAwB,GAAVhB,GAAwB,GAATgB,KAAaiB,GAAS,GACzFb,EAASA,EAAOrU,IAAIoU,GAAQxU,IAAI,GAC5BsV,EAAQ,KACd,MAEA,GAAId,EAAO3R,GAAGkF,EAAG,EAAG,GAAI,IAEtByM,EAASC,EACTA,EAASA,EAAOzU,IAAI,OACf,CAEL,IAAIuV,GAAU,EAId,GAHIL,IAA6B,GAAT7B,GAAuB,GAATgB,IAAwB,GAAVhB,GAAwB,GAATgB,KAAakB,GAAU,GAC1Ff,EAASA,EAAOjU,IAAIoU,GACpBF,EAASA,EAAOlU,IAAIoU,GAChBY,EAAS,KACf,CAIF,GAFIf,EAAOjU,IAAIkU,GAAQzU,IAAI,GAAGS,MAAMsP,GAAG4E,EAAWrU,IAAI,QAAO4U,GAAkB,GAC/EP,EAAaH,EAAOjU,IAAIkU,GAAQzU,IAAI,GAAGS,MACnCgU,EAAO1E,GAAG,QAAS,MACvB,GAAI0E,EAAO5R,GAAGsS,GAAgB,KAChC,CAEA,GAAIV,EAAO1E,GAAG,QAAS,MACvB,IAAKqF,EAAiB,MACtB,GAAIH,GAAalN,EAAG,EAAG,GAAI,GAEzB,MAEW,GAATsM,EAAYC,EAAUW,EAA4B,GAATZ,IAAYE,EAAUU,GACnEZ,GACF,CAGAG,EAASF,EACTG,EAAS1M,EAAG,EAAG,GAAI,IACnB,IAAIyN,EAAYf,EACZgB,EAASxV,EAAQoK,MACjBqL,GAAa,EACjB,MAAOA,EAIL,GAH6BD,EAAzBjB,EAAO3R,GAAGkF,EAAG,EAAG,GAAI,IAAc0M,EAAOnU,IAAI,GAAiBkU,EAAOpU,IAAIqU,GAAQzU,IAAI,GACrFC,EAAQC,IAAI,GAAIuV,GAAQnT,QAAQ+J,QAAQyH,EAAQ,GAAG,GAAM/D,GAAGjM,MAAO2Q,EAASgB,EAAYjB,EAASiB,EACjGA,EAAO5S,GAAG2S,GAAYE,GAAa,EAAWF,EAAYC,EAC1DhB,EAAO1E,GAAG,QAAS,OAAO,IAAI9P,EAAQA,EAAQuO,MAGpD,GAAKiH,EAAOvF,aAAaoE,EAAS,OAE3B,CAGL,GAAIC,EAAQ1R,GAAGkF,EAAG,EAAG,GAAI,IAEvB,OAAO,IAAI9H,EAAQA,EAAQuO,MAE7BgG,EAASzM,EAAG,EAAG,GAAI,GACnB0M,EAASF,EACTiB,EAAYf,EACZgB,EAASxV,EAAQoK,MACjBqL,GAAa,EACb,MAAOA,EAIL,GAH6BD,EAAzBjB,EAAO3R,GAAGkF,EAAG,EAAG,GAAI,IAAc0M,EAAOnU,IAAI,GAAiBkU,EAAOpU,IAAIqU,GAAQzU,IAAI,GACrFC,EAAQC,IAAI,GAAIuV,GAAQnT,QAAQ+J,QAAQyH,EAAQ,GAAG,GAAM/D,GAAGjM,MAAO2Q,EAASgB,EAAYjB,EAASiB,EACjGA,EAAO5S,GAAG2S,GAAYE,GAAa,EAAWF,EAAYC,EAC1DhB,EAAO1E,GAAG,QAAS,OAAO,IAAI9P,EAAQA,EAAQuO,MAEpD,OAAOiH,EAAOhF,QAAQnO,OACxB,CApBE,OAAOmT,EAAOhF,QAAQnO,OAsB5B,GAmBC,CACDuC,IAAK,UACLuB,MAYA,WACE,IAAImG,EAAS1C,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC7EgC,EAAUhC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5B,EAAM,EAAG,EAAG,GAC1FgJ,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5EgC,EAAU,IAAI5L,EAAQ4L,GACtB,IAAI2F,EAAYjF,EAChBA,EAASlL,KAAKvB,MAAMyM,GACpB,IAAIkF,EAAaD,EAAYjF,EACzBoJ,EAAc1V,EAAQoK,MACtBuL,EAAiB3V,EAAQoK,MAE7B,GAAmB,IAAfoH,EAAkB,CACpB,IAAI5F,EAAQhJ,GAAG5C,EAAQqK,MAKrB,OAAOxG,KAAKgI,QAAQD,EAAQgK,UAAU/R,UAAMhD,EAAWmQ,GAAQc,KAAKP,GAAW/B,WAAY,EAAGwB,KAJ5F1E,EACFV,EAAU5L,EAAQsK,WAAWkH,EAKjC,CACA,GAAIlF,EAAS,EACX,IAAK,IAAIjI,EAAI,EAAGA,EAAIiI,GAAS,CAO3B,GANAqJ,EAAiBD,EACjBA,EAAc9J,EACdA,EAAU/H,KAAKuI,QAAQR,EAAQ4D,WAAYxP,EAAQqK,KAAM2G,KACvD3M,EAGER,KAAKiM,GAAG,IAAMjM,KAAKlB,IAAI,IAAMiJ,EAAQkE,GAAG,IAAMlE,EAAQjJ,IAAI,GAAI,OAAOkB,KAAKuI,QAAQE,EAASjI,EAAGuH,EAASoF,GAE3G,GAAIpF,EAAQhJ,GAAG8S,IAAgB9J,EAAQhJ,GAAG+S,IAAmBtR,EAAI,GAAKiI,EAAS,EAAG,OAAOV,EAAQV,YAEjG,IAAKtC,SAASgD,EAAQzJ,SAAWyG,SAASgD,EAAQ9K,KAChD,OAAO8K,EAAQV,YAGjB,GAAI7G,EAAI,IACN,OAAOuH,CAEX,MAGA,IAAK,IAAIiK,EAAM,EAAGA,GAAOvJ,IAAUuJ,EAAK,CAItC,GAHAH,EAAc9J,EACdA,EAAUA,EAAQpJ,KAAKqB,UAAMhD,EAAWmQ,GAEpCpF,EAAQhJ,GAAG8S,GAAc,OAAO9J,EAAQV,YAE5C,IAAKtC,SAASgD,EAAQzJ,SAAWyG,SAASgD,EAAQ9K,KAChD,OAAO8K,EAAQV,YAGjB,GAAI2K,EAAM,IACR,OAAOjK,CAEX,CAEF,OAAOA,CACT,GAiBC,CACDhH,IAAK,YACLuB,MAAO,WACL,IAAIkG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3EwI,EAAaxI,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,IACjFoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAG5E,GAFAyC,EAAO,IAAIrM,EAAQqM,GAEfA,EAAK1J,IAAI,GAAI,OAAO,IAAI3C,EAAQA,EAAQuO,MAC5C,GAAI1K,KAAKjB,GAAG,GAAI,OAAOoF,EAAM,EAAG,EAAG,GACnC,GAAInE,KAAKjB,GAAG5C,EAAQsO,MAAO,OAAO,IAAItO,EAAQA,EAAQsO,MACtD,IAAInI,EAAQ,IAAInG,EAAQ,GACpBgD,EAAS,EACTqP,EAAY,EAEhB,GAAIxO,KAAKzD,IAAI,GAAI,CACf,GAAIyD,KAAKlB,KAAK,GAAI,OAAO,IAAI3C,EAAQA,EAAQuO,MAC7C,IAAIuH,EAAazJ,EAAKD,QAAQvI,KAAK2L,WAAY,EAAGwB,GAClD,GAAInN,KAAKjB,GAAGkT,GAAa,OAAO,IAAI9V,EAAQA,EAAQwK,SACpD,GAAI3G,KAAKiM,GAAGgG,GAAa,OAAO,IAAI9V,EAAQA,EAAQuO,KACtD,CAEA,GAAI1K,KAAKiM,GAAG,IACV,MAAO3J,EAAM/F,GAAGyD,MAGd,GAFAb,IACAmD,EAAQnG,EAAQoM,QAAQC,EAAMlG,EAAMqJ,WAAY,EAAGwB,GAC/ChO,EAAS,IAEX,OAAO,IAAIhD,EAAQA,EAAQuO,WAI/B,MAAOpI,EAAM2J,GAAGjM,MAGd,GAFAb,IACAmD,EAAQnG,EAAQwC,KAAK2D,EAAOkG,EAAM2E,GAC9BhO,EAAS,IAEX,OAAO,IAAIhD,EAAQA,EAAQuO,MAIjC,IAAK,IAAIlK,EAAI,EAAGA,EAAI+N,IAAc/N,EAAG,CACnC,IAAIoO,EAAcpG,EAAKR,QAAQ7I,EAAQhD,EAAQqK,KAAM2G,GACrD,GAAIyB,EAAY7P,GAAGiB,MAAO,MAC1B,IAAI6O,EAAiBD,EAAY3C,GAAGjM,MAIpC,GAHAwO,EAAYjR,KAAKZ,IAAI6R,IAAcK,GAAkB,EAAI,GACzD1P,GAAUqP,EACVA,GAAa,EACK,IAAdA,EACF,KAEJ,CACA,OAAOrS,EAAQsK,WAAWtH,EAC5B,GAMC,CACD4B,IAAK,oBACLuB,MAAO,SAA2B0N,GAEhC,OAAc,GAAVA,EACKhQ,KAGLgQ,EAAS,EACJ,IAAI7T,EAAQA,EAAQuO,MAEzB1K,KAAKjB,GAAG5C,EAAQsO,MACX,IAAItO,EAAQA,EAAQsO,MAExBzK,KAAK+E,WAINiL,EAAS,GAAKA,EAAS,EAClBhQ,KAAK4M,KAAKoD,GAGfhQ,KAAKjB,GAAG,GACHoF,EAAM,EAAG,EAAG,GAGjBnE,KAAKzD,GAAG,GACH,IAAIJ,EAAQA,EAAQuO,MAKzB1K,KAAKzD,GAAG,GACHyD,KAAK+P,aAAaC,GAGpB7T,EAAQ+V,mBAAkB,SAAU5P,GACzC,OAAOnG,EAAQ6L,QAAQ1F,EAAO0N,EAAQ,GAAG,EAC3C,GAFO7T,CAEJ6D,MAvBM,IAAI7D,EAAQA,EAAQuO,KAwB/B,GAKC,CACD3J,IAAK,MACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACN,IAAId,EAAQ6D,MAEF,IAAfA,KAAK1B,MACAnC,EAAQsK,WAAWlJ,KAAK4U,IAAInS,KAAK3B,KAAO2B,KAAK/C,MAE/CkH,EAAM,EAAG,EAAG,EACrB,GAIC,CACDpD,IAAK,MACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACNkH,EAAM,EAAG,EAAG,GAEF,IAAfnE,KAAK1B,MACAnC,EAAQsK,WAAWlJ,KAAK6U,IAAIpS,KAAK3B,KAAO2B,KAAK/C,MAE/CkH,EAAM,EAAG,EAAG,EACrB,GAIC,CACDpD,IAAK,MACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACN,IAAId,EAAQ6D,MAEF,IAAfA,KAAK1B,MACAnC,EAAQsK,WAAWlJ,KAAK8U,IAAIrS,KAAK3B,KAAO2B,KAAK/C,MAE/CkH,EAAM,EAAG,EAAG,EACrB,GAIC,CACDpD,IAAK,OACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACN,IAAId,EAAQ6D,MAEF,IAAfA,KAAK1B,MACAnC,EAAQsK,WAAWlJ,KAAK+U,KAAKtS,KAAK3B,KAAO2B,KAAK/C,MAEhD,IAAId,EAAQA,EAAQuO,KAC7B,GAIC,CACD3J,IAAK,OACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACNd,EAAQsK,WAAWlJ,KAAKgV,KAAKvS,KAAK2L,aAExB,IAAf3L,KAAK1B,MACAnC,EAAQsK,WAAWlJ,KAAKgV,KAAKvS,KAAK3B,KAAO2B,KAAK/C,MAEhD,IAAId,EAAQA,EAAQuO,KAC7B,GAIC,CACD3J,IAAK,OACLuB,MAAO,WACL,OAAItC,KAAK/C,IAAM,EACN,IAAId,EAAQ6D,MAEF,IAAfA,KAAK1B,MACAnC,EAAQsK,WAAWlJ,KAAKiV,KAAKxS,KAAK3B,KAAO2B,KAAK/C,MAEhDd,EAAQsK,WAAWlJ,KAAKiV,KAAiB,SAAZxS,KAAK3B,MAC3C,GAIC,CACD0C,IAAK,OACLuB,MAAO,WACL,OAAOtC,KAAKuF,MAAM9I,IAAIuD,KAAKyS,SAASlN,OAAOrJ,IAAI,EACjD,GAIC,CACD6E,IAAK,OACLuB,MAAO,WACL,OAAOtC,KAAKuF,MAAMjJ,IAAI0D,KAAKyS,SAASlN,OAAOrJ,IAAI,EACjD,GAIC,CACD6E,IAAK,OACLuB,MAAO,WACL,OAAOtC,KAAK0S,OAAOxW,IAAI8D,KAAK2S,OAC9B,GAIC,CACD5R,IAAK,QACLuB,MAAO,WACL,OAAOnG,EAAQuK,GAAG1G,KAAK1D,IAAI0D,KAAK4S,MAAMtW,IAAI,GAAG4Q,QAC/C,GAIC,CACDnM,IAAK,QACLuB,MAAO,WACL,OAAOnG,EAAQuK,GAAG1G,KAAK1D,IAAI0D,KAAK4S,MAAMnW,IAAI,GAAGyQ,QAC/C,GAIC,CACDnM,IAAK,QACLuB,MAAO,WACL,OAAItC,KAAKrD,MAAMiC,IAAI,GACV,IAAIzC,EAAQA,EAAQuO,MAEtBvO,EAAQuK,GAAG1G,KAAK1D,IAAI,GAAGJ,IAAIC,EAAQsK,WAAW,GAAGhK,IAAIuD,QAAQ9D,IAAI,EAC1E,GAIC,CACD6E,IAAK,mBACLuB,MAAO,SAA0BuQ,GAC/B,OAAmB,IAAfA,EACK,IAAI1W,EAAQ6D,MAEdA,KAAK4M,KAAKzQ,EAAQC,IAAI,GAAIyW,GACnC,GAIC,CACD9R,IAAK,MACLuB,MAAO,WACL,OAAOtC,KAAK1D,IAAI,EAClB,GACC,CACDyE,IAAK,oBACLuB,MAAO,SAA2BwQ,GAChC,OAAO9S,KAAK6L,IAAIiH,GAAS,CAC3B,GACC,CACD/R,IAAK,WACLuB,MAAO,SAAkBwQ,GACvB,OAAO9S,KAAK6L,IAAIiH,GAAS,CAC3B,GACC,CACD/R,IAAK,uBACLuB,MAAO,SAA8BwQ,GACnC,OAAO9S,KAAK6L,IAAIiH,IAAU,CAC5B,GACC,CACD/R,IAAK,cACLuB,MAAO,SAAqBwQ,GAC1B,OAAO9S,KAAK6L,IAAIiH,GAAS,CAC3B,IACE,CAAC,CACH/R,IAAK,iBACLuB,MAAO,SAAwBjE,EAAMC,EAAOrB,GAC1C,OAAO,IAAId,GAAU+H,eAAe7F,EAAMC,EAAOrB,EACnD,GAIC,CACD8D,IAAK,6BACLuB,MAAO,SAAoCjE,EAAMC,EAAOrB,GACtD,OAAO,IAAId,GAAUiI,2BAA2B/F,EAAMC,EAAOrB,EAC/D,GAIC,CACD8D,IAAK,uBACLuB,MAAO,SAA8BgF,EAAUL,GAC7C,OAAO,IAAI9K,GAAU6K,qBAAqBM,EAAUL,EACtD,GAIC,CACDlG,IAAK,mCACLuB,MAAO,SAA0CgF,EAAUL,GACzD,OAAO,IAAI9K,GAAU4W,iCAAiCzL,EAAUL,EAClE,GAIC,CACDlG,IAAK,cACLuB,MAAO,SAAqBA,GAC1B,OAAO,IAAInG,GAAUyK,YAAYtE,EACnC,GAIC,CACDvB,IAAK,aACLuB,MAAO,SAAoBA,GACzB,OAAO,IAAInG,GAAUsK,WAAWnE,EAClC,GAMC,CACDvB,IAAK,aACLuB,MAAO,SAAoBA,GACzB,IAAIiF,EAAexB,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAClF,OAAO,IAAI5J,GAAU0K,WAAWvE,EAAOiF,EACzC,GAIC,CACDxG,IAAK,YACLuB,MAAO,SAAmBA,GACxB,OAAO,IAAInG,GAAU6W,UAAU1Q,EACjC,GAUC,CACDvB,IAAK,oBACLuB,MAAO,SAA2BA,GAChC,GAAIA,aAAiBnG,EACnB,OAAOmG,EACF,GAAqB,kBAAVA,EAAoB,CACpC,IAAImF,EAAStL,EAAQuL,gBAAgBtF,IAAIE,GACzC,YAAetF,IAAXyK,EACKA,EAEFtL,EAAQ0K,WAAWvE,EAC5B,CAAO,MAAqB,kBAAVA,EACTnG,EAAQsK,WAAWnE,GAKnB6B,EAAM,EAAG,EAAG,EAEvB,GAIC,CACDpD,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAO3F,KAClB,GAIC,CACDoE,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAO/D,KAClB,GAIC,CACDwC,IAAK,SACLuB,MAAO,SAAgBA,GACrB,OAAOyB,EAAEzB,GAAO/D,KAClB,GAIC,CACDwC,IAAK,UACLuB,MAAO,SAAiBA,GACtB,OAAOyB,EAAEzB,GAAO/D,KAClB,GAIC,CACDwC,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOjE,IAClB,GAIC,CACD0C,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAOjE,IAClB,GAIC,CACD0C,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOoC,OAClB,GAIC,CACD3D,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOtG,OAClB,GAIC,CACD+E,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOhD,MAClB,GAIC,CACDyB,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAO0C,OAClB,GAIC,CACDjE,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAOhG,IAAIwW,EACtB,GAIC,CACD/R,IAAK,OACLuB,MAAO,SAAcA,EAAOwQ,GAC1B,OAAO/O,EAAEzB,GAAOhG,IAAIwW,EACtB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAO7F,IAAIqW,EACtB,GAIC,CACD/R,IAAK,WACLuB,MAAO,SAAkBA,EAAOwQ,GAC9B,OAAO/O,EAAEzB,GAAO7F,IAAIqW,EACtB,GAIC,CACD/R,IAAK,QACLuB,MAAO,SAAeA,EAAOwQ,GAC3B,OAAO/O,EAAEzB,GAAO7F,IAAIqW,EACtB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAO9F,IAAIsW,EACtB,GAIC,CACD/R,IAAK,WACLuB,MAAO,SAAkBA,EAAOwQ,GAC9B,OAAO/O,EAAEzB,GAAO9F,IAAIsW,EACtB,GAIC,CACD/R,IAAK,QACLuB,MAAO,SAAeA,EAAOwQ,GAC3B,OAAO/O,EAAEzB,GAAO9F,IAAIsW,EACtB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAOpG,IAAI4W,EACtB,GAIC,CACD/R,IAAK,SACLuB,MAAO,SAAgBA,EAAOwQ,GAC5B,OAAO/O,EAAEzB,GAAOpG,IAAI4W,EACtB,GAIC,CACD/R,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAO9D,OAClB,GAIC,CACDuC,IAAK,aACLuB,MAAO,SAAoBA,GACzB,OAAOyB,EAAEzB,GAAO9D,OAClB,GAIC,CACDuC,IAAK,cACLuB,MAAO,SAAqBA,GAC1B,OAAOyB,EAAEzB,GAAO2Q,aAClB,GAOC,CACDlS,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,IAAIxH,EAAUvF,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC7E,OAAOhC,EAAEzB,GAAOmJ,IAAIqH,EAAOxH,EAC7B,GAOC,CACDvK,IAAK,SACLuB,MAAO,SAAgBA,EAAOwQ,GAC5B,IAAIxH,EAAUvF,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC7E,OAAOhC,EAAEzB,GAAO4Q,OAAOJ,EAAOxH,EAChC,GAOC,CACDvK,IAAK,UACLuB,MAAO,SAAiBA,EAAOwQ,GAC7B,IAAIxH,EAAUvF,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC7E,OAAOhC,EAAEzB,GAAO6Q,QAAQL,EAAOxH,EACjC,GAIC,CACDvK,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAOuJ,IAAIiH,EACtB,GAKC,CACD/R,IAAK,SACLuB,MAAO,SAAgBA,EAAOwQ,GAC5B,OAAO/O,EAAEzB,GAAOsI,OAAOkI,EACzB,GAIC,CACD/R,IAAK,UACLuB,MAAO,SAAiBA,EAAOwQ,GAC7B,OAAO/O,EAAEzB,GAAOuJ,IAAIiH,EACtB,GAIC,CACD/R,IAAK,QACLuB,MAAO,SAAU8Q,GACf,SAAShV,EAAMiV,GACb,OAAOD,EAAOrH,MAAM/L,KAAM+F,UAC5B,CAIA,OAHA3H,EAAM+H,SAAW,WACf,OAAOiN,EAAOjN,UAChB,EACO/H,CACT,CARO,EAQL,SAAUkE,GAEV,OADAA,EAAQyB,EAAEzB,GACHlE,MAAMkE,EAAMjE,OAASD,MAAMkE,EAAMhE,QAAUF,MAAMkE,EAAMrF,IAChE,KAIC,CACD8D,IAAK,WACLuB,MAAO,SAAUgR,GACf,SAASvO,EAASwO,GAChB,OAAOD,EAAUvH,MAAM/L,KAAM+F,UAC/B,CAIA,OAHAhB,EAASoB,SAAW,WAClB,OAAOmN,EAAUnN,UACnB,EACOpB,CACT,CARO,EAQL,SAAUzC,GAEV,OADAA,EAAQyB,EAAEzB,GACHyC,SAASzC,EAAMjE,OAAS0G,SAASzC,EAAMhE,QAAUyG,SAASzC,EAAMrF,IACzE,KAIC,CACD8D,IAAK,KACLuB,MAAO,SAAYA,EAAOwQ,GACxB,OAAO/O,EAAEzB,GAAOvD,GAAG+T,EACrB,GAIC,CACD/R,IAAK,SACLuB,MAAO,SAAgBA,EAAOwQ,GAC5B,OAAO/O,EAAEzB,GAAOvD,GAAG+T,EACrB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAO0J,IAAI8G,EACtB,GAIC,CACD/R,IAAK,YACLuB,MAAO,SAAmBA,EAAOwQ,GAC/B,OAAO/O,EAAEzB,GAAOkR,UAAUV,EAC5B,GAIC,CACD/R,IAAK,KACLuB,MAAO,SAAYA,EAAOwQ,GACxB,OAAO/O,EAAEzB,GAAO/F,GAAGuW,EACrB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAOxD,IAAIgU,EACtB,GAIC,CACD/R,IAAK,KACLuB,MAAO,SAAYA,EAAOwQ,GACxB,OAAO/O,EAAEzB,GAAO2J,GAAG6G,EACrB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAO1D,IAAIkU,EACtB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAO9E,IAAIsV,EACtB,GAIC,CACD/R,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAO4J,IAAI4G,EACtB,GAIC,CACD/R,IAAK,SACLuB,MAAO,SAAgBA,EAAOwQ,GAC5B,OAAO/O,EAAEzB,GAAOmR,OAAOX,EACzB,GAIC,CACD/R,IAAK,SACLuB,MAAO,SAAgBA,EAAOwQ,GAC5B,OAAO/O,EAAEzB,GAAOqI,OAAOmI,EACzB,GAKC,CACD/R,IAAK,QACLuB,MAAO,SAAeA,EAAO4J,EAAK1O,GAChC,OAAOuG,EAAEzB,GAAOoR,MAAMxH,EAAK1O,EAC7B,GAIC,CACDuD,IAAK,WACLuB,MAAO,SAAkBA,EAAO4J,GAC9B,OAAOnI,EAAEzB,GAAOqR,SAASzH,EAC3B,GAIC,CACDnL,IAAK,WACLuB,MAAO,SAAkBA,EAAO9E,GAC9B,OAAOuG,EAAEzB,GAAOsR,SAASpW,EAC3B,GAQC,CACDuD,IAAK,gBACLuB,MAAO,SAAuBA,EAAOwQ,EAAO3G,GAC1C,OAAOpI,EAAEzB,GAAO+J,cAAcyG,EAAO3G,EACvC,GAQC,CACDpL,IAAK,oBACLuB,MAAO,SAA2BA,EAAOwQ,EAAO3G,GAC9C,OAAOpI,EAAEzB,GAAO+J,cAAcyG,EAAO3G,EACvC,GAOC,CACDpL,IAAK,eACLuB,MAAO,SAAsBA,EAAOwQ,EAAO3G,GACzC,OAAOpI,EAAEzB,GAAO8J,aAAa0G,EAAO3G,EACtC,GAOC,CACDpL,IAAK,mBACLuB,MAAO,SAA0BA,EAAOwQ,EAAO3G,GAC7C,OAAOpI,EAAEzB,GAAO8J,aAAa0G,EAAO3G,EACtC,GAOC,CACDpL,IAAK,gBACLuB,MAAO,SAAuBA,EAAOwQ,EAAO3G,GAC1C,OAAOpI,EAAEzB,GAAOkK,cAAcsG,EAAO3G,EACvC,GAOC,CACDpL,IAAK,sBACLuB,MAAO,SAA6BA,EAAOwQ,EAAO3G,GAChD,OAAOpI,EAAEzB,GAAOuR,oBAAoBf,EAAO3G,EAC7C,GAQC,CACDpL,IAAK,eACLuB,MAAO,SAAsBA,EAAOwQ,EAAO3G,GACzC,OAAOpI,EAAEzB,GAAOwR,aAAahB,EAAO3G,EACtC,GAQC,CACDpL,IAAK,gBACLuB,MAAO,SAAuBA,EAAOwQ,EAAO3G,GAC1C,OAAOpI,EAAEzB,GAAOyR,cAAcjB,EAAO3G,EACvC,GAQC,CACDpL,IAAK,eACLuB,MAAO,SAAsBA,EAAOwQ,EAAO3G,GACzC,OAAOpI,EAAEzB,GAAOiP,aAAauB,EAAO3G,EACtC,GAQC,CACDpL,IAAK,gBACLuB,MAAO,SAAuBA,EAAOwQ,EAAO3G,GAC1C,OAAOpI,EAAEzB,GAAO0R,cAAclB,EAAO3G,EACvC,GAIC,CACDpL,IAAK,SACLuB,MAAO,SAAgBA,GACrB,OAAOyB,EAAEzB,GAAO2R,QAClB,GAIC,CACDlT,IAAK,WACLuB,MAAO,SAAkBA,GACvB,OAAOyB,EAAEzB,GAAOoK,UAClB,GAKC,CACD3L,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOvG,OAClB,GAIC,CACDgF,IAAK,MACLuB,MAAO,SAAaA,EAAOkG,GACzB,OAAOzE,EAAEzB,GAAO8C,IAAIoD,EACtB,GAIC,CACDzH,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOmK,MAClB,GAIC,CACD1L,IAAK,KACLuB,MAAO,SAAYA,GACjB,OAAOyB,EAAEzB,GAAOoE,IAClB,GAIC,CACD3F,IAAK,YACLuB,MAAO,SAAmBA,EAAOkG,GAC/B,OAAOzE,EAAEzB,GAAO4R,UAAU1L,EAC5B,GAIC,CACDzH,IAAK,MACLuB,MAAO,SAAaA,EAAOwQ,GACzB,OAAO/O,EAAEzB,GAAOlG,IAAI0W,EACtB,GAIC,CACD/R,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOqK,OAClB,GAKC,CACD5L,IAAK,OACLuB,MAAO,SAAcA,EAAOwQ,GAC1B,OAAO/O,EAAEzB,GAAOsK,KAAKkG,EACvB,GAKC,CACD/R,IAAK,YACLuB,MAAO,SAAmBA,EAAO6R,GAC/B,OAAOpQ,EAAEzB,GAAO8R,WAClB,GAMC,CACDrT,IAAK,QACLuB,MAAO,SAAeA,EAAO6R,GAC3B,OAAOpQ,EAAEzB,GAAOuK,OAClB,GAIC,CACD9L,IAAK,UACLuB,MAAO,SAAiBA,EAAO6R,GAC7B,OAAOpQ,EAAEzB,GAAO+R,SAClB,GAIC,CACDtT,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAOiD,KAClB,GAIC,CACDxE,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAOsQ,KAClB,GAIC,CACD7R,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAO4K,MAClB,GAIC,CACDnM,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOgS,MAClB,GAIC,CACDvT,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOiS,MAClB,GAYC,CACDxT,IAAK,UACLuB,MAAO,SAAiBA,GACtB,IAAImG,EAAS1C,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC7EgC,EAAUhC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5B,EAAM,EAAG,EAAG,GAC1FgJ,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAOiG,QAAQE,EAAQV,EAASoF,EAC3C,GAWC,CACDpM,IAAK,cACLuB,MAAO,SAAqBA,GAC1B,IAAImG,EAAS1C,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC7EgC,EAAUhC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5B,EAAM,EAAG,EAAG,GAC1FgJ,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAOgO,YAAY7H,EAAQV,EAASoF,EAC/C,GASC,CACDpM,IAAK,cACLuB,MAAO,SAAqBA,GAC1B,IAAIkG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3ExG,EAAQwG,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC5EoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAOmL,YAAYjF,EAAMjJ,EAAO4N,EAC3C,GASC,CACDpM,IAAK,aACLuB,MAAO,SAAoBA,EAAO2M,GAChC,IAAI9B,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAO4L,WAAWe,EAAM9B,EACnC,GASC,CACDpM,IAAK,WACLuB,MAAO,SAAkBA,EAAO2M,GAC9B,IAAIzG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3EoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAOuL,SAASoB,EAAMzG,EAAM2E,EACvC,GAaC,CACDpM,IAAK,OACLuB,MAAO,SAAcA,GACnB,IAAIkG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3EoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAO3D,KAAK6J,EAAM,IAAK2E,EAClC,GASC,CACDpM,IAAK,WACLuB,MAAO,SAAkBA,EAAO0D,GAC9B,OAAOjC,EAAEzB,GAAOiL,SAASvH,EAC3B,GAIC,CACDjF,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOkS,OAClB,GAOC,CACDzT,IAAK,eACLuB,MAAO,SAAsBA,EAAO0N,GAClC,OAAOjM,EAAEzB,GAAOyN,aAAaC,EAC/B,GAYC,CACDjP,IAAK,UACLuB,MAAO,SAAiBA,GACtB,IAAImG,EAAS1C,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,EAC7EgC,EAAUhC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5B,EAAM,EAAG,EAAG,GAC1FgJ,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAO0F,QAAQS,EAAQV,EAASoF,EAC3C,GAeC,CACDpM,IAAK,YACLuB,MAAO,SAAmBA,GACxB,IAAIkG,EAAOzC,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,GAC3EoH,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5E,OAAOhC,EAAEzB,GAAOyP,UAAUvJ,EAAM,IAAK2E,EACvC,GAMC,CACDpM,IAAK,oBACLuB,MAAO,SAA2BA,EAAO0N,GACvC,OAAOjM,EAAEzB,GAAOmS,kBAAkBzE,EACpC,GAIC,CACDjP,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAO6P,KAClB,GAIC,CACDpR,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAO8P,KAClB,GAIC,CACDrR,IAAK,MACLuB,MAAO,SAAaA,GAClB,OAAOyB,EAAEzB,GAAO+P,KAClB,GAIC,CACDtR,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOgQ,MAClB,GAIC,CACDvR,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOiQ,MAClB,GAIC,CACDxR,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOkQ,MAClB,GAIC,CACDzR,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOoQ,MAClB,GAIC,CACD3R,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOqQ,MAClB,GAIC,CACD5R,IAAK,OACLuB,MAAO,SAAcA,GACnB,OAAOyB,EAAEzB,GAAOoS,MAClB,GAIC,CACD3T,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOqS,OAClB,GAIC,CACD5T,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOsS,OAClB,GAIC,CACD7T,IAAK,QACLuB,MAAO,SAAeA,GACpB,OAAOyB,EAAEzB,GAAOuS,OAClB,GAOC,CACD9T,IAAK,wBACLuB,MAAO,SAA+BwS,EAAoBC,EAAYC,EAAYC,GAChF,OAAOjV,KAAKkV,2BAA2BnR,EAAE+Q,GAAqB/Q,EAAEgR,GAAahR,EAAEiR,GAAaC,EAC9F,GAKC,CACDlU,IAAK,qBACLuB,MAAO,SAA4B6S,EAAUJ,EAAYC,EAAYC,GACnE,OAAOjV,KAAKoV,wBAAwBD,EAAUpR,EAAEgR,GAAahR,EAAEiR,GAAaC,EAC9E,GAMC,CACDlU,IAAK,yBACLuB,MAAO,SAAgCwS,EAAoBC,EAAYM,EAAUJ,GAC/E,OAAOjV,KAAKsV,4BAA4BvR,EAAE+Q,GAAqB/Q,EAAEgR,GAAahR,EAAEsR,GAAWtR,EAAEkR,GAC/F,GAMC,CACDlU,IAAK,sBACLuB,MAAO,SAA6B6S,EAAUJ,EAAYM,EAAUJ,GAClE,OAAOjV,KAAKuV,yBAAyBxR,EAAEoR,GAAWpR,EAAEgR,GAAahR,EAAEsR,GAAWtR,EAAEkR,GAClF,GAOC,CACDlU,IAAK,uBACLuB,MAAO,SAA8BkT,EAAMC,EAAYC,GACrD,OAAO1V,KAAK2V,0BAA0B5R,EAAEyR,GAAOzR,EAAE0R,GAAa1R,EAAE2R,GAClE,GACC,CACD3U,IAAK,0BACLuB,MAAO,SAAiCsT,GAGtC,GAAoB,GAAhBrY,KAAKsY,SAAgB,EACvB,OAAO1R,EAAM,EAAG,EAAG,GAErB,IAAI2R,EAAavY,KAAKsY,SAAW,GAAM,GAAK,EAE5C,GAAoB,GAAhBtY,KAAKsY,SAAgB,EACvB,OAAO1R,EAAM2R,EAAY,EAAG,GAG9B,IAAIxX,EAAQf,KAAKvB,MAAMuB,KAAKsY,UAAYD,EAAY,IAChDG,EAAsB,IAAVzX,EAA8B,IAAhBf,KAAKsY,SAAiB,IAAsB,GAAhBtY,KAAKsY,SAE3DtY,KAAKsY,SAAW,KAClBE,EAAYxY,KAAKyH,MAAM+Q,IAEzB,IAAIC,EAAYzY,KAAKnB,IAAI,GAAI2Z,GAK7B,OAHIxY,KAAKsY,SAAW,KAClBG,EAAYzY,KAAKyH,MAAMgR,IAElB/R,EAAG6R,EAAYxX,EAAO0X,EAC/B,GACC,CACDjV,IAAK,6BACLuB,MAAO,SAAoCwS,EAAoBC,EAAYC,EAAYC,GACrF,IAAIgB,EAAclB,EAAWvY,IAAIwY,EAAW5Y,IAAI6Y,IAChD,OAAO9Y,EAAQH,MAAM8Y,EAAmB5Y,IAAI+Z,GAAazZ,IAAIwY,EAAWvY,IAAI,IAAIH,IAAI,GAAGP,QAAQG,IAAI8Y,EAAWjZ,SAChH,GACC,CACDgF,IAAK,0BACLuB,MAAO,SAAiC6S,EAAUJ,EAAYC,EAAYC,GACxE,OAAOF,EAAWvY,IAAIwY,EAAW5Y,IAAI6Y,IAAezY,IAAIL,EAAQM,IAAI,EAAGuY,EAAW5Y,IAAI+Y,KAAYjZ,IAAIC,EAAQM,IAAI,EAAGuY,GACvH,GACC,CACDjU,IAAK,8BACLuB,MAAO,SAAqCwS,EAAoBC,EAAYM,EAAUJ,GAIpF,IAAIgB,EAAclB,EAAWzY,IAAI2Y,EAAazY,IAAI6Y,IAC9CpX,EAAIgY,EAAYxZ,IAAI4Y,EAASnZ,IAAI,IACjCga,EAAKjY,EAAE7B,IAAI,GACf,OAAO6B,EAAEM,MAAMjC,IAAI4Z,EAAG5Z,IAAI+Y,EAAS7Y,IAAIsY,GAAoBtY,IAAI,IAAI0Q,QAAQhR,IAAImZ,GAAUrZ,OAC3F,GACC,CACD+E,IAAK,2BACLuB,MAAO,SAAkC6S,EAAUJ,EAAYM,EAAUJ,GACvE,IAAIgB,EAAclB,EAAWzY,IAAI2Y,EAAazY,IAAI6Y,IAClD,OAAOF,EAASjZ,IAAI,GAAGM,IAAIyZ,EAAYzZ,IAAI,GAAGyR,KAAKkH,EAAS1Y,IAAI,GAAGD,IAAI6Y,IACzE,GACC,CACDtU,IAAK,4BACLuB,MAAO,SAAmCkT,EAAMC,EAAYC,GAC1D,OAAOF,EAAKtZ,IAAIuZ,GAAYnZ,IAAIkZ,EAAKtZ,IAAIwZ,GAC3C,GACC,CACD3U,IAAK,gBACLuB,MAAO,SAAuBkG,EAAMC,GAElC,OAAID,EAAO,GACFC,EAAS,EAEXtM,EAAQga,iBAAiB3N,EAAMC,EAAQ3E,EAChD,GACC,CACD/C,IAAK,mBACLuB,MAAO,SAA0BkG,EAAMC,GACrC,OAAOtM,EAAQga,iBAAiB3N,EAAMC,EAAQ5E,EAChD,GACC,CACD9C,IAAK,mBACLuB,MAAO,SAA0BkG,EAAMC,EAAQ2N,GAE7C3N,GAAU,GACNA,EAAS,IACXA,EAAS,GAEPA,EAAS,KACXA,EAAS,IAGPD,EAAO,IACTA,EAAO,GAELA,EAAO,KACTA,EAAO,IAQT,IANA,IAAI8E,EAAQ,EACRE,EAAQ,EAKHhN,EAAI,EAAGA,EAAImD,EAAiBnI,SAAUgF,EAAG,CAChD,GAAImD,EAAiBnD,IAAMgI,EAAM,CAE/B8E,EAAQ8I,EAAK5V,GAAGjD,KAAKvB,MAAMyM,IAC3B+E,EAAQ4I,EAAK5V,GAAGjD,KAAK+B,KAAKmJ,IAC1B,KACF,CAAO,GAAI9E,EAAiBnD,GAAKgI,GAAQ7E,EAAiBnD,EAAI,GAAKgI,EAAM,CAEvE,IAAI6N,GAAY7N,EAAO7E,EAAiBnD,KAAOmD,EAAiBnD,EAAI,GAAKmD,EAAiBnD,IAC1F8M,EAAQ8I,EAAK5V,GAAGjD,KAAKvB,MAAMyM,KAAY,EAAI4N,GAAYD,EAAK5V,EAAI,GAAGjD,KAAKvB,MAAMyM,IAAW4N,EACzF7I,EAAQ4I,EAAK5V,GAAGjD,KAAK+B,KAAKmJ,KAAY,EAAI4N,GAAYD,EAAK5V,EAAI,GAAGjD,KAAK+B,KAAKmJ,IAAW4N,EACvF,KACF,CACF,CACA,IAAIC,EAAO7N,EAASlL,KAAKvB,MAAMyM,GAI/B,OAAI6E,GAAS,GAAKE,GAAS,EAClBF,GAAS,EAAIgJ,GAAQ9I,EAAQ8I,EAE7B/Y,KAAKnB,IAAIoM,EAAMjL,KAAK6H,IAAIkI,GAAS/P,KAAK6H,IAAIoD,IAAS,EAAI8N,GAAQ/Y,KAAK6H,IAAIoI,GAASjQ,KAAK6H,IAAIoD,GAAQ8N,EAE7G,GACC,CACDvV,IAAK,cACLuB,MAAO,SAAqBA,EAAOkG,GACjC,IAAI2E,EAASpH,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5EzD,EAAQyB,EAAEzB,GACVkG,EAAOzE,EAAEyE,GACT,IAAI2G,EAAQ3G,EAEZ,GADAA,EAAOA,EAAKmD,WACA,GAARnD,GAAaA,GAAQ,EAAG,MAAO,CAAC,IAAIrM,EAAQA,EAAQuO,MAAO,GAC/D,GAAIlC,EAAO,kBAAwB,MAAO,CAAClG,EAAM3D,KAAK6J,EAAM,IAAK2E,GAAS,GAC1E,IAAIE,EAAQlR,EAAQuK,GAAG8B,GAAMjK,MACzB+O,EAAQD,EAAME,WAAWrR,IAAImR,GAC7BG,EAAQrR,EAAQsO,KAKpB,GAJIjC,EAAO,IAAGgF,EAAQH,EAAME,UAAS,GAAOrR,IAAImR,IAC5C7E,EAAO,oBACT8E,EAAQE,EAAQrR,EAAQsK,WAAWlJ,KAAKqG,IAEtCtB,EAAM/F,GAAG+Q,GAAQ,MAAO,CAAChL,EAAM3D,KAAK6J,EAAM,IAAK2E,GAAS,GAC5D,GAAI7K,EAAMvD,GAAGuO,GAAQ,MAAO,CAAC,IAAInR,EAAQA,EAAQsO,MAAO,GACxD,GAAInI,EAAMvD,GAAGyO,GAAQ,MAAO,CAAC,IAAIrR,EAAQA,EAAQwK,SAAU,GAC3D,GAAIrE,EAAM2J,GAAGuB,GAAQ,CACnB,IAAIiC,EAAWjC,EAAMhR,IAAI,GACrBkT,EAAUP,EAAM/S,IAAIqT,GACpB8G,EAAW,EACf,GAAIjU,EAAM1D,IAAI6Q,IAAanN,EAAM/F,GAAGmT,GAAU6G,EAAW,OAAO,GAAIjU,EAAM1D,IAAI8Q,GAAU,CACtF,IAAI3H,EAAU2H,EACd6G,EAAW,EACX,MAAOxO,EAAQxL,GAAG+F,GAGhB,GAFAyF,EAAUoH,EAAM/S,IAAI2L,GACpBwO,GAAsB,EAClBxO,EAAQzJ,MAAQ,EAAG,CACrB,IAAIkY,EAAajZ,KAAKvB,MAAMsG,EAAMhE,MAAQyJ,EAAQzJ,MAAQ,GAC1DyJ,EAAUoH,EAAMmB,YAAYkG,EAAYzO,EAASoF,GACjDoJ,GAAsBC,CACxB,CAEEzO,EAAQkE,GAAG3J,KACbyF,EAAUA,EAAQ3C,IAAIoD,GACtB+N,GAAsB,EAE1B,MAAO,GAAIjU,EAAM/F,GAAGkT,GAAW,CAC7B,IAAIgH,EAAYhH,EAChB8G,EAAW,EACX,MAAOE,EAAUxK,GAAG3J,GAClBmU,EAAYA,EAAUrR,IAAIoD,GAC1B+N,GAAsB,CAE1B,CACA,IAAI5I,EAAa,EACb+I,EAAS,EACTlI,EAAY,GACZoB,EAAWH,EACXW,EAAQjU,EAAQoK,MACpB,MAAOiI,EAAY,MAAO,CAIxB,GAHAkI,EAAS/I,EAAaa,EACtBoB,EAAWH,EAASrT,IAAI,EAAIsa,GAAQla,IAAIkT,EAAQtT,IAAIsa,IACpDtG,EAAQjU,EAAQmU,YAAY9H,EAAM+N,EAAU3G,GACxCQ,EAAMrR,GAAGuD,GAAQ,MAAO,CAAC,IAAInG,EAAQoa,EAAWG,GAAS,GAAYtG,EAAM7T,GAAG+F,KAAQqL,GAAca,GACxGA,GAAa,CACf,CACA,OAAI4B,EAAM5D,cAAclK,EAAO,MAAc,CAAC,IAAInG,EAAQA,EAAQuO,MAAO,GAClE,CAAC,IAAIvO,EAAQoa,EAAW5I,GAAa,EAC9C,CACA,GAAIrL,EAAM/F,GAAGiR,IAAUlL,EAAM2J,GAAGqB,GAAQ,CACtC,IAAIqJ,EAAYrJ,EAAM9Q,IAAIgR,GAAON,OAC7B0J,EAAWzH,EAAM/S,IAAIua,GACrBE,EAAY,EAChB,GAAIvU,EAAMxD,IAAI6X,IAAcrU,EAAM2J,GAAG2K,GAAWC,EAAY,OAAO,GAAIvU,EAAMxD,IAAI8X,GAAW,CAC1F,IAAIE,EAAYF,EAChBC,EAAY,EACZ,MAAOC,EAAU7K,GAAG3J,GAClBwU,EAAY3H,EAAM/S,IAAI0a,GACtBD,GAAwB,EAEtBC,EAAUva,GAAG+F,KACfwU,EAAYA,EAAU1R,IAAIoD,GAC1BqO,GAAwB,EAE5B,MAAO,GAAIvU,EAAM2J,GAAG0K,GAAY,CAC9B,IAAII,EAAYJ,EAChBE,EAAY,EACZ,MAAOE,EAAUxa,GAAG+F,GAClByU,EAAYA,EAAU3R,IAAIoD,GAC1BqO,GAAwB,CAE5B,CACA,IAAIG,EAAc,EACdC,EAAU,EACVC,EAAa,GACbC,EAAYR,EACZS,EAAUjb,EAAQoK,MACtB,MAAO2Q,EAAa,MAAO,CAIzB,GAHAD,EAAUD,EAAcE,EACxBC,EAAYR,EAAUva,IAAI,EAAI6a,GAASza,IAAIoa,EAASxa,IAAI6a,IACxDG,EAAUjb,EAAQmU,YAAY9H,EAAMqO,EAAWM,GAC3CC,EAAQrY,GAAGuD,GAAQ,MAAO,CAAC,IAAInG,EAAQ0a,EAAYI,GAAU,GAAYG,EAAQnL,GAAG3J,KAAQ0U,GAAeE,GAC/GA,GAAc,CAChB,CACA,OAAIE,EAAQ5K,cAAclK,EAAO,MAAc,CAAC,IAAInG,EAAQA,EAAQuO,MAAO,GACpE,CAAC,IAAIvO,EAAQ0a,EAAYG,GAAc,EAChD,CACA,MAAM,IAAIrU,MAAM,oCAClB,GACC,CACD5B,IAAK,oBACLuB,MAAO,SAA2B+U,GAChC,IAAIC,EAAavR,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,IAAmBA,UAAU,GAC5EwI,EAAaxI,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK,IACjFwR,EAAOxR,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5J,EAAQqb,UAAUjZ,MAC7FkZ,EAAO1R,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5J,EAAQqb,UACnFE,EAAO3R,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5J,EAAQqb,UAAUjZ,MAC7FoZ,EAAO5R,UAAUvK,OAAS,QAAsBwB,IAAjB+I,UAAU,GAAmBA,UAAU,GAAK5J,EAAQqb,UACvF,OAAO,SAAUlV,GAMf,GALAA,EAAQ,IAAInG,EAAQmG,GACpBiV,EAAO,IAAIpb,EAAQob,GACnBE,EAAO,IAAItb,EAAQsb,GACnBC,EAAO,IAAIvb,EAAQub,GACnBC,EAAO,IAAIxb,EAAQwb,GACfrV,EAAMsV,SAAWH,EAAKlb,GAAGgb,IAASjV,EAAM/F,GAAGmb,IAASpV,EAAM2J,GAAG0L,GAAO,OAAO,IAAIxb,EAAQA,EAAQuO,MAEnG,IAAImN,EAAa,SAAoBvV,GACnC,OAAO,IAAInG,EAAQmG,EACrB,EACIwV,GAAe,EACnB,GAAIL,EAAKlb,GAAG,GAAIub,GAAe,OAAW,GAAIP,EAAKtL,GAAG,GAAI6L,GAAe,MAAU,CACjF,IAAIC,EAAWV,EAAKlb,EAAQoK,OAC5B,GAAIwR,EAAShZ,GAAGuD,GAAQ,OAAO6B,EAAM,EAAG,EAAG,GAC3C2T,EAAexV,EAAM2J,GAAG8L,GACpBT,IAAYQ,GAAgBA,EAClC,CACA,IACIE,EADAC,EAAWH,EAEf,GAAIA,EAAc,CAEhB,GAAIL,EAAKlb,GAAG0G,GAAkB6U,GAAe,OAAU,GAAIP,EAAKtL,GAAGhJ,GAAkB6U,GAAe,MAAW,CAC7G,IAAII,EAAYb,EAAK,IAAIlb,EAAQ8G,IACjC6U,EAAexV,EAAM/F,GAAG2b,GACpBZ,IAAYQ,GAAgBA,EAClC,CACA,GAAIA,EAAc,CAChBE,GAAa,EAEb,IAAIG,EAAQhc,EAAQC,IAAI,GAAI2G,GAAWvE,QACvC,GAAIiZ,EAAKlb,GAAG4b,GAAQL,GAAe,OAAW,GAAIP,EAAKtL,GAAGkM,GAAQL,GAAe,MAAU,CACzF,IAAIM,EAAaf,EAAK,IAAIlb,EAAQgc,IAClCL,EAAexV,EAAM2J,GAAGmM,GACpBd,IAAYQ,GAAgBA,EAClC,CAEA,GAAIA,EAAcD,EAAa,SAAoBvV,GACjD,OAAOnG,EAAQC,IAAI,GAAIkG,GAAO9D,OAChC,MAAO,CAEL,IAAI6Z,EAASlc,EAAQoM,QAAQ,GAAIxF,GACjC,GAAI0U,EAAKlb,GAAG8b,GAASP,GAAe,OAAW,GAAIP,EAAKtL,GAAGoM,GAASP,GAAe,MAAU,CAC3F,IAAIQ,EAAajB,EAAK,IAAIlb,EAAQkc,IAClCP,EAAexV,EAAM2J,GAAGqM,GACpBhB,IAAYQ,GAAgBA,EAClC,CAEkBD,EAAdC,EAA2B,SAAoBxV,GACjD,OAAOnG,EAAQoM,QAAQ,GAAI,IAAIpM,EAAQmG,GAAOqJ,YAAYnN,OAC5D,EAEkB,SAAoB8D,GACpC,OAAO,IAAInG,EAAQmG,GAAO2J,GAAG1O,KAAKxB,MAAM0C,OAAO8Z,YAAcpc,EAAQoK,MAAQpK,EAAQoM,QAAQ,GAAIpM,EAAQC,IAAI,GAAIkG,GAAOqJ,YAAYnN,OACtI,CACF,CACF,KAAO,CAGL,GAFAwZ,GAAa,EAETP,EAAKlb,GAAGwG,GAAY+U,GAAe,OAAU,GAAIP,EAAKtL,GAAGlJ,GAAY+U,GAAe,MAAW,CACjG,IAAIU,EAAanB,EAAK,IAAIlb,EAAQ4G,IAClC+U,EAAexV,EAAM/F,GAAGic,GACpBlB,IAAYQ,GAAgBA,EAClC,CAEA,GAAIA,EAAcD,EAAa,SAAoBvV,GACjD,OAAO,IAAInG,EAAQmG,EACrB,MAAO,CAEL,IAAImW,EAAUtc,EAAQC,IAAI,GAAI2G,GAC9B,GAAI0U,EAAKlb,GAAGkc,GAAUX,GAAe,OAAU,GAAIP,EAAKtL,GAAGwM,GAAUX,GAAe,MAAW,CAC7F,IAAIY,EAAarB,EAAK,IAAIlb,EAAQsc,IAClCX,EAAexV,EAAM/F,GAAGmc,GACpBpB,IAAYQ,GAAgBA,EAClC,CAEA,GAAIA,EAAcD,EAAa,SAAoBvV,GACjD,OAAOnG,EAAQC,IAAI,GAAIkG,EACzB,MAAO,CAEL,IAAIqW,EAAUxc,EAAQoM,QAAQ,GAAIxF,GAClC,GAAI0U,EAAKlb,GAAGoc,GAAUb,GAAe,OAAU,GAAIP,EAAKtL,GAAG0M,GAAUb,GAAe,MAAW,CAC7F,IAAIc,EAAavB,EAAK,IAAIlb,EAAQwc,IAClCb,EAAexV,EAAM/F,GAAGqc,GACpBtB,IAAYQ,GAAgBA,EAClC,CAEkBD,EAAdC,EAA2B,SAAoBxV,GACjD,OAAOnG,EAAQoM,QAAQ,GAAI,IAAIpM,EAAQmG,GAAOqJ,WAChD,EAEkB,SAAoBrJ,GACpC,OAAO,IAAInG,EAAQmG,GAAO2J,GAAG1O,KAAKxB,MAAM0C,OAAO8Z,YAAcpc,EAAQsO,KAAOtO,EAAQoM,QAAQ,GAAIpM,EAAQC,IAAI,GAAIkG,GAAOqJ,WACzH,CACF,CACF,CACF,CACF,KAAO,CAGL,GAFAqM,GAAa,EAETP,EAAKlb,IAAI0G,GAAkB6U,GAAe,OAAW,GAAIP,EAAKtL,IAAIhJ,GAAkB6U,GAAe,MAAU,CAC/G,IAAIe,EAAaxB,EAAK,IAAIlb,GAAS8G,IACnC6U,EAAexV,EAAM2J,GAAG4M,GACpBvB,IAAYQ,GAAgBA,EAClC,CACA,GAAIA,EAAc,CAEhB,IAAIgB,EAAU3c,EAAQC,IAAI,GAAI2G,GAAWvE,QAAQD,MACjD,GAAIkZ,EAAKlb,GAAGuc,GAAUhB,GAAe,OAAU,GAAIP,EAAKtL,GAAG6M,GAAUhB,GAAe,MAAW,CAC7F,IAAIiB,EAAa1B,EAAK,IAAIlb,EAAQ2c,IAClChB,EAAexV,EAAM/F,GAAGwc,GACpBzB,IAAYQ,GAAgBA,EAClC,CAEA,GAAIA,EAAcD,EAAa,SAAoBvV,GACjD,OAAOnG,EAAQC,IAAI,GAAIkG,GAAO9D,QAAQD,KACxC,MAAO,CAEL,IAAIya,EAAU7c,EAAQoM,QAAQ,GAAIxF,GAAWxE,MAC7C,GAAIkZ,EAAKlb,GAAGyc,GAAUlB,GAAe,OAAU,GAAIP,EAAKtL,GAAG+M,GAAUlB,GAAe,MAAW,CAC7F,IAAImB,EAAa5B,EAAK,IAAIlb,EAAQ6c,IAClClB,EAAexV,EAAM/F,GAAG0c,GACpB3B,IAAYQ,GAAgBA,EAClC,CAEkBD,EAAdC,EAA2B,SAAoBxV,GACjD,OAAOnG,EAAQoM,QAAQ,GAAI,IAAIpM,EAAQmG,GAAOqJ,YAAYnN,QAAQD,KACpE,EAEkB,SAAoB+D,GACpC,OAAO,IAAInG,EAAQmG,GAAO2J,GAAG1O,KAAKxB,MAAM0C,OAAO8Z,YAAcpc,EAAQoK,MAAQpK,EAAQoM,QAAQ,GAAIpM,EAAQC,IAAI,GAAIkG,GAAOqJ,YAAYnN,QAAQD,KAC9I,CACF,CACF,KAAO,CAGL,GAFAyZ,GAAa,EAETP,EAAKlb,IAAIwG,GAAY+U,GAAe,OAAW,GAAIP,EAAKtL,IAAIlJ,GAAY+U,GAAe,MAAU,CACnG,IAAIoB,EAAc7B,EAAK,IAAIlb,GAAS4G,IACpC+U,EAAexV,EAAM2J,GAAGiN,GACpB5B,IAAYQ,GAAgBA,EAClC,CAEA,GAAIA,EAAcD,EAAa,SAAoBvV,GACjD,OAAOnG,EAAQoC,IAAI+D,EACrB,MAAO,CAEL,IAAI6W,EAAUhd,EAAQC,IAAI,GAAI2G,GAAWxE,MACzC,GAAIkZ,EAAKlb,GAAG4c,GAAUrB,GAAe,OAAW,GAAIP,EAAKtL,GAAGkN,GAAUrB,GAAe,MAAU,CAC7F,IAAIsB,EAAc/B,EAAK,IAAIlb,EAAQgd,IACnCrB,EAAexV,EAAM2J,GAAGmN,GACpB9B,IAAYQ,GAAgBA,EAClC,CAEA,GAAIA,EAAcD,EAAa,SAAoBvV,GACjD,OAAOnG,EAAQC,IAAI,GAAIkG,GAAO/D,KAChC,MAAO,CAEL,IAAI8a,EAAUld,EAAQoM,QAAQ,GAAIxF,GAAWxE,MAC7C,GAAIkZ,EAAKlb,GAAG8c,GAAUvB,GAAe,OAAW,GAAIP,EAAKtL,GAAGoN,GAAUvB,GAAe,MAAU,CAC7F,IAAIwB,EAAcjC,EAAK,IAAIlb,EAAQkd,IACnCvB,EAAexV,EAAM2J,GAAGqN,GACpBhC,IAAYQ,GAAgBA,EAClC,CAEkBD,EAAdC,EAA2B,SAAoBxV,GACjD,OAAOnG,EAAQoM,QAAQ,GAAI,IAAIpM,EAAQmG,GAAOqJ,YAAYpN,KAC5D,EAEkB,SAAoB+D,GACpC,OAAO,IAAInG,EAAQmG,GAAO2J,GAAG1O,KAAKxB,MAAM0C,OAAO8Z,YAAcpc,EAAQwK,QAAUxK,EAAQoM,QAAQ,GAAIpM,EAAQC,IAAI,GAAIkG,GAAOqJ,YAAYpN,KACxI,CACF,CACF,CACF,CACF,CAcA,IAbA,IAAIgb,EAAmBtB,GAAYD,GAAcV,EAC7CkC,EAAcD,EAAmB,SAAUvb,EAAGC,GAChD,OAAO9B,EAAQ8P,GAAGjO,EAAGC,EACvB,EAAI,SAAUD,EAAGC,GACf,OAAO9B,EAAQI,GAAGyB,EAAGC,EACvB,EACIuQ,EAAY,KACZC,GAA8B,EAC9BC,GAAkB,EAClBvP,EAAS,EACTsa,EAAgBtd,EAAQqK,KACxBkT,EAAY,EACZC,GAAW,EACNnZ,EAAI,EAAGA,EAAI+N,IAAc/N,EAAG,CACnCmZ,GAAW,EACXD,EAAYva,EACZsa,EAAgB5B,EAAW1Y,GAEvBsa,EAAcxN,GAAGwL,KACnBgC,EAAgBhC,EAChBkC,GAAW,GAETF,EAAcld,GAAGgb,KACnBkC,EAAgBlC,EAChBoC,GAAW,GAEb,IAAI/K,EAAcyI,EAAKoC,GACvB,GAAI7K,EAAY7P,GAAGuD,KAAWqX,EAC5B,MAEF,IAAI9K,EAAiB2K,EAAY5K,EAAatM,GAa9C,GAZI9B,EAAI,GACFkO,GAAmBG,IACrBJ,GAA8B,GAGlCC,EAAkBG,EACdJ,EACFD,GAAa,EAEbA,GAAa,EAGXK,GAAkB0K,GAAoBE,EAAc1a,GAAG0Y,IAAS5I,GAAkB0K,GAAoBE,EAAc1a,GAAGwY,GAAO,OAAO,IAAIpb,EAAQA,EAAQuO,MAG7J,GAFA8D,EAAYjR,KAAKZ,IAAI6R,IAAcK,GAAkB,EAAI,GACzD1P,GAAUqP,EACQ,IAAdA,GAAmBkL,GAAava,EAClC,KAEJ,CACA,OAAO0Y,EAAW1Y,EACpB,CACF,KAEKhD,CACT,CAj5I2B,GAm9I3B,OAjEAA,EAAQoK,MAAQpC,EAAM,EAAG,EAAG,GAI5BhI,EAAQqK,KAAOrC,EAAM,EAAG,EAAG,GAI3BhI,EAAQyd,QAAUzV,GAAO,EAAG,EAAG,GAI/BhI,EAAQ0d,KAAO1V,EAAM,EAAG,EAAG,GAI3BhI,EAAQ+T,KAAO/L,EAAM,EAAG,EAAG,IAI3BhI,EAAQuO,KAAOvG,EAAM1F,OAAO2I,IAAK3I,OAAO2I,IAAK3I,OAAO2I,KAIpDjL,EAAQsO,KAAOtG,EAAM,EAAG1F,OAAOC,kBAAmBD,OAAOC,mBAIzDvC,EAAQwK,QAAUxC,GAAO,EAAG1F,OAAOC,kBAAmBD,OAAOC,mBAI7DvC,EAAQ2d,WAAa7V,EAAG,EAAG,EAAGxF,OAAO8Z,WAIrCpc,EAAQ4d,WAAa9V,EAAG,EAAG,EAAGxF,OAAOub,WAMrC7d,EAAQ8d,cAAgBhW,EAAG,EAAGxF,OAAOyb,iBAAkBnX,EAAY,GAInE5G,EAAQge,cAAgBlW,EAAG,EAAGxF,OAAOyb,mBAAoBnX,EAAY,IAIrE5G,EAAQqb,UAAYvT,EAAG,EAAGxF,OAAO8Z,UAAWxV,EAAY,GAIxD5G,EAAQie,UAAYnW,EAAG,EAAGxF,OAAO8Z,YAAaxV,EAAY,IAC1D5G,EAAQuL,gBAAkB,IAAI5F,EAASuB,GAIvCU,EAAI5H,EAAQ6H,kBACZC,EAAK9H,EAAQ+H,eACbC,EAAQhI,EAAQiI,2BAChBjI,EAAQ6K,qBACR7K,EAAQ4W,iCAED5W,CAET,G,qLCl2JFke,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,OACEC,EAAAA,EAAAA,IAQM,aAPJC,EAAAA,EAAAA,IAAsCC,EAAA,CAAzBC,GAAG,KAAG,CAFvBC,SAAAC,EAAAA,EAAAA,KAEwB,IAAIC,EAAA,KAAAA,EAAA,KAF5BC,EAAAA,EAAAA,IAEwB,YAFxBC,EAAA,KAGIP,EAAAA,EAAAA,IAA+CC,EAAA,CAAlCC,GAAG,SAAO,CAH3BC,SAAAC,EAAAA,EAAAA,KAG4B,IAASC,EAAA,KAAAA,EAAA,KAHrCC,EAAAA,EAAAA,IAG4B,iBAH5BC,EAAA,KAIIP,EAAAA,EAAAA,IAA0DC,EAAA,CAA7CC,GAAG,iBAAe,CAJnCC,SAAAC,EAAAA,EAAAA,KAIoC,IAAYC,EAAA,KAAAA,EAAA,KAJhDC,EAAAA,EAAAA,IAIoC,oBAJpCC,EAAA,KAKIP,EAAAA,EAAAA,IAAsDC,EAAA,CAAzCC,GAAG,eAAa,CALjCC,SAAAC,EAAAA,EAAAA,KAKkC,IAAUC,EAAA,KAAAA,EAAA,KAL5CC,EAAAA,EAAAA,IAKkC,kBALlCC,EAAA,KAMIP,EAAAA,EAAAA,IAAqDC,EAAA,CAAxCC,GAAG,YAAU,CAN9BC,SAAAC,EAAAA,EAAAA,KAM+B,IAAYC,EAAA,KAAAA,EAAA,KAN3CC,EAAAA,EAAAA,IAM+B,oBAN/BC,EAAA,KAOIP,EAAAA,EAAAA,IAAuDC,EAAA,CAA1CC,GAAG,YAAU,CAP9BC,SAAAC,EAAAA,EAAAA,KAO+B,IAAcC,EAAA,KAAAA,EAAA,KAP7CC,EAAAA,EAAAA,IAO+B,sBAP/BC,EAAA,KAQIP,EAAAA,EAAAA,IAA6DC,EAAA,CAAhDC,GAAG,gBAAc,CARlCC,SAAAC,EAAAA,EAAAA,KAQmC,IAAgBC,EAAA,KAAAA,EAAA,KARnDC,EAAAA,EAAAA,IAQmC,wBARnCC,EAAA,OAUEP,EAAAA,EAAAA,IAAcQ,IAAA,G,eCThB,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,Q,iDCPOC,MAAM,Q,0CAAXf,EAAAA,EAAAA,IAUM,MAVNgB,EAUMR,EAAA,KAAAA,EAAA,KATJN,EAAAA,EAAAA,IAAa,UAAT,QAAI,IACVA,EAAAA,EAAAA,IAA6O,SAA1O,0OAAsO,IACzOA,EAAAA,EAAAA,IAKK,YAJJA,EAAAA,EAAAA,IAAoC,UAAhC,gCACJA,EAAAA,EAAAA,IAAqC,UAAjC,iCACJA,EAAAA,EAAAA,IAA0B,UAAtB,sBACJA,EAAAA,EAAAA,IAA0B,UAAtB,uBAAiB,IAEtBA,EAAAA,EAAAA,IAA6D,OAAxDe,IAAAC,EAA2BC,MAAQ,MAAM/S,OAAS,O,mCCLzD,MAAM,GAA2B,OAAgB,IAAQ,CAAC,CAAC,SAAS,KAEpE,Q,SCNO2S,MAAM,Q,GAEJA,MAAM,Q,0CAFbf,EAAAA,EAAAA,IAsCM,MAtCNgB,EAsCM,cArCJd,EAAAA,EAAAA,IAAkB,UAAd,aAAS,KACbA,EAAAA,EAAAA,IAmCM,MAnCNkB,EAmCM,cAtCVC,EAAAA,EAAAA,IAAA,6uCAqCMnB,EAAAA,EAAAA,IAAqD,UAA7CoB,GAAK,SAAUC,QAAKf,EAAA,KAAAA,EAAA,OAAAgB,IAAEC,EAAAC,QAAAD,EAAAC,UAAAF,KAAQ,a,CCrC5C,IAAIG,EAkBAC,EAhBAC,EAAU,IAAIC,MAAM,GACpBC,EAAa,CACb,CAAC,GACD,CAAC,GACD,EAAE,GACF,CAAC,GACD,CAAC,YAAa,iBACd,CAAC,MAAO,OAAQ,QAAS,UACzB,CAAC,OAAQ,SACT,CAAC,wBAAyB,2BAA4B,8BAA+B,iCACrF,wBAAyB,2BAA4B,8BAA+B,iCACpF,wBAAyB,2BAA4B,8BAA+B,iCACpF,wBAAyB,2BAA4B,8BAA+B,mCAGpFC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGnC,IAAIN,EAASA,KACTC,EAAQ,EACRC,EAAQ,GACR,IAAK,IAAIzb,EAAI,EAAGA,GAAK,EAAGA,IACpB0b,EAAQ1b,EAAE,GAAM8b,SAASC,eAAe,IAAM/b,GAAG8B,MAC7C8Z,EAAW5b,EAAE,IAAM0b,EAAQ1b,EAAE,IAAM4b,EAAW5b,EAAE,GAAG3D,SAASqf,EAAQ1b,EAAE,KACtEwb,GAASK,EAAO7b,EAAE,GAClByb,GAASzb,EAAI,mDAEZyb,GAASzb,EAAI,8CAClByb,GAAS,IAAMI,EAAO7b,EAAE,GAAK,OAAwB,GAAf6b,EAAO7b,EAAE,GAAU,GAAK,KAAO,QAEzE,IAAIgc,EAAU,SAAWhd,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,OACtHid,EAAST,EAAQ,EAAI,oCAAsCA,EAAQ,GAAK,sCAAwCQ,EAEhHE,EAAOJ,SAASC,eAAe,QACnCD,SAASC,eAAe,aAAaI,MAAMC,QAAU,OACrDN,SAASC,eAAe,UAAUI,MAAMC,QAAU,OAClDF,EAAKC,MAAME,SAAW,OACtBH,EAAKI,UAAY,kBAAoBb,EAAQ,UAAYD,EAAQ,cAAgBS,EAAS,iBAAiB,EAG/G,IAAI1c,EAAU,CACVgc,OAAMA,GAGV,IDDA,GACEgB,QAAQ,CACJhB,MAAAA,GACIxe,EAAKwe,QACT,IE1CN,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,SCROX,MAAM,Q,GAEJA,MAAM,Q,GAERO,GAAK,a,0CAJVtB,EAAAA,EAAAA,IAwEM,MAxENgB,EAwEM,cAvEJd,EAAAA,EAAAA,IAA4B,UAAxB,uBAAmB,KACvBA,EAAAA,EAAAA,IAqEM,MArENkB,EAqEM,cApERlB,EAAAA,EAAAA,IAA8C,KAA3CoB,GAAK,QAAO,+BAA2B,KAC1CpB,EAAAA,EAAAA,IAkEM,MAlENyC,EAkEM,cAvERtB,EAAAA,EAAAA,IAAA,wpDAsEGnB,EAAAA,EAAAA,IAAqD,UAA7CoB,GAAK,SAAUC,QAAKf,EAAA,KAAAA,EAAA,OAAAgB,IAAEC,EAAAC,QAAAD,EAAAC,UAAAF,KAAQ,e,CCtEzC,IACIG,EAQAC,EACAQ,EAVAP,EAAU,IAAIC,MAAM,GAEpBC,EAAa,CACb,kBACA,wCACA,sCACA,kEAEAC,EAAS,CAAC,EAAG,EAAG,EAAG,GAIvB,IAAI3f,EAAQA,KACR4f,SAASC,eAAe,WAAWO,UAAY,aAAetd,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,MAAM,EAGrKuc,EAASA,KACTC,EAAQ,EACRC,EAAQ,GACR,IAAK,IAAIzb,EAAI,EAAGA,GAAK,EAAGA,IACpB0b,EAAQ1b,EAAE,GAAK8b,SAASC,eAAe,SAAW/b,GAAG8B,MACjD8Z,EAAW5b,EAAE,IAAM0b,EAAQ1b,EAAE,IAC7Bwb,GAASK,EAAO7b,EAAE,GAClByb,GAASzb,EAAI,mDAEZyb,GAASzb,EAAI,8CAClByb,GAAS,IAAMI,EAAO7b,EAAE,GAAK,YAEhBic,EAAbT,GAAS,GAAa,SAAWxc,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,OAC7Hwc,EAAQ,EAAY,oCACf,sCAEd,IAAIU,EAAOJ,SAASC,eAAe,QACnCD,SAASC,eAAe,aAAaI,MAAMC,QAAU,OACrDF,EAAKC,MAAME,SAAW,OACtBH,EAAKI,UAAY,iBAAmBb,EAAQ,UAAYD,EAAQ,WAAaS,EAAS,iBAAiB,EAG3G,IAAI1c,EAAU,CACVrD,QACAqf,OAAMA,GAEV,IDqCA,GACEkB,OAAAA,GACIC,EAAaxgB,OACjB,EACAqgB,QAAQ,CACJhB,MAAAA,GACEmB,EAAanB,QACf,IE/EN,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,SCROX,MAAM,Q,0CAAXf,EAAAA,EAAAA,IAyCM,MAzCNgB,EAyCM,cA1CRK,EAAAA,EAAAA,IAAA,ivBAyCCnB,EAAAA,EAAAA,IAAuC,UAA9BqB,QAAKf,EAAA,KAAAA,EAAA,OAAAgB,IAAEC,EAAAC,QAAAD,EAAAC,UAAAF,KAAQ,W,CCzCzB,IACIG,EAQAC,EACAQ,EAVAP,GAAU,IAAIC,MAAM,GAAGgB,KAAK,IAAIhB,MAAM,IAEtCC,GAAa,CACb,CAAC,GAAI,KAAM,GAAI,OAEfC,GAAS,CACT,CAAC,EAAG,EAAG,EAAG,IAEVe,GAAU,CAAC,OAAQ,SAAU,OAAQ,sBAIzC,IAAIrB,GAASA,KACTC,EAAQ,EACRC,EAAQ,GACR,IAAK,IAAIzb,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB0b,GAAQ1b,EAAE,GAAG,GAAK8b,SAASC,eAAe,OAAS/b,GAAG8B,MACtD4Z,GAAQ1b,EAAE,GAAG,GAAK8b,SAASC,eAAe,SAAW/b,GAAG8B,MACxD4Z,GAAQ1b,EAAE,GAAG,GAAK8b,SAASC,eAAe,OAAS/b,GAAG8B,MACtD4Z,GAAQ1b,EAAE,GAAG,GAAK8b,SAASC,eAAe,KAAO/b,GAAG8B,MACpD,IAAK,IAAI+a,EAAI,EAAGA,GAAK,EAAGA,IAChBjB,GAAW5b,EAAE,GAAG6c,IAAMnB,GAAQ1b,EAAE,GAAG6c,IACnCrB,GAASK,GAAO7b,EAAE,GAAG6c,GACrBpB,GAASzb,EAAI,IAAM4c,GAAQC,GAAK,gBAE/BpB,GAASzb,EAAI,IAAM4c,GAAQC,GAAK,YAE7C,CACiBZ,EAAbT,GAAS,GAAa,WACjBA,EAAQ,EAAY,SACf,SACdsB,MAAM,eAAiBrB,EAAQ,UAAYD,EAAQ,SAAWS,EAAS,WAAW,EAGtF,IAAI1c,GAAU,CACVgc,OAAMA,IAGV,MDUA,IACEgB,QAAQ,CACJhB,MAAAA,GACEwB,GAAWxB,QACb,IE7CN,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,KAEpE,U,UCROX,MAAM,Q,2CAAXf,EAAAA,EAAAA,IAMM,MANNgB,GAMM,cALJd,EAAAA,EAAAA,IAAqB,UAAjB,gBAAY,iBAChBA,EAAAA,EAAAA,IAAyE,SAAtE,sEAAkE,iBACrEA,EAAAA,EAAAA,IAA8F,SAAvFiD,KAAO,OAAO7B,GAAK,MAAM8B,KAAO,MAAMC,YAAc,oC,uBAAmCnD,EAAAA,EAAAA,IAAI,iCAClGA,EAAAA,EAAAA,IAA2D,KAAxDoB,GAAK,UAAUgB,MAAA,sBAA2B,cAAU,KACvDpC,EAAAA,EAAAA,IAAuC,UAA9BqB,QAAKf,EAAA,KAAAA,EAAA,OAAAgB,IAAEC,EAAAC,QAAAD,EAAAC,UAAAF,KAAQ,W,CCN5B,IAAI8B,GAgCAC,GACAC,GA/BAC,GAAY,CAAC,GAAI,IAAK,IAAK,KAAM,QAAS,QAAS,OAAQ,OAAQ,MAAO,OAC1EC,GAAS,CAAC,GAAI,KAAM,MAAO,MAAO,WAAY,OAAQ,MAAO,SAAU,OAAQ,SAC/EC,GAAS,CAAC,GAAI,MAAO,SAAU,UAAW,aAAc,cAAe,WAAY,aAAc,WAAY,YAC7GC,GAAa,CAAC,GAAI,OAAQ,SAAU,UAAW,cAAe,WAAY,UAAW,aAAc,YAAa,WAEhHC,GAAY,CAAC,GAAI,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,SACtFC,GAAS,CAAC,GAAI,KAAM,MAAO,OAAQ,QAAS,QAAS,OAAQ,QAAS,OAAQ,QAC9EC,GAAS,CAAC,GAAI,IAAK,OAAQ,WAAY,YAAa,YAAa,WAAY,YAAa,WAAY,YACtGC,GAAa,CAAC,GAAI,OAAQ,SAAU,WAAY,YAAa,YAAa,WAAY,YAAa,WAAY,YAE/GC,GAAY,CAAC,GAAI,OAAQ,MAAO,MAAO,MAAO,MAAO,KAAM,OAAQ,OAAQ,OAAQ,QACnF,OAAQ,MAAO,SAAU,QAAS,QAAS,QAAS,QAAS,QAAS,SAEtEC,GAAS,CAAC,GAAI,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,OACnEC,GAAU,CAAC,GAAI,GAAI,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,SAC7DC,GAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACrDC,GAAS,CAAC,GAAI,GAAI,IAAK,MAAO,KAAM,KAAM,MAAO,KAAM,KAAM,MAC7DC,GAAa,CAAC,GAAI,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAErEC,GAAY,CAAC,GAAI,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KACrE,KAAM,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,MAAO,MAEvDC,GAAQ,CAAC,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IACtD,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,KAE3CC,GAAS,CAAC,GAAI,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,OACnEC,GAAS,CAAC,GAAI,GAAI,IAAK,MAAO,KAAM,KAAM,MAAO,KAAM,KAAM,MAC7DC,GAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACrDC,GAAa,CAAC,GAAI,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAIrEC,GAAa,CAAC,EAAG,EAAG,EAAG,GACvBC,GAAO,GACPC,GAAO,GAGPrc,GAAY,KAEZC,GAAazF,KAAKxB,MAAM,MAExBkH,GAAkB,EAAE,KAQxB,SAAS9G,GAAQmG,GAEbtC,KAAK3B,KAAOI,OAAO2I,IACnBpH,KAAK1B,MAAQG,OAAO2I,IACpBpH,KAAK/C,IAAMwB,OAAO2I,IAEd9E,aAAiBnG,GACnB6D,KAAK4G,YAAYtE,GACS,kBAAVA,EAChBtC,KAAKyG,WAAWnE,GACU,kBAAVA,EAChBtC,KAAK6G,WAAWvE,IAEhBtC,KAAK3B,KAAO,EACZ2B,KAAK1B,MAAQ,EACb0B,KAAK/C,IAAM,EAEjB,CAEA,IAAI8G,GAAI,SAAWzB,GACf,OAAOnG,GAAQ6H,kBAAkB1B,EACrC,EAEI2B,GAAK,SAAY5F,EAAMC,EAAOrB,GAC9B,OAAOd,GAAQ+H,eAAe7F,EAAMC,EAAOrB,EAC/C,EAEIkH,GAAQ,SAAe9F,EAAMC,EAAOrB,GACpC,OAAOd,GAAQiI,2BAA2B/F,EAAMC,EAAOrB,EAC3D,EAEEd,GAAQ6H,kBAAoB,SAAU1B,GACpC,OAAOA,aAAiBnG,GAAUmG,EAAQ,IAAInG,GAAQmG,EACxD,EAEAnG,GAAQgF,UAAU+C,eAAiB,SAAU7F,EAAMC,EAAOrB,GAMxD,OALA+C,KAAK3B,KAAOA,EACZ2B,KAAK1B,MAAQA,EACb0B,KAAK/C,IAAMA,EAEX+C,KAAKqH,YACErH,IACT,EAEA7D,GAAQgF,UAAUiD,2BAA6B,SAAU/F,EAAMC,EAAOrB,GAIpE,OAHA+C,KAAK3B,KAAOA,EACZ2B,KAAK1B,MAAQA,EACb0B,KAAK/C,IAAMA,EACJ+C,IACT,EAEA7D,GAAQ+H,eAAiB,SAAU7F,EAAMC,EAAOrB,GAC9C,OAAO,IAAId,IAAU+H,eAAe7F,EAAMC,EAAOrB,EACnD,EAEAd,GAAQiI,2BAA6B,SAAU/F,EAAMC,EAAOrB,GAC1D,OAAO,IAAId,IAAUiI,2BAA2B/F,EAAMC,EAAOrB,EAC/D,EAEAd,GAAQK,IAAM,SAAU8F,EAAOwQ,GAC7B,OAAO/O,GAAEzB,GAAO9F,IAAIsW,EACtB,EAEA3W,GAAQgF,UAAU3E,IAAM,SAAU8F,GAChC,IAYItE,EACAC,EAbAE,EAAU4F,GAAEzB,GAGhB,IAAK7D,OAAOsG,SAAS/E,KAAK1B,OAAU,OAAO0B,KAC3C,IAAKvB,OAAOsG,SAAS5G,EAAQG,OAAU,OAAOH,EAG9C,GAAkB,IAAd6B,KAAK3B,MAA+B,IAAjBF,EAAQE,KAAc,OAAO8F,GAAM,EAAG,EAAG,GAGhE,GAAInE,KAAK1B,QAAUH,EAAQG,OAAS0B,KAAK/C,OAASkB,EAAQlB,IAAO,OAAOkH,GAAMnE,KAAK3B,KAAKF,EAAQE,KAAM,EAAG,GAiBzG,GAXK2B,KAAK1B,MAAQH,EAAQG,OAAW0B,KAAK1B,OAASH,EAAQG,OAASf,KAAKZ,IAAIqD,KAAK/C,KAAOM,KAAKZ,IAAIwB,EAAQlB,MAExGe,EAAIgC,KACJ/B,EAAIE,IAIJH,EAAIG,EACJF,EAAI+B,MAGU,IAAZhC,EAAEM,OAA2B,IAAZL,EAAEK,MAAe,OAAOyF,GAAE/F,EAAEK,KAAKJ,EAAEI,KAAKL,EAAEf,IAAIgB,EAAEhB,KAGrE,GAAIe,EAAEM,OAAS,GAAMN,EAAEM,MAAQL,EAAEK,OAAS,EAAM,OAAO2F,GAAGjG,EAAEK,KAAKJ,EAAEI,KAAML,EAAEM,MAAON,EAAEf,KAEpF,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MAErB,OAAO2F,GAAGjG,EAAEK,KAAKJ,EAAEI,KAAM,EAAGL,EAAEf,IAAIM,KAAKxB,MAAMkC,EAAEhB,MAGjD,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MAErB,OAAO2F,GAAGjG,EAAEK,KAAKJ,EAAEI,KAAM,EAAGL,EAAEf,IAAIgB,EAAEhB,KAGtC,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MACvB,CACE,IAAI8M,EAASnH,GAAG1G,KAAKc,KAAKL,EAAEf,KAAMe,EAAEM,MAAM,EAAGf,KAAKZ,IAAIqB,EAAEf,MAAMX,IAAI2H,GAAG1G,KAAKc,KAAKJ,EAAEhB,KAAMgB,EAAEK,MAAM,EAAGf,KAAKZ,IAAIsB,EAAEhB,OAC7G,OAAOgH,GAAGjG,EAAEK,KAAKJ,EAAEI,KAAM+M,EAAO9M,MAAM,EAAG8M,EAAO/M,KAAK+M,EAAOnO,IAC9D,CAEA,GAAgB,IAAZe,EAAEM,OAA2B,IAAZL,EAAEK,MACvB,CACM8M,EAASnH,GAAG1G,KAAKc,KAAKL,EAAEf,KAAMe,EAAEM,MAAM,EAAGf,KAAKZ,IAAIqB,EAAEf,MAAMX,IAAI2H,GAAG1G,KAAKc,KAAKJ,EAAEhB,KAAMgB,EAAEK,MAAM,EAAGf,KAAKZ,IAAIsB,EAAEhB,OAC7G,OAAOgH,GAAGjG,EAAEK,KAAKJ,EAAEI,KAAM+M,EAAO9M,MAAM,EAAG8M,EAAO/M,KAAK+M,EAAOnO,IAC9D,CAEA,MAAM0F,MAAM,yBAA2B3C,KAAO,KAAOsC,EACvD,EAEFnG,GAAQgF,UAAUkG,UAAY,WAe1B,GAAkB,IAAdrH,KAAK3B,MAA4B,IAAb2B,KAAK/C,KAA4B,IAAf+C,KAAK1B,MAK7C,OAHA0B,KAAK3B,KAAO,EACZ2B,KAAK/C,IAAM,EACX+C,KAAK1B,MAAQ,EACN0B,KAWT,GARmB,IAAfA,KAAK1B,OAAe0B,KAAK/C,IAAM,IAGjC+C,KAAK/C,KAAO+C,KAAK/C,IACjB+C,KAAK3B,MAAQ2B,KAAK3B,MAID,IAAf2B,KAAK1B,OAAe0B,KAAK/C,IAAMgG,GAIjC,OAFAjD,KAAK1B,OAAS,EACd0B,KAAK/C,IAAMM,KAAKxB,MAAMiE,KAAK/C,KACpB+C,KAGT,IAAIkH,EAAS3J,KAAKZ,IAAIqD,KAAK/C,KACvBkK,EAAU5J,KAAKc,KAAK2B,KAAK/C,KAE7B,GAAIiK,GAAUnE,GAIZ,OAFA/C,KAAK1B,OAAS,EACd0B,KAAK/C,IAAMkK,EAAQ5J,KAAKxB,MAAMmL,GACvBlH,KAIP,MAAOkH,EAASlE,IAAchD,KAAK1B,MAAQ,EAEzC0B,KAAK1B,OAAS,EACK,IAAf0B,KAAK1B,MAEP0B,KAAK/C,IAAMM,KAAKnB,IAAI,GAAI4D,KAAK/C,MAI7B+C,KAAK/C,IAAMkK,EAAQ5J,KAAKnB,IAAI,GAAI8K,GAChCA,EAAS3J,KAAKZ,IAAIqD,KAAK/C,KACvBkK,EAAU5J,KAAKc,KAAK2B,KAAK/C,MAmB/B,OAhBqB,IAAf+C,KAAK1B,QAEH0B,KAAK/C,IAAM,GAGb+C,KAAK/C,KAAO+C,KAAK/C,IACjB+C,KAAK3B,MAAQ2B,KAAK3B,MAEE,IAAb2B,KAAK/C,MAGZ+C,KAAK3B,KAAO,IAKX2B,IACX,EAEA,IAAIqf,IAAgB,EACZC,IAA4B,EAEhCnjB,GAAQgF,UAAU0F,WAAa,SAAUvE,GACnC+c,GAAiB/c,EAAQA,EAAMxF,QAAQ,IAAK,IACvCwiB,KAA6Bhd,EAAQA,EAAMxF,QAAQ,IAAK,MAGjE,IAAI6K,EAAiBrF,EAAMjF,MAAM,OACjC,GAA8B,IAA1BsK,EAAenM,OACnB,CACE,IAAIgN,EAAO7D,WAAWgD,EAAe,IACjCc,EAAS9D,WAAWgD,EAAe,IACnCI,EAAU,EACVD,EAAcH,EAAe,GAAGtK,MAAM,KAC1C,GAA2B,IAAvByK,EAAYtM,OAChB,CACMuM,EAAUpD,WAAWmD,EAAY,IAChC/C,SAASgD,KAAYA,EAAU,EACtC,CACA,GAAIhD,SAASyD,IAASzD,SAAS0D,GAC/B,CACE,IAAItJ,EAAShD,GAAQ6L,QAAQQ,EAAMC,EAAQV,GAI3C,OAHA/H,KAAK3B,KAAOc,EAAOd,KACnB2B,KAAK1B,MAAQa,EAAOb,MACpB0B,KAAK/C,IAAMkC,EAAOlC,IACX+C,IACT,CACF,CAGA,IAAIiI,EAAiB3F,EAAMjF,MAAM,MACjC,GAA8B,IAA1B4K,EAAezM,OACnB,CACMgN,EAAO7D,WAAWsD,EAAe,IACjCQ,EAAS9D,WAAWsD,EAAe,IACnCH,EAAcG,EAAe,GAAG5K,MAAM,KAC1C,GAA2B,IAAvByK,EAAYtM,OAChB,CACMuM,EAAUpD,WAAWmD,EAAY,IAChC/C,SAASgD,KAAYA,EAAU,EACtC,CACA,GAAIhD,SAASyD,IAASzD,SAAS0D,GAC/B,CACMtJ,EAAShD,GAAQoM,QAAQC,EAAMC,EAAQV,GAI3C,OAHA/H,KAAK3B,KAAOc,EAAOd,KACnB2B,KAAK1B,MAAQa,EAAOb,MACpB0B,KAAK/C,IAAMkC,EAAOlC,IACX+C,IACT,CACF,CAGA,IAAI0I,EAAWpG,EAAMjF,MAAM,KAC3B,GAAwB,IAApBqL,EAASlN,OACb,CACMgN,EAAO7D,WAAW+D,EAAS,IAA/B,IACIzB,EAAWtC,WAAW+D,EAAS,IACnC,GAAI3D,SAASyD,IAASzD,SAASkC,GAC/B,CACM9H,EAAShD,GAAQC,IAAIoM,EAAMvB,GAI/B,OAHAjH,KAAK3B,KAAOc,EAAOd,KACnB2B,KAAK1B,MAAQa,EAAOb,MACpB0B,KAAK/C,IAAMkC,EAAOlC,IACX+C,IACT,CACF,CAGAsC,EAAQA,EAAMwG,OAAOC,cAGrB,IAAIC,EAAU1G,EAAMjF,MAAM,MAC1B,GAAuB,IAAnB2L,EAAQxN,OACZ,CACEgN,EAAO,GACPC,EAAS9D,WAAWqE,EAAQ,IAC5BA,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrCkM,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACjCiL,EAAUpD,WAAWqE,EAAQ,IAEjC,GADKjE,SAASgD,KAAYA,EAAU,GAChChD,SAASyD,IAASzD,SAAS0D,GAC/B,CACMtJ,EAAShD,GAAQoM,QAAQC,EAAMC,EAAQV,GAI3C,OAHA/H,KAAK3B,KAAOc,EAAOd,KACnB2B,KAAK1B,MAAQa,EAAOb,MACpB0B,KAAK/C,IAAMkC,EAAOlC,IACX+C,IACT,CACF,CAGIgJ,EAAU1G,EAAMjF,MAAM,KAC1B,GAAuB,IAAnB2L,EAAQxN,OACZ,CACEgN,EAAO,GACPC,EAAS9D,WAAWqE,EAAQ,IAC5BA,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACrCkM,EAAQ,GAAKA,EAAQ,GAAGlM,QAAQ,IAAK,IACjCiL,EAAUpD,WAAWqE,EAAQ,IAEjC,GADKjE,SAASgD,KAAYA,EAAU,GAChChD,SAASyD,IAASzD,SAAS0D,GAC/B,CACMtJ,EAAShD,GAAQoM,QAAQC,EAAMC,EAAQV,GAI3C,OAHA/H,KAAK3B,KAAOc,EAAOd,KACnB2B,KAAK1B,MAAQa,EAAOb,MACpB0B,KAAK/C,IAAMkC,EAAOlC,IACX+C,IACT,CACF,CAEA,IAAI0J,EAAQpH,EAAMjF,MAAM,KACpBsM,EAASD,EAAMlO,OAAO,EAG1B,GAAe,IAAXmO,EACJ,CACE,IAAIC,EAAgBjF,WAAWrC,GAC/B,GAAIyC,SAAS6E,GAEX,OAAO5J,KAAKyG,WAAWmD,EAE3B,MACK,GAAe,IAAXD,EACT,CAEMC,EAAgBjF,WAAWrC,GAC/B,GAAIyC,SAAS6E,IAAoC,IAAlBA,EAE7B,OAAO5J,KAAKyG,WAAWmD,EAE3B,CAGA,IAAIE,EAAWxH,EAAMjF,MAAM,MAC3B,GAAwB,IAApByM,EAAStO,OACb,CACEwE,KAAK3B,KAAO,EACiB,KAAzByL,EAAS,GAAGC,OAAO,KAErB/J,KAAK3B,MAAQ,GAGf,IADA,IAAI2L,EAAc,GACTxJ,EAAI,EAAGA,EAAIsJ,EAAS,GAAGtO,SAAUgF,EAC1C,CACE,IAAIyJ,EAAUH,EAAS,GAAGI,WAAW1J,GACrC,KAAKyJ,GAAW,IAAMA,GAAW,IAAmB,MAAZA,GAStC,OAHAjK,KAAK1B,MAAQqG,WAAWqF,GACxBhK,KAAK/C,IAAM0H,WAAWmF,EAAS,GAAGK,OAAO3J,EAAE,IAC3CR,KAAKqH,YACErH,KAPPgK,GAAeF,EAAS,GAAGC,OAAOvJ,EAStC,CACF,CAEA,GAAImJ,EAAS,EAAkD,OAA7C3J,KAAK3B,KAAO,EAAG2B,KAAK1B,MAAQ,EAAG0B,KAAK/C,IAAM,EAAU+C,KACtE,IAAIsH,EAAW3C,WAAW+E,EAAM,IAChC,GAAiB,IAAbpC,EAA+D,OAA7CtH,KAAK3B,KAAO,EAAG2B,KAAK1B,MAAQ,EAAG0B,KAAK/C,IAAM,EAAU+C,KACtEiH,EAAWtC,WAAW+E,EAAMA,EAAMlO,OAAO,IAE7C,GAAImO,GAAU,EACd,CACE,IAAIU,EAAK1F,WAAW+E,EAAMA,EAAMlO,OAAO,IACnCuJ,SAASsF,KAEXpD,GAAY1J,KAAKc,KAAKgM,GACtBpD,GAAYrC,GAAWyF,GAE3B,CAGA,GAAKtF,SAASuC,GAOT,GAAe,IAAXqC,EAEP3J,KAAK3B,KAAOd,KAAKc,KAAKiJ,GACtBtH,KAAK1B,MAAQ,EAEb0B,KAAK/C,IAAMgK,EAAW1J,KAAKxB,MAAMwB,KAAKZ,IAAI2K,QAI5C,CAGE,GAFAtH,KAAK3B,KAAOd,KAAKc,KAAKiJ,GACtBtH,KAAK1B,MAAQqL,EACE,IAAXA,EACJ,CACMxK,EAAShD,GAAQK,IAAIyH,GAAG,EAAG,EAAGgD,GAAWlD,GAAEuD,IAI/C,OAHAtH,KAAK3B,KAAOc,EAAOd,KACnB2B,KAAK1B,MAAQa,EAAOb,MACpB0B,KAAK/C,IAAMkC,EAAOlC,IACX+C,IACT,CAIEA,KAAK/C,IAAMgK,CAEf,MA9BEjH,KAAK3B,KAAqB,MAAbqL,EAAM,IAAe,EAAI,EACtC1J,KAAK1B,MAAQqL,EACb3J,KAAK/C,IAAMgK,EA+Bb,OADAjH,KAAKqH,YACErH,IACT,EAEA7D,GAAQgF,UAAU6R,UAAY,SAAU1Q,GACtC,OAAIA,aAAiBnG,GACZ6D,KAAK4G,YAAYtE,GAGL,kBAAVA,EACFtC,KAAKyG,WAAWnE,GAGJ,kBAAVA,EACFtC,KAAK6G,WAAWvE,IAGzBtC,KAAK3B,KAAO,EACZ2B,KAAK1B,MAAQ,EACb0B,KAAK/C,IAAM,EACJ+C,KACT,EAEA7D,GAAQgF,UAAUwK,SAAW,WAC3B,OAAKlN,OAAOsG,SAAS/E,KAAK1B,OACP,IAAf0B,KAAK1B,MAEA0B,KAAK3B,KAAK2B,KAAK/C,IAEA,IAAf+C,KAAK1B,MAEL0B,KAAK3B,KAAKd,KAAKnB,IAAI,GAAI4D,KAAK/C,KAI5B+C,KAAK/C,IAAM,EAAK+C,KAAK3B,KAAO,EAAII,OAAOC,kBAAoBD,OAAOwG,kBAAqB,EAXrDxG,OAAO2I,GAapD,EAEJjL,GAAQgF,UAAUsF,WAAa,SAAUnE,GAKrC,OAJAtC,KAAK/C,IAAMM,KAAKZ,IAAI2F,GACpBtC,KAAK3B,KAAOd,KAAKc,KAAKiE,GACtBtC,KAAK1B,MAAQ,EACb0B,KAAKqH,YACErH,IACT,EAEF,IAAI4E,GAAa,SAASC,GACtB,OAAOtH,KAAKc,KAAKwG,GAAGtH,KAAKxB,MAAMwB,KAAKZ,IAAIkI,GAC1C,EAEF,SAAS0a,GAASC,GACd,IAAIC,EACAC,EAASF,EAAM,IACfG,EAAOpiB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAM,GAAKniB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,EAAI,IAAM,GAS3F,OARkBD,GAAH,GAAXC,EAAmB,GACP,GAAPF,EACA,WAEAE,EAAS,GACT5B,GAAU4B,GAAU,SAEnB3B,GAAO2B,EAAS,IAAM1B,GAAOzgB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAOC,EAAQ1B,GAAW1gB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,SACrHD,CACX,CAEA,SAASG,GAAOJ,GACZ,IAAIC,EACAC,EAASF,EAAM,IACfG,EAAOpiB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAM,GAAKniB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,EAAI,IAAM,GAM3F,OALgBD,EAAZC,EAAS,EAAQ,GACZA,EAAS,GACT3B,GAAO2B,GAEN3B,GAAO2B,EAAS,IAAM1B,GAAOzgB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAOC,EAAQ1B,GAAW1gB,KAAKvB,MAAM0jB,EAAS,KAAO,KAAOA,EAAS,GAAK,GAAK,KACzID,CACX,CAEA,SAASI,GAASJ,EAAID,EAAKhf,EAAGsf,EAAK,GAC/B,GAAIN,EAAM,EAAG,OAAOD,GAASE,GAC7B,IAAIM,EAMAC,EALAN,EAASF,EAAM,IACfG,EAAOpiB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAM,GAAKniB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,EAAI,IAAM,GACvFO,EAAO1iB,KAAKvB,MAAMyjB,EAAK,KAAQD,GAAO,IACtCA,GAAO,MAAKS,EAAO1iB,KAAKvB,MAAM,KAAOyjB,EAAK,EAAID,IAAQ,KAItDQ,EADAN,EAAS,GACDxB,GAAUwB,GAEbA,EAAS,KAAO,GAAY,QAAWC,EAAQtB,GAAW9gB,KAAKvB,MAAM0jB,EAAS,KAAO,IACrFA,EAAS,KAAO,GAAY,OAAUC,EAAQtB,GAAW9gB,KAAKvB,MAAM0jB,EAAS,KAAO,IAChFvB,GAAOuB,EAAS,IAAMtB,GAAO7gB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAOC,EAAQtB,GAAW9gB,KAAKvB,MAAM0jB,EAAS,KAAO,IAEzH,IAAIQ,EAAM,GACN1f,EAAI,IAC2B0f,EAAML,GAAnCL,EAAM,EAAI,KAAOA,GAAO,IAAoB,IAAMC,EAClCA,EADsCD,EAAM,EAAGhf,EAAI,EAAGsf,IAGjE,YAAPI,GAA4B,UAAPA,IAAiBA,EAAM,IAChDf,IAAQe,EACI,YAARf,IAA8B,UAARA,KAAkBA,GAAO,IAEnD,IAAIgB,EAAQ,iCACRC,EAAQ,UACRC,EAASF,EAAQC,EACjBE,EAAS,iCAAmCF,EAE5CG,EAAe,IAARpB,IAAeA,GAAKtiB,SAASwjB,IAAWlB,GAAK3jB,OAAS6kB,EAAO7kB,QAAU,EAC9EglB,EAAYhB,EAAM,GAAKS,EAAO,EAE9BQ,EAAK,GACT,GAAU,GAANX,IAAYU,EACZ,IAAK,IAAInD,EAAI,EAAGA,EAAI,EAAGA,IACf6B,GAAW,GAAK7B,EAAI,IAChB6B,GAAW,GAAK7B,EAAI,KAAO6B,GAAW,IAAM,IAAKuB,GAAMC,GAAS,IAAMxB,GAAW,GAAK1e,EAAG0e,GAAW,GAAK7B,EAAGA,GAC3GoD,GAAMC,GAASxB,GAAW,GAAK1e,EAAG0e,GAAW,GAAK7B,EAAGA,GAC1D+B,GAAO,IAQnB,OAHAW,EAAKH,GAAOK,GAAQQ,GAAMD,EAAY,GAAKL,EAAQH,IAAUO,GAAQC,EAAY,GAAe,GAAVd,EAAc,KAAO,OAASc,EAAY,GAAKJ,GACrIL,EAAKA,EAAGY,WAAWN,EAAQ,IAC3BN,EAAKA,EAAGY,WAAWL,EAAQ,IACpBP,CACX,CAEA,SAASa,GAAOpB,GACd,IAAIO,EACAL,EAASF,EAAM,IACfG,EAAOpiB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAM,GAAKniB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,EAAI,IAAM,GAQ3F,OAPgBK,EAAZL,EAAS,EAAQ,GACZA,EAAS,GACTxB,GAAUwB,GAAU,IAEpBA,EAAS,KAAO,GAAS,QAAWC,EAAQtB,GAAW9gB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,IACxFA,EAAS,KAAO,GAAS,OAAUC,EAAQtB,GAAW9gB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,IACtFvB,GAAOuB,EAAS,IAAMtB,GAAO7gB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAOC,EAAQtB,GAAW9gB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAM,IACrH,iCAAmCK,EAAK,SACjD,CAEA,SAASW,GAASX,EAAIP,EAAKhf,EAAGsf,EAAK,GACjC,GAAIN,EAAM,EACR,OAAqBK,GAAjBE,EAAK,IAAqB,KAAQA,EACtB,EAAIA,EADsBA,EAAIvf,EAAG,GAGnD,IAAIigB,EACAf,EAASF,EAAM,IACfS,EAAO1iB,KAAKvB,MAAM+jB,EAAK,KAAQP,GAAO,IACtCA,GAAO,MAAKS,EAAO1iB,KAAKvB,MAAM,KAAO+jB,EAAK,EAAIP,IAAQ,KAE1D,IACIqB,EADAC,EAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KAEzBC,EAAOrC,GAAOnhB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAMnB,GAAOmB,EAAS,IAC9DA,EAAS,KAAO,GAAIqB,EAAOrC,GAAOnhB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAMjB,GAAKiB,EAAS,IAAMnB,GAAOmB,EAAS,IACjGA,EAAS,KAAO,KACkBqB,EAArCrB,EAAS,KAAO,IAAMA,GAAU,IAAY,OACpCpB,GAAUoB,EAAS,MAEjC,IAAIC,GAAQmB,EAAEjkB,SAASkkB,EAAK,KAAOrB,EAAS,KAAO,IAAMA,GAAU,IAAM,IAAM,GAE3EmB,EADAnB,EAAS,GACDF,EAAM,IAAOlB,GAAUoB,GAAoB,IAAVA,EAAe,OAASqB,EAExDpC,GAAWphB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAMC,EAAOoB,EAEhE,IAAIZ,EAAQ,iCACRC,EAAQ,UACRC,EAAS,iCAAmCD,EAC5CE,EAASH,EAAQC,EAEjBY,EAAM,GACNxgB,EAAI,IAC2BwgB,EAAMN,GAAnClB,EAAM,EAAI,KAAOA,GAAO,IAAoB,IAAMO,EAClCA,EADsCP,EAAM,EAAGhf,EAAI,IAGrEwgB,GAAO,mCAAqCZ,IAAOY,EAAM,IAC7D5B,IAAQ4B,EAER,IAAIC,EAAe,IAAR7B,IAAeA,GAAKviB,SAASyjB,IAAWlB,GAAK5jB,OAAS8kB,EAAO9kB,QAAU,EAC9EglB,EAAYhB,EAAM,GAAKS,EAAO,EAE9BiB,EAAK,GACT,GAAU,GAANpB,IAAYU,EACZ,IAAK,IAAInD,EAAI,EAAGA,EAAI,EAAGA,IACf6B,GAAW,GAAK7B,EAAI,IAChB6B,GAAW,GAAK7B,EAAI,KAAO6B,GAAW,IAAM,IAAKgC,GAAMC,GAAS,IAAMjC,GAAW,GAAK1e,EAAG0e,GAAW,GAAK7B,EAAGA,GAC3G6D,GAAMC,GAASjC,GAAW,GAAK1e,EAAG0e,GAAW,GAAK7B,EAAGA,GACnD,IAOnB,OAFAoD,EAAKG,GAAOX,GAAQiB,EAAKf,GAASF,GAAQ,EAAIY,EAAQ,KAAOI,GAAQT,EAAY,GAAK,KAAOJ,EAC7FK,EAAKA,EAAGE,WAAWN,EAAQ,IACpBI,CACT,CAEA,SAASW,GAAO5B,GACd,IAAIiB,EACAf,EAASF,EAAM,IAEfsB,EAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KACzBC,EAAOrC,GAAOnhB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAMnB,GAAOmB,EAAS,IAC9DA,EAAS,KAAO,GAAIqB,EAAOrC,GAAOnhB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAMjB,GAAKiB,EAAS,IAAMnB,GAAOmB,EAAS,IACjGA,EAAS,KAAO,KACkBqB,EAArCrB,EAAS,KAAO,IAAMA,GAAU,IAAY,OACpCpB,GAAUoB,EAAS,MAEjC,IAAIC,GAAQmB,EAAEjkB,SAASkkB,EAAK,KAAOrB,EAAS,KAAO,IAAMA,GAAU,IAAM,IAAM,GAS/E,OARgBe,EAAZf,EAAS,EAAQ,GACZA,EAAS,GACXlB,GAAQkB,GAENA,EAAS,GACXpB,GAAUoB,GAEPf,GAAWphB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAMC,EAAOoB,EACtD,iCAAmCN,EAAK,SACjD,CAEA,SAASU,GAASV,EAAIjB,EAAKhf,GACzB,GAAIgf,EAAM,EACR,OAAqBkB,GAAjBD,EAAK,IAAqB,KAAQA,EACtB,EAAIA,EADsBA,EAAIjgB,EAAG,GAGnD,IAAI0gB,EACAxB,EAASF,EAAM,IACfS,EAAO1iB,KAAKvB,MAAMykB,EAAK,KAAQjB,GAAO,IACtCA,GAAO,MAAKS,EAAO1iB,KAAKvB,MAAM,KAAOykB,EAAK,EAAIjB,IAAQ,KAE1D,IACI6B,EADAP,EAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KAEzBQ,EAAOvC,GAAOxhB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAMZ,GAAOY,EAAS,IAC9DA,EAAS,KAAO,GAAI4B,EAAOvC,GAAOxhB,KAAKvB,MAAM0jB,EAAS,IAAM,IAAMV,GAAKU,EAAS,IAAMZ,GAAOY,EAAS,IACjGA,EAAS,KAAO,KACkB4B,EAArC5B,EAAS,KAAO,IAAMA,GAAU,IAAY,OACpCd,GAAUc,EAAS,MAEjC,IAAIC,GAAQmB,EAAEjkB,SAASykB,EAAK,KAAO5B,EAAS,KAAO,IAAMA,GAAU,IAAM,IAAM,GAE3E2B,EADA3B,EAAS,GACDd,GAAUc,GAETT,GAAW1hB,KAAKvB,MAAM0jB,EAAS,KAAO,IAAMC,EAAO2B,EAC5DrB,EAAO,IAAGoB,EAAQxC,GAAMa,GAAU2B,GAEtC,IAAIlB,EAAQ,iCACRC,EAAQ,UACRC,EAAS,iCAAmCD,EAC5CE,EAAS,iCAAmCF,EAG5CmB,EAAM,GAaV,OAZI/gB,EAAI,IAC2B+gB,EAAMJ,GAAnC3B,EAAM,EAAI,KAAOA,GAAO,IAAoB,IAAMiB,EAClCA,EADsCjB,EAAM,EAAGhf,EAAI,IAGrE+gB,GAAO,kCAAoCnB,IAAOmB,EAAM,IAI5DL,EAAKE,GAAOnB,GAAQE,GAASF,GAAQ,EAAIoB,EAAQ,IAAMjB,EACvDc,EAAKA,EAAGP,WAAWN,EAAQ,IAC3Ba,EAAKA,EAAGP,WAAWL,EAAQ,IAC3BY,EAAKA,EAAGP,WAAWR,EAAQ,KAAMA,GAAmB,GAAVT,EAAc,MAAgB,GAARO,EAAY,OAAS,QAC9EiB,CACT,CAEA,IAAInF,GAASA,KACT4B,GAASrB,SAASC,eAAe,OAAOja,MACxC,IAAI1G,EAAM,IAAIO,GAAQwhB,IAClB6D,GAAY,EACZC,EAAW,EACXC,EAAW,EACXC,EAAW,EACX1kB,EAAM,EACO,GAAbrB,EAAI0C,QACF1C,EAAIqB,KAAO,IAAMM,KAAKxB,MAAM,IAC9B0lB,EAAW7lB,EAAIqB,IAAMM,KAAKxB,MAAM,GAChC2lB,EAAWnkB,KAAKC,IAAID,KAAKvB,MAAMylB,EAAW,GAAI,GAC9CE,EAAWpkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAM2lB,GAAY,GAAI,KAG1DA,EAAWnkB,KAAKC,IAAI,KAAO5B,EAAIqB,IAAMM,KAAKxB,MAAM,IAAK,GACrD4lB,EAAWpkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAM2lB,GAAY,GAAI,KAG7C,GAAb9lB,EAAI0C,QACA1C,EAAIqB,KAAO,IAAMM,KAAKxB,MAAM,IAC9B0lB,EAAW7lB,EAAIqB,IAAMM,KAAKxB,MAAM,GAChC2lB,EAAWnkB,KAAKC,IAAID,KAAKvB,MAAMylB,EAAW,GAAI,GAC9CE,EAAWpkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAM2lB,GAAY,GAAI,KAG1DD,EAAWlkB,KAAKC,IAAI,KAAO5B,EAAIqB,IAAMM,KAAKxB,MAAM,IAAK,GACrD2lB,EAAWnkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAM0lB,GAAY,GAAI,KAG/C,GAAb7lB,EAAI0C,MACA1C,EAAIqB,KAAO,IAAMM,KAAKxB,MAAM,IAC9BylB,EAAW5lB,EAAIqB,IAAMM,KAAKxB,MAAM,GAChC0lB,EAAWlkB,KAAKC,IAAID,KAAKvB,MAAMwlB,EAAW,GAAI,GAC9CE,EAAWnkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAM0lB,GAAY,GAAI,KAG1DD,EAAWjkB,KAAKC,IAAI,KAAO5B,EAAIqB,IAAMM,KAAKxB,MAAM,IAAK,GAAK,EAC1D0lB,EAAWlkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAMylB,GAAY,GAAI,IAG1C,GAAb5lB,EAAI0C,OACTkjB,EAAWjkB,KAAKC,IAAID,KAAKvB,MAAMJ,EAAIqB,IAAM,GAAI,GAAK,EAClDwkB,EAAWlkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAMylB,GAAY,GAAI,GAC1DvkB,EAAM,KAAOrB,EAAIqB,IAAM,IAEL,GAAbrB,EAAI0C,QACTkjB,EAAWjkB,KAAKC,IAAID,KAAKvB,MAAMuB,KAAKxB,MAAMH,EAAIqB,KAAO,GAAI,GAAK,EAC9DA,EAAM,KAAOM,KAAKxB,MAAMH,EAAIqB,KAAO,IAEvCiiB,GAAa,CAACsC,EAAUC,EAAUC,EAAUC,GAK5C,IAAIC,EAAU,EACIA,EAAdhmB,EAAIqB,IAAM,GAAcM,KAAKxB,MAAMH,EAAIqB,KAClCrB,EAAIqB,IAAM,KAAgB,EAAIM,KAAKxB,MAAMwB,KAAKxB,MAAMH,EAAIqB,MAClD,EAAIM,KAAKxB,MAAMwB,KAAKxB,MAAMwB,KAAKxB,MAAMH,EAAIqB,OACxD,IAAI4kB,EAAUjmB,EAAI0C,MAAQsjB,EAEtBnC,EAAKP,GAAW,GAAK,EAAIK,GAASL,GAAW,IAAM,GACnDa,EAAK,GACLU,EAAK,GACLS,EAAK,GACT,GAAIhC,GAAW,GAAK,EAChB,IAAK,IAAI1e,EAAI,EAAGA,EAAI,EAAGA,IACf0e,GAAW,GAAK1e,EAAI,IAChB0e,GAAW,GAAK1e,EAAI,KAAO0e,GAAW,IAAM,IAAKa,GAAMF,GAAS,IAAMX,GAAW,GAAIA,GAAW,GAAK1e,EAAGA,GACvGuf,GAAMF,GAASX,GAAW,GAAIA,GAAW,GAAK1e,EAAGA,GACtD2e,GAAO,GACE,GAAL3e,IAAQuf,GAAM,gBAIzB,GAAIb,GAAW,GAAK,EACvB,IAAK,IAAI1e,EAAI,EAAGA,EAAI,EAAGA,IACf0e,GAAW,GAAK1e,EAAI,IAChB0e,GAAW,GAAK1e,EAAI,KAAO0e,GAAW,IAAM,IAAKuB,GAAMC,GAAS,IAAMxB,GAAW,GAAIA,GAAW,GAAK1e,EAAGA,GACvGigB,GAAMC,GAASxB,GAAW,GAAIA,GAAW,GAAK1e,EAAGA,GACtD4e,GAAO,GACE,GAAL5e,IAAQigB,GAAM,gBAK1B,IAAK,IAAIjgB,EAAI,EAAGA,EAAI,EAAGA,IACf0e,GAAW,GAAK1e,EAAI,IAChB0e,GAAW,GAAK1e,EAAI,KAAO0e,GAAW,IAAM,IAAKgC,GAAMC,GAAS,IAAMjC,GAAW,GAAIA,GAAW,GAAK1e,EAAGA,GACvG0gB,GAAMC,GAASjC,GAAW,GAAIA,GAAW,GAAK1e,EAAGA,GAE7C,GAALA,IAAQ0gB,GAAM,WAI5BrD,GAAUqD,EAAKT,EAAKV,EAAKN,EAEzB7B,GAAa3gB,EAAIC,QAAQ,GAAK,IAAM2gB,GACpCD,IAAc,oBAAsBiE,EAAQ3kB,QAAQ,GACpDof,SAASC,eAAe,WAAWO,UAAY,aAAec,EAAU,EAG5E,IAAI7d,GAAU,CACVgc,OAAMA,IAGV,MDzzBA,IACEgB,QAAQ,CACJhB,MAAAA,GACE+F,GAAQ/F,QACV,IEZN,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCNOX,MAAM,Q,IASJA,MAAQ,Q,IACRO,GAAK,SAASoG,IAAM,SAASpF,MAAA,sB,IAC3BvB,MAAM,U,IACFuB,MAAA,+BAAuCa,KAAO,OAAO7B,GAAK,OAAOoG,IAAM,OAAOtE,KAAO,OAAOC,YAAc,iD,2CAZvHrD,EAAAA,EAAAA,IAiBM,MAjBNgB,GAiBM,cAhBJd,EAAAA,EAAAA,IAAqB,UAAjB,gBAAY,iBAChBA,EAAAA,EAAAA,IACiG,SAD9F,uTAC0F,iBAC7FA,EAAAA,EAAAA,IAA2D,SAAxD,wDAAoD,iBACvDA,EAAAA,EAAAA,IAGI,WATRO,EAAAA,EAAAA,IAMO,4BAECP,EAAAA,EAAAA,IAA6E,KAA1EyH,KAAO,gCAAgC1hB,OAAO,UAAS,qBAAe,KAE7Eia,EAAAA,EAAAA,IAOM,MAPNkB,GAOM,EANJlB,EAAAA,EAAAA,IAA0F,IAA1FyC,GAA0FnC,EAAA,KAAAA,EAAA,KAXhGC,EAAAA,EAAAA,IAWiE,4BAAuBP,EAAAA,EAAAA,IAAI,2BACtFA,EAAAA,EAAAA,IAGM,MAHN0H,GAGM,EAFJ1H,EAAAA,EAAAA,IAAiK,QAAjK2H,GAAiK,uBAAA3H,EAAAA,EAAAA,IAAI,qBACrKA,EAAAA,EAAAA,IAA6F,UAArFoC,MAAA,iBAAyBhB,GAAK,SAASoG,IAAM,SAAUnG,QAAKf,EAAA,KAAAA,EAAA,OAAAgB,IAAEC,EAAAC,QAAAD,EAAAC,UAAAF,KAAQ,SAAM,QAEtFtB,EAAAA,EAAAA,IAA0G,UAAlGoC,MAAA,kDAAwDhB,GAAK,QAASC,QAAKf,EAAA,KAAAA,EAAA,OAAAgB,IAAEC,EAAApf,OAAAof,EAAApf,SAAAmf,KAAO,Y,CChBlG,IAAIsG,GACAvmB,GAKAqS,GACAmU,GAEAC,GAEAC,GAEAC,GACAC,GASAC,GArBAzG,GAAQ,EACR0G,GAAU,GACVC,GAAQ,GACRtG,GAAS,eAKTuG,GAAc,UAMdC,GAAY,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzDC,GAAa,CAAC,GAAI,IAAK,IAAK,KAC5BC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAE/BC,GAAc,CAAC,GAAI,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAChEC,GAAc,CAAC,GAAI,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,MAIrE,IAAIvmB,GAAQA,CAACwmB,EAAQ7hB,EAAO8hB,KACpB9hB,GACAA,EAAM+hB,iBAAiB,YAAY,SAASC,GACtB,UAAdA,EAAMtiB,MACVsiB,EAAMC,iBACNJ,EAAOK,QAEX,IAEJL,EAAOvG,MAAMC,QAAU,GACvBvb,EAAMsb,MAAMC,QAAU,GACtBN,SAASC,eAAe,SAASI,MAAMC,QAAU,OACjD4F,IAAa,IAAIgB,MAAOC,UACxBlB,GAAO,IACPtU,GAAO,GACP8N,GAAO1a,GACPohB,GAAQiB,aAAY,IAAMC,GAAUT,EAAQ7hB,EAAO8hB,IAAM,EAAE,EAG/D,SAASQ,GAAUT,EAAQ7hB,EAAO8hB,GAG9B,GAFAZ,GAAOhlB,KAAKC,IAAI,MAAO,IAAIgmB,MAAOC,UAAYjB,IAAc,IAAM,GAClEW,EAAIrG,UAAY,SAAW9d,WAAWujB,IAAQ,OAASlG,GAAS+F,GAAaM,GAAUC,GAAQ,OAC3FJ,IAAQ,EAAG,CACXqB,cAAcnB,IACd,IAAIjG,EAAU,SAAWhd,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,MAAQA,UAAU,KAAM,UAAW,OACtHid,EAAST,GAAQ,GAAK,oCAAsCA,GAAQ,GAAK,sCAAwCQ,EACrH2G,EAAIrG,UAAY,iBAAmBT,GAAS,OAASI,EAAS,kBAC9Dpb,EAAMsb,MAAMC,QAAU,OACtBsG,EAAOvG,MAAMC,QAAU,MAC3B,CACJ,CAEA,IAAIb,GAAU1a,IACV,IAAa,IAAR4M,KAAeoO,GAAOxf,SAAS,OAAS0lB,GAAO,EAAG,CACnD,IAAIsB,EAAa,EAEjB,GADAxB,GAAMhhB,EAAMiB,MACR+f,IAAOO,IAAgBP,IAAOzmB,IAAmB,WAAZ0mB,GAAwB,CAC7D,IAAIpmB,EAAkB,WAAZomB,GAAwB,EAAI,IAClChmB,EAAMiB,KAAKvB,OAAOJ,GAAIuK,WAAW3K,OAAS,GAAKU,GAAO,EAC1D+R,GAAO,MAAQ3R,EAAM,oDACrB0f,IAAS1f,CACb,MACK2R,GAAO,8DAAgE2U,GAAc,UAC1FvG,GAAS,UAAYL,GAAQ/N,GAAO,OACjB,WAAf2U,IACAiB,GAAa,IAAIL,MAAOC,UACxBK,YAAW,WACPzH,GAAS,UAAYL,GAAQ,OAC7B+H,IACJ,GAAG,OAGH1H,GAAS,UAAYL,GAAQ,OAC7B+H,KAER,GAGJ,SAASA,KAIL,GAFA3B,GAAa7kB,KAAKsY,SAAW,GAAM,cAAgB,gBACnDyM,GAAW/kB,KAAKsY,SAAW,GAAM,UAAY,SAC3B,eAAduM,GAA6B,CAC7BD,GAAQ5kB,KAAKvB,MAAM,KAAuB,GAAhBuB,KAAKsY,WAAkB,EACjD,IAAIhR,EAAIsd,GAAKhc,WAEb,GADAwc,GAAQ,GACI,GAARR,GAAWQ,GAAQ,SAEnB,IAAK,IAAIniB,EAAIqE,EAAErJ,OAAQgF,EAAI,EAAGA,IAAK,CAE/B,IAAIwjB,EAAOnB,GAAUhe,EAAErE,EAAI,GAAK,IAC5BmM,GAAS9H,EAAErJ,OAASgF,GAAK,EACzByjB,EAAW1mB,KAAKvB,OAAO6I,EAAErJ,OAASgF,GAAK,GAE3C,GADgB,KAAZqE,EAAErE,EAAI,IAAaA,EAAIqE,EAAErJ,SAAoB,GAATmR,GAAe9H,EAAErJ,OAAS,GAAK,GAAU,GAALgF,KAAUwjB,EAAO,IAC7E,KAAZnf,EAAErE,EAAI,IAA0B,GAAZqE,EAAErE,EAAI,IAAoB,GAATmM,EAAa,CAClD,IAAIvQ,EAAe,GAATuQ,EAAaoW,GAAckB,GAAY,IAAM,GACvDtB,GAAQqB,EAAOlB,GAAWnW,GAASvQ,EAAMumB,EAC7C,CACAA,GAAQA,GAAM7lB,QAAQ,MAAO,MAC7B6lB,GAAQA,GAAM7lB,QAAQ,MAAO,MAC7B6lB,GAAQA,GAAM7lB,QAAQ,MAAO,KACjC,CAER,MAEIqlB,GAAO5kB,KAAKvB,MAAsB,IAAhBuB,KAAKsY,UACR8M,GAAH,GAARR,GAAmB,IACVc,GAAY1lB,KAAKvB,MAAMmmB,GAAO,KAAOa,GAAYb,GAAO,IAEzEvmB,GAAMumB,GACNQ,GAAQA,GAAM7Z,OACd,IAAIob,EAAOvB,GAEXA,GAAQ,OAASA,GACjBD,GAAU,OAAS9mB,GAAIuoB,iBAEP,WAAZ7B,IACAM,GAAchnB,GAAIuoB,iBAClBzB,GAAU,KAGVE,GAAcsB,EACdvB,GAAQ,IAEZrG,SAASC,eAAe,QAAQja,MAAQ,EAC5C,CAEA,IAAIvC,GAAU,CACVrD,MAAK,GACLqf,OAAMA,IAGV,MDhHA,IACEgB,QAAQ,CACJrgB,KAAAA,GACE0nB,GAAQ1nB,MAAMsD,KAAKqkB,MAAMtI,OAAQ/b,KAAKqkB,MAAMH,KAAMlkB,KAAKqkB,MAAMC,OAC/D,EACAvI,MAAAA,GACEqI,GAAQrI,OAAO/b,KAAKqkB,MAAMH,KAC5B,IE3BN,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCNO9I,MAAM,Q,8FAAXf,EAAAA,EAAAA,IAGM,MAHNgB,GAGM,EAFJb,EAAAA,EAAAA,IAAa+J,IACb/J,EAAAA,EAAAA,IAA2BgK,I,uECF7BC,EAAAA,EAAAA,IAAuDC,EAAA,CAA/CC,IAAM,mBAAmB5C,IAAI,U,mCCAhC3G,MAAM,U,IAENA,MAAM,U,GAHb,c,GAAA,c,2CACEf,EAAAA,EAAAA,IAMM,MANNgB,GAMM,EALJd,EAAAA,EAAAA,IAAkB,WAAAqK,EAAAA,GAAAA,IAAXC,EAAAF,KAAG,IACVpK,EAAAA,EAAAA,IAGI,IAHJkB,GAGI,cANRX,EAAAA,EAAAA,IAGsB,eAASP,EAAAA,EAAAA,IAAiC,QAA3BuC,UAAQhB,EAAAgJ,YAAU,OAHvD9H,IAAA,aAAAlC,EAAAA,EAAAA,IAGgE,iBAAY,aAAAP,EAAAA,EAAAA,IAAI,qBAHhFO,EAAAA,EAAAA,IAGgF,MAC3E8J,EAAAA,GAAAA,IAAG9I,EAAAiJ,SAAU,MAAG,gBAAAxK,EAAAA,EAAAA,IAAI,iCAJzBO,EAAAA,EAAAA,IAIyB,wBACJP,EAAAA,EAAAA,IAAkC,QAA5BuC,UAAQhB,EAAAkJ,aAAW,OAL9C/C,IAAA,aAAAnH,EAAAA,EAAAA,IAKuD,oB,2BCIhD,SAASmK,KACZ,MAAO,CACH1C,KAAMiB,KAAK0B,MACXC,WAAY,IAAIhpB,KAAJ,CAAY,GACxBipB,WAAY,IAAIjpB,KAAJ,CAAY,GAEhC,CAEO,SAASO,KAGJgnB,YAAY2B,GAAU,GAClC,CAEO,SAASC,KACZ,IAAIC,EAAO,IAAIppB,KAAJ,CAAY,KAAKK,IAAIgpB,OAAOL,WAAW7oB,IAAI,GAAGF,IAAI,OAAQI,IAAIgpB,OAAOL,WAAW7oB,IAAI,GAAGP,QAAQK,IAAI,KAAMuQ,SACpH,OAAO4Y,CACX,CAQO,SAASF,KACZ,IAAIH,EAAM1B,KAAK0B,MACdjW,GAAQiW,EAAMM,OAAOjD,MAAQ,IAC1BgD,EAAOD,KACXE,OAAOL,WAAaK,OAAOL,WAAW7oB,IAAIipB,EAAK/oB,IAAIyS,IACnDuW,OAAOjD,KAAO2C,CAElB,CAnCA7pB,OAAOmqB,OAASP,KAChBQ,QAAQrgB,IAAI/J,OAAOmqB,QAoCnB,ID9BA,IACE/H,KAAM,SACNR,OAAAA,GACEyG,aAAY,IAAM1jB,KAAK0lB,UAAU,GACnC,EACAC,IAAAA,GACE,MAAO,CACLC,OAAQ,IAAIzpB,QAAQ,GACpB0pB,gBAAiB,IAAI1pB,QAAQ,GAEjC,EACA2pB,SAAU,CACRhB,UAAAA,GACE,OAAOtlB,UAAU,KAAM,UAAWtB,OAAO8B,KAAK4lB,QAChD,EACAb,OAAAA,GACE,OAAO7mB,OAAO8B,KAAK6lB,gBACrB,EACAb,WAAAA,GACE,OAAOxlB,UAAU,KAAM,UAAWtB,OAAO,aAC3C,GAEF6e,QAAS,CACP2I,MAAAA,GACE1lB,KAAK4lB,OAASJ,OAAOL,WACrBnlB,KAAK6lB,gBAAkBP,IACzB,GAEF/kB,MAAO,CACLokB,IAAK/iB,SEnCT,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UHAA,IACE6b,KAAM,OACNR,OAAAA,GACEvgB,IACF,EACAqpB,WAAY,CACVC,OAAMA,IAERjJ,QAAS,CACT,GIbF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCNO3B,MAAM,Y,IACJO,GAAG,aAAaP,MAAM,W,IACnB,YAAY,wBAAwBO,GAAG,UAAUP,MAAM,W,2CAFjEf,EAAAA,EAAAA,IAIM,MAJNgB,GAIM,EAHJd,EAAAA,EAAAA,IAEM,MAFNkB,GAEM,EADJlB,EAAAA,EAAAA,IAA2F,OAA3FyC,IAA2F4H,EAAAA,GAAAA,IAAjB9I,EAAAmK,SAAO,M,CAOvF,QACExI,KAAM,cACNR,OAAAA,GACEyG,aAAY,IAAM1jB,KAAK0lB,UAAU,GACnC,EACAC,IAAAA,GACE,MAAO,CACLO,SAAU,IAAI/pB,QAAQ,GAE1B,EACA2pB,SAAU,CACRG,OAAAA,GACE,OAAO/nB,OAAO8B,KAAKkmB,SAAS1pB,IAAI,MAAQ,GAC1C,GAEFugB,QAAS,CACP2I,MAAAA,GACE1lB,KAAKkmB,SAAWV,OAAOL,WAAW3nB,IAAI,IAAIzB,QAAQG,IAAI,QAAQgQ,IAAI,GAClEoQ,SAASC,eAAe,cAAcI,MAAMnB,MAAmC,IAA3Bxb,KAAKkmB,SAASva,WAAmB,GACvF,GAEFpL,MAAO,CACLokB,IAAK/iB,SCzBT,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UPEA,IACEmkB,WAAY,CACVI,KAAI,GACJC,YAAWA,IAEbrJ,QAAQ,CACR,GQVF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCAA,MAAMsJ,GAAS,CACb,CACEC,KAAM,IACN7I,KAAM,OACN8I,UAAWC,GAEb,CACEF,KAAM,QACN7I,KAAM,OAIN8I,UAAWhpB,GAEb,CACE+oB,KAAM,gBACN7I,KAAM,eACN8I,UAAWrJ,GAEb,CACEoJ,KAAM,cACN7I,KAAM,aACN8I,UAAWhJ,IAEb,CACE+I,KAAM,WACN7I,KAAM,UACN8I,UAAWzE,IAEb,CACEwE,KAAM,WACN7I,KAAM,UACN8I,UAAWnC,IAEb,CACEkC,KAAM,eACN7I,KAAM,cACN8I,UAAWE,KAITC,IAASC,EAAAA,EAAAA,IAAa,CAC1BC,SAASC,EAAAA,EAAAA,IAAiBC,cAC1BT,YAGF,U,WCpDAhrB,OAAOc,QAAUA,KACjBd,OAAO0rB,IAAMA,GAAAA,W,eCQb,MAAMC,IAAMC,EAAAA,EAAAA,IAAUC,GACtBF,GAAIG,IAAIT,IAAQU,MAAM,O,GCZlBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBvqB,IAAjBwqB,EACH,OAAOA,EAAaznB,QAGrB,IAAID,EAASunB,EAAyBE,GAAY,CAGjDxnB,QAAS,CAAC,GAOX,OAHA0nB,EAAoBF,GAAU5lB,KAAK7B,EAAOC,QAASD,EAAQA,EAAOC,QAASunB,GAGpExnB,EAAOC,OACf,CAGAunB,EAAoBrrB,EAAIwrB,E,WCzBxB,IAAIC,EAAW,GACfJ,EAAoBK,EAAI,SAASxoB,EAAQyoB,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAe9hB,IACnB,IAASzF,EAAI,EAAGA,EAAIknB,EAASlsB,OAAQgF,IAAK,CACrConB,EAAWF,EAASlnB,GAAG,GACvBqnB,EAAKH,EAASlnB,GAAG,GACjBsnB,EAAWJ,EAASlnB,GAAG,GAE3B,IAJA,IAGIwnB,GAAY,EACP3K,EAAI,EAAGA,EAAIuK,EAASpsB,OAAQ6hB,MACpB,EAAXyK,GAAsBC,GAAgBD,IAAajqB,OAAOoqB,KAAKX,EAAoBK,GAAGO,OAAM,SAASnnB,GAAO,OAAOumB,EAAoBK,EAAE5mB,GAAK6mB,EAASvK,GAAK,IAChKuK,EAASO,OAAO9K,IAAK,IAErB2K,GAAY,EACTF,EAAWC,IAAcA,EAAeD,IAG7C,GAAGE,EAAW,CACbN,EAASS,OAAO3nB,IAAK,GACrB,IAAI4nB,EAAIP,SACE7qB,IAANorB,IAAiBjpB,EAASipB,EAC/B,CACD,CACA,OAAOjpB,CArBP,CAJC2oB,EAAWA,GAAY,EACvB,IAAI,IAAItnB,EAAIknB,EAASlsB,OAAQgF,EAAI,GAAKknB,EAASlnB,EAAI,GAAG,GAAKsnB,EAAUtnB,IAAKknB,EAASlnB,GAAKknB,EAASlnB,EAAI,GACrGknB,EAASlnB,GAAK,CAAConB,EAAUC,EAAIC,EAwB/B,C,eC5BAR,EAAoBziB,EAAI,SAAS/E,GAChC,IAAIuoB,EAASvoB,GAAUA,EAAOwoB,WAC7B,WAAa,OAAOxoB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAwnB,EAAoBiB,EAAEF,EAAQ,CAAErqB,EAAGqqB,IAC5BA,CACR,C,eCNAf,EAAoBiB,EAAI,SAASxoB,EAASyoB,GACzC,IAAI,IAAIznB,KAAOynB,EACXlB,EAAoBmB,EAAED,EAAYznB,KAASumB,EAAoBmB,EAAE1oB,EAASgB,IAC5ElD,OAAOgD,eAAed,EAASgB,EAAK,CAAEL,YAAY,EAAM0B,IAAKomB,EAAWznB,IAG3E,C,eCPAumB,EAAoBoB,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO3oB,MAAQ,IAAI4oB,SAAS,cAAb,EAChB,CAAE,MAAO9sB,GACR,GAAsB,kBAAXT,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBisB,EAAoBmB,EAAI,SAASI,EAAKC,GAAQ,OAAOjrB,OAAOsD,UAAU4nB,eAAepnB,KAAKknB,EAAKC,EAAO,C,eCAtGxB,EAAoB0B,EAAI,Y,eCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaN3B,EAAoBK,EAAEtK,EAAI,SAAS6L,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BzD,GAC/D,IAKI4B,EAAU2B,EALVtB,EAAWjC,EAAK,GAChB0D,EAAc1D,EAAK,GACnB2D,EAAU3D,EAAK,GAGInlB,EAAI,EAC3B,GAAGonB,EAAS2B,MAAK,SAAS5N,GAAM,OAA+B,IAAxBsN,EAAgBtN,EAAW,IAAI,CACrE,IAAI4L,KAAY8B,EACZ/B,EAAoBmB,EAAEY,EAAa9B,KACrCD,EAAoBrrB,EAAEsrB,GAAY8B,EAAY9B,IAGhD,GAAG+B,EAAS,IAAInqB,EAASmqB,EAAQhC,EAClC,CAEA,IADG8B,GAA4BA,EAA2BzD,GACrDnlB,EAAIonB,EAASpsB,OAAQgF,IACzB0oB,EAAUtB,EAASpnB,GAChB8mB,EAAoBmB,EAAEQ,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO5B,EAAoBK,EAAExoB,EAC9B,EAEIqqB,EAAqBC,KAAK,wBAA0BA,KAAK,yBAA2B,GACxFD,EAAmBE,QAAQP,EAAqBQ,KAAK,KAAM,IAC3DH,EAAmBhmB,KAAO2lB,EAAqBQ,KAAK,KAAMH,EAAmBhmB,KAAKmmB,KAAKH,G,IC/CvF,IAAII,EAAsBtC,EAAoBK,OAAE3qB,EAAW,CAAC,MAAM,WAAa,OAAOsqB,EAAoB,KAAO,IACjHsC,EAAsBtC,EAAoBK,EAAEiC,E","sources":["webpack://yooa-com/./src/format.js","webpack://yooa-com/./src/incremental/break_eternity.js","webpack://yooa-com/./src/App.vue","webpack://yooa-com/./src/App.vue?7ccd","webpack://yooa-com/./src/views/Home.vue","webpack://yooa-com/./src/views/Home.vue?9051","webpack://yooa-com/./src/views/Math.vue","webpack://yooa-com/./src/math.js","webpack://yooa-com/./src/views/Math.vue?9a11","webpack://yooa-com/./src/views/Cryptography.vue","webpack://yooa-com/./src/cryptography.js","webpack://yooa-com/./src/views/Cryptography.vue?f0bd","webpack://yooa-com/./src/views/Statistics.vue","webpack://yooa-com/./src/statistics.js","webpack://yooa-com/./src/views/Statistics.vue?7413","webpack://yooa-com/./src/views/Illions.vue","webpack://yooa-com/./src/illions.js","webpack://yooa-com/./src/views/Illions.vue?d42a","webpack://yooa-com/./src/views/Numbers.vue","webpack://yooa-com/./src/numbers.js","webpack://yooa-com/./src/views/Numbers.vue?b276","webpack://yooa-com/./src/views/Incremental.vue","webpack://yooa-com/./src/components/Main.vue","webpack://yooa-com/./src/components/Header.vue","webpack://yooa-com/./src/incremental/incremental.js","webpack://yooa-com/./src/components/Header.vue?801b","webpack://yooa-com/./src/components/Main.vue?4fee","webpack://yooa-com/./src/components/ProgressBar.vue","webpack://yooa-com/./src/components/ProgressBar.vue?6a3a","webpack://yooa-com/./src/views/Incremental.vue?0dea","webpack://yooa-com/./src/router/index.js","webpack://yooa-com/./src/shims.js","webpack://yooa-com/./src/main.js","webpack://yooa-com/webpack/bootstrap","webpack://yooa-com/webpack/runtime/chunk loaded","webpack://yooa-com/webpack/runtime/compat get default export","webpack://yooa-com/webpack/runtime/define property getters","webpack://yooa-com/webpack/runtime/global","webpack://yooa-com/webpack/runtime/hasOwnProperty shorthand","webpack://yooa-com/webpack/runtime/publicPath","webpack://yooa-com/webpack/runtime/jsonp chunk loading","webpack://yooa-com/webpack/startup"],"sourcesContent":["window.addCommas = function addCommas(s){\r\n\tif (s.length <= 3) return s\r\n\tlet rem = s.length % 3\r\n\tif (rem == 0) rem = 3\r\n\treturn s.slice(0, rem) + \",\" + addCommas(s.slice(rem))\r\n}\r\n\r\nwindow.exponentialFormat = function exponentialFormat(num, precision) {\r\n\tlet e = num.log10().floor()\r\n\tlet m = num.div(Decimal.pow(10, e))\r\n\tif (m.toStringWithDecimalPlaces(precision) == 10) {\r\n        m = new Decimal(1)\r\n        e = e.add(1)\r\n    }\r\n    if (e.lt(0)) {\r\n        m = m.mul(10)\r\n        e = e.sub(1)\r\n    }\r\n\tlet start = \"\"\r\n\tif (e.abs().lt(1e9)) {\r\n\t\tif (m.toStringWithDecimalPlaces(precision) == 10) {\r\n            m = new Decimal(1)\r\n            e = e.add(1)\r\n        }\r\n\t\tstart = m.toStringWithDecimalPlaces(precision)\r\n\t}\r\n\t\r\n\tlet end = e.toStringWithDecimalPlaces(0)\r\n\tif (!end.includes(\"e\")) end = addCommas(end.replace(/-/g, ''))\r\n\tif (e.lt(0)) end = \"-\"+end\r\n\treturn start + \"e\" + end\r\n}\r\n\r\nwindow.commaFormat = function commaFormat(num, precision) {\r\n    if (num === null || num === undefined) return \"NaN\"\r\n    if (num.mag < 0.001) return (0).toFixed(precision)\r\n    let init = num.toStringWithDecimalPlaces(precision)\r\n    let portions = init.split(\".\")\r\n    portions[0] = portions[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\")\r\n    if (portions.length == 1) return portions[0]\r\n    return portions[0] + \".\" + portions[1]\r\n}\r\n\r\nwindow.regularFormat = function regularFormat(num, precision) {\r\n    if (num === null || num === undefined) return \"NaN\"\r\n    if (num.mag < 0.0001) return (0).toFixed(precision)\r\n    if (num.mag < 0.1 && precision !==0) precision = Math.max(precision, 4)\r\n    return num.toStringWithDecimalPlaces(precision)\r\n}\r\n\r\nwindow.fixValue = function fixValue(x, y = 0) {\r\n\treturn x || new Decimal(y)\r\n}\r\n\r\nwindow.sumValues = function sumValues(x) {\r\n\tx = Object.values(x)\r\n\tif (!x[0]) return new Decimal(0)\r\n\treturn x.reduce((a, b) => Decimal.add(a, b))\r\n}\r\n\r\nwindow.format = function format(decimal, precision = 2) {\r\n    decimal = new Decimal(decimal)\r\n\tif (isNaN(decimal.sign)||isNaN(decimal.layer)||isNaN(decimal.mag)) {\r\n\t\treturn \"NaN\"\r\n\t}\r\n\tif (decimal.sign < 0) return \"-\"+format(decimal.neg(), precision)\r\n\tif (decimal.mag<0) {\r\n\t\tif (decimal.layer > 3 || (decimal.mag < -1e10 && decimal.layer == 3)) return \"1/\" + format(decimal.recip(), precision)\r\n\t\telse exponentialFormat(decimal, precision)\r\n\t}\r\n\tif (decimal.mag == Number.POSITIVE_INFINITY) return \"Infinity\"\r\n\tif (decimal.layer > 3 || (decimal.mag >= 1e10 && decimal.layer == 3)) {\r\n\t\tvar slog = decimal.slog()\r\n\t\tif (slog.gte(1e9)) return \"F\" + formatWhole(slog.floor())\r\n\t\tif (slog.gte(100)) return Decimal.pow(10, slog.sub(slog.floor())).toStringWithDecimalPlaces(3) + \"F\" + commaFormat(slog.floor(), 0)\r\n\t\telse return Decimal.pow(10, slog.sub(slog.floor())).toStringWithDecimalPlaces(4) + \"F\" + commaFormat(slog.floor(), 0)\r\n\t} else if (decimal.layer > 2 || (Math.abs(decimal.mag) > 308 && decimal.layer == 2)) {\r\n\t\treturn \"e\" + format(decimal.log10(), precision)\r\n\t} else if (decimal.layer > 1 || (Math.abs(decimal.mag) >= 1e12 && decimal.layer == 1)) {\r\n\t\treturn \"e\" + format(decimal.log10(), 4)\r\n\t} else if (decimal.layer > 0 || decimal.mag >= 1e9) {\r\n\t\treturn exponentialFormat(decimal, precision)\r\n\t} else if (decimal.mag >= 1000) {\r\n\t\treturn commaFormat(decimal, 0)\r\n\t} else if (decimal.mag>=0.001) {\r\n\t\treturn regularFormat(decimal, precision)\r\n\t} else if (decimal.sign!=0) {\r\n\t\treturn exponentialFormat(decimal, precision)\r\n\t} else return regularFormat(decimal, precision)\r\n}\r\n\r\nwindow.formatWhole = function formatWhole(decimal) {\r\n    decimal = new Decimal(decimal)\r\n    if (decimal.gte(1e9)) return format(decimal, 2)\r\n    if (decimal.lte(0.99) && !decimal.eq(0)) return format(decimal, 2)\r\n    return format(decimal, 0)\r\n}\r\n\r\nwindow.formatTime = function formatTime(s) {\r\n    if (s < 60) return format(s) + \"s\"\r\n    else if (s < 3600) return formatWhole(Math.floor(s / 60)) + \"m \" + format(s % 60) + \"s\"\r\n    else if (s < 86400) return formatWhole(Math.floor(s / 3600)) + \"h \" + formatWhole(Math.floor(s / 60) % 60) + \"m \" + format(s % 60) + \"s\"\r\n    else if (s < 31536000) return formatWhole(Math.floor(s / 86400) % 365) + \"d \" + formatWhole(Math.floor(s / 3600) % 24) + \"h \" + formatWhole(Math.floor(s / 60) % 60) + \"m \" + format(s % 60) + \"s\"\r\n    else return formatWhole(Math.floor(s / 31536000)) + \"y \" + formatWhole(Math.floor(s / 86400) % 365) + \"d \" + formatWhole(Math.floor(s / 3600) % 24) + \"h \" + formatWhole(Math.floor(s / 60) % 60) + \"m \" + format(s % 60) + \"s\"\r\n}\r\n\r\nwindow.toPlaces = function toPlaces(x, precision, maxAccepted) {\r\n    x = new Decimal(x)\r\n    let result = x.toStringWithDecimalPlaces(precision)\r\n    if (new Decimal(result).gte(maxAccepted)) {\r\n        result = new Decimal(maxAccepted - Math.pow(0.1, precision)).toStringWithDecimalPlaces(precision)\r\n    }\r\n    return result\r\n}\r\n\r\n// Will also display very small numbers\r\nwindow.formatSmall = function formatSmall(x, precision=2) { \r\n    return format(x, precision, true)    \r\n}\r\n\r\nwindow.invertOOM = function invertOOM(x){\r\n    let e = x.log10().ceil()\r\n    let m = x.div(Decimal.pow(10, e))\r\n    e = e.neg()\r\n    x = new Decimal(10).pow(e).times(m)\r\n\r\n    return x\r\n}\r\n\r\nwindow.colorText = function colorText(elem, color, text) {\r\n\treturn \"<\" + elem + \" style='color:\" + color + \";text-shadow:0px 0px 10px;'>\" + text + \"</\" + elem + \">\"\r\n}","(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Decimal = factory());\r\n  })(this, (function () { 'use strict';\r\n  \r\n    function _classCallCheck(instance, Constructor) {\r\n      if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\");\r\n      }\r\n    }\r\n    function _defineProperties(target, props) {\r\n      for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) descriptor.writable = true;\r\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\r\n      }\r\n    }\r\n    function _createClass(Constructor, protoProps, staticProps) {\r\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n      if (staticProps) _defineProperties(Constructor, staticProps);\r\n      Object.defineProperty(Constructor, \"prototype\", {\r\n        writable: false\r\n      });\r\n      return Constructor;\r\n    }\r\n    function _toPrimitive(input, hint) {\r\n      if (typeof input !== \"object\" || input === null) return input;\r\n      var prim = input[Symbol.toPrimitive];\r\n      if (prim !== undefined) {\r\n        var res = prim.call(input, hint || \"default\");\r\n        if (typeof res !== \"object\") return res;\r\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\r\n      }\r\n      return (hint === \"string\" ? String : Number)(input);\r\n    }\r\n    function _toPropertyKey(arg) {\r\n      var key = _toPrimitive(arg, \"string\");\r\n      return typeof key === \"symbol\" ? key : String(key);\r\n    }\r\n  \r\n    /**\r\n     * A LRU cache intended for caching pure functions.\r\n     */\r\n    var LRUCache = /*#__PURE__*/function () {\r\n      /**\r\n       * @param maxSize The maximum size for this cache. We recommend setting this\r\n       * to be one less than a power of 2, as most hashtables - including V8's\r\n       * Object hashtable (https://crsrc.org/c/v8/src/objects/ordered-hash-table.cc)\r\n       * - uses powers of two for hashtable sizes. It can't exactly be a power of\r\n       * two, as a .set() call could temporarily set the size of the map to be\r\n       * maxSize + 1.\r\n       */\r\n      function LRUCache(maxSize) {\r\n        _classCallCheck(this, LRUCache);\r\n        this.map = new Map();\r\n        // Invariant: Exactly one of the below is true before and after calling a\r\n        // LRUCache method:\r\n        // - first and last are both undefined, and map.size() is 0.\r\n        // - first and last are the same object, and map.size() is 1.\r\n        // - first and last are different objects, and map.size() is greater than 1.\r\n        this.first = undefined;\r\n        this.last = undefined;\r\n        this.maxSize = maxSize;\r\n      }\r\n      _createClass(LRUCache, [{\r\n        key: \"size\",\r\n        get: function get() {\r\n          return this.map.size;\r\n        }\r\n        /**\r\n         * Gets the specified key from the cache, or undefined if it is not in the\r\n         * cache.\r\n         * @param key The key to get.\r\n         * @returns The cached value, or undefined if key is not in the cache.\r\n         */\r\n      }, {\r\n        key: \"get\",\r\n        value: function get(key) {\r\n          var node = this.map.get(key);\r\n          if (node === undefined) {\r\n            return undefined;\r\n          }\r\n          // It is guaranteed that there is at least one item in the cache.\r\n          // Therefore, first and last are guaranteed to be a ListNode...\r\n          // but if there is only one item, they might be the same.\r\n          // Update the order of the list to make this node the first node in the\r\n          // list.\r\n          // This isn't needed if this node is already the first node in the list.\r\n          if (node !== this.first) {\r\n            // As this node is DIFFERENT from the first node, it is guaranteed that\r\n            // there are at least two items in the cache.\r\n            // However, this node could possibly be the last item.\r\n            if (node === this.last) {\r\n              // This node IS the last node.\r\n              this.last = node.prev;\r\n              // From the invariants, there must be at least two items in the cache,\r\n              // so node - which is the original \"last node\" - must have a defined\r\n              // previous node. Therefore, this.last - set above - must be defined\r\n              // here.\r\n              \r\n              this.last.next = undefined;\r\n            } else {\r\n              // This node is somewhere in the middle of the list, so there must be at\r\n              // least THREE items in the list, and this node's prev and next must be\r\n              // defined here.\r\n              \r\n              node.prev.next = node.next;\r\n              \r\n              node.next.prev = node.prev;\r\n            }\r\n            node.next = this.first;\r\n            // From the invariants, there must be at least two items in the cache, so\r\n            // this.first must be a valid ListNode.\r\n            \r\n            this.first.prev = node;\r\n            this.first = node;\r\n          }\r\n          return node.value;\r\n        }\r\n        /**\r\n         * Sets an entry in the cache.\r\n         *\r\n         * @param key The key of the entry.\r\n         * @param value The value of the entry.\r\n         * @throws Error, if the map already contains the key.\r\n         */\r\n      }, {\r\n        key: \"set\",\r\n        value: function set(key, value) {\r\n          // Ensure that this.maxSize >= 1.\r\n          if (this.maxSize < 1) {\r\n            return;\r\n          }\r\n          if (this.map.has(key)) {\r\n            throw new Error(\"Cannot update existing keys in the cache\");\r\n          }\r\n          var node = new ListNode(key, value);\r\n          // Move node to the front of the list.\r\n          if (this.first === undefined) {\r\n            // If the first is undefined, the last is undefined too.\r\n            // Therefore, this cache has no items in it.\r\n            this.first = node;\r\n            this.last = node;\r\n          } else {\r\n            // This cache has at least one item in it.\r\n            node.next = this.first;\r\n            this.first.prev = node;\r\n            this.first = node;\r\n          }\r\n          this.map.set(key, node);\r\n          while (this.map.size > this.maxSize) {\r\n            // We are guaranteed that this.maxSize >= 1,\r\n            // so this.map.size is guaranteed to be >= 2,\r\n            // so this.first and this.last must be different valid ListNodes,\r\n            // and this.last.prev must also be a valid ListNode (possibly this.first).\r\n            \r\n            var last = this.last;\r\n            this.map[\"delete\"](last.key);\r\n            this.last = last.prev;\r\n            \r\n            this.last.next = undefined;\r\n          }\r\n        }\r\n      }]);\r\n      return LRUCache;\r\n    }();\r\n    /**\r\n     * A node in a doubly linked list.\r\n     */\r\n    var ListNode = /*#__PURE__*/_createClass(function ListNode(key, value) {\r\n      _classCallCheck(this, ListNode);\r\n      this.next = undefined;\r\n      this.prev = undefined;\r\n      this.key = key;\r\n      this.value = value;\r\n    });\r\n  \r\n    var MAX_SIGNIFICANT_DIGITS = 17; //Maximum number of digits of precision to assume in Number\r\n    var EXP_LIMIT = 9e15; //If we're ABOVE this value, increase a layer. (9e15 is close to the largest integer that can fit in a Number.)\r\n    var LAYER_DOWN = Math.log10(9e15);\r\n    var FIRST_NEG_LAYER = 1 / 9e15; //At layer 0, smaller non-zero numbers than this become layer 1 numbers with negative mag. After that the pattern continues as normal.\r\n    var NUMBER_EXP_MAX = 308; //The largest exponent that can appear in a Number, though not all mantissas are valid here.\r\n    var NUMBER_EXP_MIN = -324; //The smallest exponent that can appear in a Number, though not all mantissas are valid here.\r\n    var MAX_ES_IN_A_ROW = 5; //For default toString behaviour, when to swap from eee... to (e^n) syntax.\r\n    var DEFAULT_FROM_STRING_CACHE_SIZE = (1 << 10) - 1; // The default size of the LRU cache used to cache Decimal.fromString.\r\n    var powerOf10 = function () {\r\n      // We need this lookup table because Math.pow(10, exponent)\r\n      // when exponent's absolute value is large is slightly inaccurate.\r\n      // You can fix it with the power of math... or just make a lookup table.\r\n      // Faster AND simpler\r\n      var powersOf10 = [];\r\n      for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\r\n        powersOf10.push(Number(\"1e\" + i));\r\n      }\r\n      var indexOf0InPowersOf10 = 323;\r\n      return function (power) {\r\n        return powersOf10[power + indexOf0InPowersOf10];\r\n      };\r\n    }();\r\n    //tetration/slog to real height stuff\r\n    //background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\r\n    var critical_headers = [2, Math.E, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    var critical_tetr_values = [[\r\n    // Base 2 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\r\n    1, 1.0891180521811202527, 1.1789767925673958433, 1.2701455431742086633, 1.3632090180450091941, 1.4587818160364217007, 1.5575237916251418333, 1.6601571006859253673, 1.7674858188369780435, 1.8804192098842727359, 2], [\r\n    // Base E (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\r\n    1, 1.1121114330934078681, 1.2310389249316089299, 1.3583836963111376089, 1.4960519303993531879, 1.6463542337511945810, 1.8121385357018724464, 1.9969713246183068478, 2.2053895545527544330, 2.4432574483385252544, Math.E //1.0\r\n    ], [\r\n    // Base 3\r\n    1, 1.1187738849693603, 1.2464963939368214, 1.38527004705667, 1.5376664685821402, 1.7068895236551784, 1.897001227148399, 2.1132403089001035, 2.362480153784171, 2.6539010333870774, 3], [\r\n    // Base 4\r\n    1, 1.1367350847096405, 1.2889510672956703, 1.4606478703324786, 1.6570295196661111, 1.8850062585672889, 2.1539465047453485, 2.476829779693097, 2.872061932789197, 3.3664204535587183, 4], [\r\n    // Base 5\r\n    1, 1.1494592900767588, 1.319708228183931, 1.5166291280087583, 1.748171114438024, 2.0253263297298045, 2.3636668498288547, 2.7858359149579424, 3.3257226212448145, 4.035730287722532, 5], [\r\n    // Base 6\r\n    1, 1.159225940787673, 1.343712473580932, 1.5611293155111927, 1.8221199554561318, 2.14183924486326, 2.542468319282638, 3.0574682501653316, 3.7390572020926873, 4.6719550537360774, 6], [\r\n    // Base 7\r\n    1, 1.1670905356972596, 1.3632807444991446, 1.5979222279405536, 1.8842640123816674, 2.2416069644878687, 2.69893426559423, 3.3012632110403577, 4.121250340630164, 5.281493033448316, 7], [\r\n    // Base 8\r\n    1, 1.1736630594087796, 1.379783782386201, 1.6292821855668218, 1.9378971836180754, 2.3289975651071977, 2.8384347394720835, 3.5232708454565906, 4.478242031114584, 5.868592169644505, 8], [\r\n    // Base 9\r\n    1, 1.1793017514670474, 1.394054150657457, 1.65664127441059, 1.985170999970283, 2.4069682290577457, 2.9647310119960752, 3.7278665320924946, 4.814462547283592, 6.436522247411611, 9], [\r\n    // Base 10 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\r\n    1, 1.1840100246247336579, 1.4061375836156954169, 1.6802272208863963918, 2.026757028388618927, 2.4770056063449647580, 3.0805252717554819987, 3.9191964192627283911, 5.1351528408331864230, 6.9899611795347148455, 10]];\r\n    var critical_slog_values = [[\r\n    // Base 2\r\n    -1, -0.9194161097107025, -0.8335625019330468, -0.7425599821143978, -0.6466611521029437, -0.5462617907227869, -0.4419033816638769, -0.3342645487554494, -0.224140440909962, -0.11241087890006762, 0], [\r\n    // Base E\r\n    -1, -0.90603157029014, -0.80786507256596, -0.7064666939634, -0.60294836853664, -0.49849837513117, -0.39430303318768, -0.29147201034755, -0.19097820800866, -0.09361896280296, 0 //1.0\r\n    ], [\r\n    // Base 3\r\n    -1, -0.9021579584316141, -0.8005762598234203, -0.6964780623319391, -0.5911906810998454, -0.486050182576545, -0.3823089430815083, -0.28106046722897615, -0.1831906535795894, -0.08935809204418144, 0], [\r\n    // Base 4\r\n    -1, -0.8917227442365535, -0.781258746326964, -0.6705130326902455, -0.5612813129406509, -0.4551067709033134, -0.35319256652135966, -0.2563741554088552, -0.1651412821106526, -0.0796919581982668, 0], [\r\n    // Base 5\r\n    -1, -0.8843387974366064, -0.7678744063886243, -0.6529563724510552, -0.5415870994657841, -0.4352842206588936, -0.33504449124791424, -0.24138853420685147, -0.15445285440944467, -0.07409659641336663, 0], [\r\n    // Base 6\r\n    -1, -0.8786709358426346, -0.7577735191184886, -0.6399546189952064, -0.527284921869926, -0.4211627631006314, -0.3223479611761232, -0.23107655627789858, -0.1472057700818259, -0.07035171210706326, 0], [\r\n    // Base 7\r\n    -1, -0.8740862815291583, -0.7497032990976209, -0.6297119746181752, -0.5161838335958787, -0.41036238255751956, -0.31277212146489963, -0.2233976621705518, -0.1418697367979619, -0.06762117662323441, 0], [\r\n    // Base 8\r\n    -1, -0.8702632331800649, -0.7430366914122081, -0.6213373075161548, -0.5072025698095242, -0.40171437727184167, -0.30517930701410456, -0.21736343968190863, -0.137710238299109, -0.06550774483471955, 0], [\r\n    // Base 9\r\n    -1, -0.8670016295947213, -0.7373984232432306, -0.6143173985094293, -0.49973884395492807, -0.394584953527678, -0.2989649949848695, -0.21245647317021688, -0.13434688362382652, -0.0638072667348083, 0], [\r\n    // Base 10\r\n    -1, -0.8641642839543857, -0.732534623168535, -0.6083127477059322, -0.4934049257184696, -0.3885773075899922, -0.29376029055315767, -0.2083678561173622, -0.13155653399373268, -0.062401588652553186, 0]];\r\n    var D = function D(value) {\r\n      return Decimal.fromValue_noAlloc(value);\r\n    };\r\n    var FC = function FC(sign, layer, mag) {\r\n      return Decimal.fromComponents(sign, layer, mag);\r\n    };\r\n    var FC_NN = function FC_NN(sign, layer, mag) {\r\n      return Decimal.fromComponents_noNormalize(sign, layer, mag);\r\n    };\r\n    var decimalPlaces = function decimalPlaces(value, places) {\r\n      var len = places + 1;\r\n      var numDigits = Math.ceil(Math.log10(Math.abs(value)));\r\n      var rounded = Math.round(value * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\r\n      return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\r\n    };\r\n    var f_maglog10 = function f_maglog10(n) {\r\n      return Math.sign(n) * Math.log10(Math.abs(n));\r\n    };\r\n    //from HyperCalc source code\r\n    var f_gamma = function f_gamma(n) {\r\n      if (!isFinite(n)) {\r\n        return n;\r\n      }\r\n      if (n < -50) {\r\n        if (n === Math.trunc(n)) {\r\n          return Number.NEGATIVE_INFINITY;\r\n        }\r\n        return 0;\r\n      }\r\n      var scal1 = 1;\r\n      while (n < 10) {\r\n        scal1 = scal1 * n;\r\n        ++n;\r\n      }\r\n      n -= 1;\r\n      var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\r\n      l = l + (n + 0.5) * Math.log(n);\r\n      l = l - n;\r\n      var n2 = n * n;\r\n      var np = n;\r\n      l = l + 1 / (12 * np);\r\n      np = np * n2;\r\n      l = l - 1 / (360 * np);\r\n      np = np * n2;\r\n      l = l + 1 / (1260 * np);\r\n      np = np * n2;\r\n      l = l - 1 / (1680 * np);\r\n      np = np * n2;\r\n      l = l + 1 / (1188 * np);\r\n      np = np * n2;\r\n      l = l - 691 / (360360 * np);\r\n      np = np * n2;\r\n      l = l + 7 / (1092 * np);\r\n      np = np * n2;\r\n      l = l - 3617 / (122400 * np);\r\n      return Math.exp(l) / scal1;\r\n    };\r\n    var _EXPN1 = 0.36787944117144232159553; // exp(-1)\r\n    var OMEGA = 0.56714329040978387299997; // W(1, 0)\r\n    //from https://math.stackexchange.com/a/465183\r\n    // The evaluation can become inaccurate very close to the branch point\r\n    // Evaluates W(x, 0) if principal is true, W(x, -1) if principal is false\r\n    var f_lambertw = function f_lambertw(z) {\r\n      var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\r\n      var principal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\r\n      var w;\r\n      var wn;\r\n      if (!Number.isFinite(z)) {\r\n        return z;\r\n      }\r\n      if (principal) {\r\n        if (z === 0) {\r\n          return z;\r\n        }\r\n        if (z === 1) {\r\n          return OMEGA;\r\n        }\r\n        if (z < 10) {\r\n          w = 0;\r\n        } else {\r\n          w = Math.log(z) - Math.log(Math.log(z));\r\n        }\r\n      } else {\r\n        if (z === 0) return -Infinity;\r\n        if (z <= -0.1) {\r\n          w = -2;\r\n        } else {\r\n          w = Math.log(-z) - Math.log(-Math.log(-z));\r\n        }\r\n      }\r\n      for (var i = 0; i < 100; ++i) {\r\n        wn = (z * Math.exp(-w) + w * w) / (w + 1);\r\n        if (Math.abs(wn - w) < tol * Math.abs(wn)) {\r\n          return wn;\r\n        } else {\r\n          w = wn;\r\n        }\r\n      }\r\n      throw Error(\"Iteration failed to converge: \".concat(z.toString()));\r\n      //return Number.NaN;\r\n    };\r\n    //from https://github.com/scipy/scipy/blob/8dba340293fe20e62e173bdf2c10ae208286692f/scipy/special/lambertw.pxd\r\n    // The evaluation can become inaccurate very close to the branch point\r\n    // at ``-1/e``. In some corner cases, `lambertw` might currently\r\n    // fail to converge, or can end up on the wrong branch.\r\n    // Evaluates W(x, 0) if principal is true, W(x, -1) if principal is false\r\n    function d_lambertw(z) {\r\n      var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\r\n      var principal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\r\n      var w;\r\n      var ew, wewz, wn;\r\n      if (!Number.isFinite(z.mag)) {\r\n        return new Decimal(z);\r\n      }\r\n      if (principal) {\r\n        if (z.eq(Decimal.dZero)) {\r\n          return FC_NN(0, 0, 0);\r\n        }\r\n        if (z.eq(Decimal.dOne)) {\r\n          //Split out this case because the asymptotic series blows up\r\n          return Decimal.fromNumber(OMEGA);\r\n        }\r\n        //Get an initial guess for Halley's method\r\n        w = Decimal.ln(z);\r\n      } else {\r\n        if (z.eq(Decimal.dZero)) {\r\n          return new Decimal(Decimal.dNegInf);\r\n        }\r\n        //Get an initial guess for Halley's method\r\n        w = Decimal.ln(z.neg());\r\n      }\r\n      //Halley's method; see 5.9 in [1]\r\n      for (var i = 0; i < 100; ++i) {\r\n        ew = w.neg().exp();\r\n        wewz = w.sub(z.mul(ew));\r\n        wn = w.sub(wewz.div(w.add(1).sub(w.add(2).mul(wewz).div(Decimal.mul(2, w).add(2)))));\r\n        if (Decimal.abs(wn.sub(w)).lt(Decimal.abs(wn).mul(tol))) {\r\n          return wn;\r\n        } else {\r\n          w = wn;\r\n        }\r\n      }\r\n      throw Error(\"Iteration failed to converge: \".concat(z.toString()));\r\n      //return Decimal.dNaN;\r\n    }\r\n    /**\r\n     * The value of the Decimal is sign * 10^10^10...^mag, with (layer) 10s. If the layer is not 0, then negative mag means it's the reciprocal of the corresponding number with positive mag.\r\n     */\r\n    var Decimal = /*#__PURE__*/function () {\r\n      function Decimal(value) {\r\n        _classCallCheck(this, Decimal);\r\n        this.sign = 0;\r\n        this.mag = 0;\r\n        this.layer = 0;\r\n        if (value instanceof Decimal) {\r\n          this.fromDecimal(value);\r\n        } else if (typeof value === \"number\") {\r\n          this.fromNumber(value);\r\n        } else if (typeof value === \"string\") {\r\n          this.fromString(value);\r\n        }\r\n      }\r\n      _createClass(Decimal, [{\r\n        key: \"m\",\r\n        get: function get() {\r\n          if (this.sign === 0) {\r\n            return 0;\r\n          } else if (this.layer === 0) {\r\n            var exp = Math.floor(Math.log10(this.mag));\r\n            //handle special case 5e-324\r\n            var man;\r\n            if (this.mag === 5e-324) {\r\n              man = 5;\r\n            } else {\r\n              man = this.mag / powerOf10(exp);\r\n            }\r\n            return this.sign * man;\r\n          } else if (this.layer === 1) {\r\n            var residue = this.mag - Math.floor(this.mag);\r\n            return this.sign * Math.pow(10, residue);\r\n          } else {\r\n            //mantissa stops being relevant past 1e9e15 / ee15.954\r\n            return this.sign;\r\n          }\r\n        },\r\n        set: function set(value) {\r\n          if (this.layer <= 2) {\r\n            this.fromMantissaExponent(value, this.e);\r\n          } else {\r\n            //don't even pretend mantissa is meaningful\r\n            this.sign = Math.sign(value);\r\n            if (this.sign === 0) {\r\n              this.layer = 0;\r\n              this.exponent = 0;\r\n            }\r\n          }\r\n        }\r\n      }, {\r\n        key: \"e\",\r\n        get: function get() {\r\n          if (this.sign === 0) {\r\n            return 0;\r\n          } else if (this.layer === 0) {\r\n            return Math.floor(Math.log10(this.mag));\r\n          } else if (this.layer === 1) {\r\n            return Math.floor(this.mag);\r\n          } else if (this.layer === 2) {\r\n            return Math.floor(Math.sign(this.mag) * Math.pow(10, Math.abs(this.mag)));\r\n          } else {\r\n            return this.mag * Number.POSITIVE_INFINITY;\r\n          }\r\n        },\r\n        set: function set(value) {\r\n          this.fromMantissaExponent(this.m, value);\r\n        }\r\n      }, {\r\n        key: \"s\",\r\n        get: function get() {\r\n          return this.sign;\r\n        },\r\n        set: function set(value) {\r\n          if (value === 0) {\r\n            this.sign = 0;\r\n            this.layer = 0;\r\n            this.mag = 0;\r\n          } else {\r\n            this.sign = value;\r\n          }\r\n        }\r\n        // Object.defineProperty(Decimal.prototype, \"mantissa\", {\r\n      }, {\r\n        key: \"mantissa\",\r\n        get: function get() {\r\n          return this.m;\r\n        },\r\n        set: function set(value) {\r\n          this.m = value;\r\n        }\r\n      }, {\r\n        key: \"exponent\",\r\n        get: function get() {\r\n          return this.e;\r\n        },\r\n        set: function set(value) {\r\n          this.e = value;\r\n        }\r\n        /**\r\n         * Turns the given components into a valid Decimal.\r\n         */\r\n      }, {\r\n        key: \"normalize\",\r\n        value:\r\n        /**\r\n         * Turns the Decimal into a valid Decimal. This function is meant for internal purposes - users of this library should not need to use normalize.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n        function normalize() {\r\n          /*\r\n          PSEUDOCODE:\r\n          Whenever we are partially 0 (sign is 0 or mag and layer is 0), make it fully 0.\r\n          Whenever we are at or hit layer 0, extract sign from negative mag.\r\n          If layer === 0 and mag < FIRST_NEG_LAYER (1/9e15), shift to 'first negative layer' (add layer, log10 mag).\r\n          While abs(mag) > EXP_LIMIT (9e15), layer += 1, mag = maglog10(mag).\r\n          While abs(mag) < LAYER_DOWN (15.954) and layer > 0, layer -= 1, mag = pow(10, mag).\r\n                When we're done, all of the following should be true OR one of the numbers is not IsFinite OR layer is not IsInteger (error state):\r\n          Any 0 is totally zero (0, 0, 0) and any NaN is totally NaN (NaN, NaN, NaN).\r\n          Anything layer 0 has mag 0 OR mag > 1/9e15 and < 9e15.\r\n          Anything layer 1 or higher has abs(mag) >= 15.954 and < 9e15.\r\n          Any positive infinity is (1, Infinity, Infinity) and any negative infinity is (-1, Infinity, Infinity).\r\n          We will assume in calculations that all Decimals are either erroneous or satisfy these criteria. (Otherwise: Garbage in, garbage out.)\r\n          */\r\n          //Any 0 is totally 0\r\n          if (this.sign === 0 || this.mag === 0 && this.layer === 0 || this.mag === Number.NEGATIVE_INFINITY && this.layer > 0 && Number.isFinite(this.layer)) {\r\n            this.sign = 0;\r\n            this.mag = 0;\r\n            this.layer = 0;\r\n            return this;\r\n          }\r\n          //extract sign from negative mag at layer 0\r\n          if (this.layer === 0 && this.mag < 0) {\r\n            this.mag = -this.mag;\r\n            this.sign = -this.sign;\r\n          }\r\n          //Handle infinities\r\n          if (this.mag === Number.POSITIVE_INFINITY || this.layer === Number.POSITIVE_INFINITY || this.mag === Number.NEGATIVE_INFINITY || this.layer === Number.NEGATIVE_INFINITY) {\r\n            this.mag = Number.POSITIVE_INFINITY;\r\n            this.layer = Number.POSITIVE_INFINITY;\r\n            return this;\r\n          }\r\n          //Handle shifting from layer 0 to negative layers.\r\n          if (this.layer === 0 && this.mag < FIRST_NEG_LAYER) {\r\n            this.layer += 1;\r\n            this.mag = Math.log10(this.mag);\r\n            return this;\r\n          }\r\n          var absmag = Math.abs(this.mag);\r\n          var signmag = Math.sign(this.mag);\r\n          if (absmag >= EXP_LIMIT) {\r\n            this.layer += 1;\r\n            this.mag = signmag * Math.log10(absmag);\r\n            return this;\r\n          } else {\r\n            while (absmag < LAYER_DOWN && this.layer > 0) {\r\n              this.layer -= 1;\r\n              if (this.layer === 0) {\r\n                this.mag = Math.pow(10, this.mag);\r\n              } else {\r\n                this.mag = signmag * Math.pow(10, absmag);\r\n                absmag = Math.abs(this.mag);\r\n                signmag = Math.sign(this.mag);\r\n              }\r\n            }\r\n            if (this.layer === 0) {\r\n              if (this.mag < 0) {\r\n                //extract sign from negative mag at layer 0\r\n                this.mag = -this.mag;\r\n                this.sign = -this.sign;\r\n              } else if (this.mag === 0) {\r\n                //excessive rounding can give us all zeroes\r\n                this.sign = 0;\r\n              }\r\n            }\r\n          }\r\n          if (Number.isNaN(this.sign) || Number.isNaN(this.layer) || Number.isNaN(this.mag)) {\r\n            this.sign = Number.NaN;\r\n            this.layer = Number.NaN;\r\n            this.mag = Number.NaN;\r\n          }\r\n          return this;\r\n        }\r\n        /**\r\n         * Turns the given components into a valid Decimal.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromComponents\",\r\n        value: function fromComponents(sign, layer, mag) {\r\n          this.sign = sign;\r\n          this.layer = layer;\r\n          this.mag = mag;\r\n          this.normalize();\r\n          return this;\r\n        }\r\n        /**\r\n         * Turns the given components into a Decimal, but not necessarily a valid one (it's only valid if the components would already create a valid Decimal without normalization). Users of this library should not use this function.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromComponents_noNormalize\",\r\n        value: function fromComponents_noNormalize(sign, layer, mag) {\r\n          this.sign = sign;\r\n          this.layer = layer;\r\n          this.mag = mag;\r\n          return this;\r\n        }\r\n        /**\r\n         * Turns the mantissa and exponent into a valid Decimal with value mantissa * 10^exponent.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromMantissaExponent\",\r\n        value: function fromMantissaExponent(mantissa, exponent) {\r\n          this.layer = 1;\r\n          this.sign = Math.sign(mantissa);\r\n          mantissa = Math.abs(mantissa);\r\n          this.mag = exponent + Math.log10(mantissa);\r\n          this.normalize();\r\n          return this;\r\n        }\r\n        /**\r\n         * Turns the mantissa and exponent into a Decimal, but not necessarily a valid one. Users of this library should not use this function.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromMantissaExponent_noNormalize\",\r\n        value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\r\n          //The idea of 'normalizing' a break_infinity.js style Decimal doesn't really apply. So just do the same thing.\r\n          this.fromMantissaExponent(mantissa, exponent);\r\n          return this;\r\n        }\r\n        /**\r\n         * Turns the Decimal that this function is called on into a deep copy of the provided value.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromDecimal\",\r\n        value: function fromDecimal(value) {\r\n          this.sign = value.sign;\r\n          this.layer = value.layer;\r\n          this.mag = value.mag;\r\n          return this;\r\n        }\r\n        /**\r\n         * Converts a floating-point number into a Decimal.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromNumber\",\r\n        value: function fromNumber(value) {\r\n          this.mag = Math.abs(value);\r\n          this.sign = Math.sign(value);\r\n          this.layer = 0;\r\n          this.normalize();\r\n          return this;\r\n        }\r\n        /**\r\n         * Converts a string into a Decimal.\r\n         *\r\n         * If linearhyper4 is true, then strings like \"10^^8.5\" will use the linear approximation of tetration even for bases <= 10.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromString\",\r\n        value: function fromString(value) {\r\n          var linearhyper4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          var originalValue = value;\r\n          var cached = Decimal.fromStringCache.get(originalValue);\r\n          if (cached !== undefined) {\r\n            return this.fromDecimal(cached);\r\n          }\r\n          {\r\n            value = value.replace(\",\", \"\");\r\n          }\r\n          //Handle x^^^y format. Note that no linearhyper5 parameter is needed, as pentation has no analytic approximation.\r\n          var pentationparts = value.split(\"^^^\");\r\n          if (pentationparts.length === 2) {\r\n            var _base = parseFloat(pentationparts[0]);\r\n            var _height = parseFloat(pentationparts[1]);\r\n            var heightparts = pentationparts[1].split(\";\");\r\n            var payload = 1;\r\n            if (heightparts.length === 2) {\r\n              payload = parseFloat(heightparts[1]);\r\n              if (!isFinite(payload)) {\r\n                payload = 1;\r\n              }\r\n            }\r\n            if (isFinite(_base) && isFinite(_height)) {\r\n              var result = Decimal.pentate(_base, _height, payload, linearhyper4);\r\n              this.sign = result.sign;\r\n              this.layer = result.layer;\r\n              this.mag = result.mag;\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              return this;\r\n            }\r\n          }\r\n          //Handle x^^y format.\r\n          var tetrationparts = value.split(\"^^\");\r\n          if (tetrationparts.length === 2) {\r\n            var _base2 = parseFloat(tetrationparts[0]);\r\n            var _height2 = parseFloat(tetrationparts[1]);\r\n            var _heightparts = tetrationparts[1].split(\";\");\r\n            var _payload = 1;\r\n            if (_heightparts.length === 2) {\r\n              _payload = parseFloat(_heightparts[1]);\r\n              if (!isFinite(_payload)) {\r\n                _payload = 1;\r\n              }\r\n            }\r\n            if (isFinite(_base2) && isFinite(_height2)) {\r\n              var _result = Decimal.tetrate(_base2, _height2, _payload, linearhyper4);\r\n              this.sign = _result.sign;\r\n              this.layer = _result.layer;\r\n              this.mag = _result.mag;\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              return this;\r\n            }\r\n          }\r\n          //Handle x^y format.\r\n          var powparts = value.split(\"^\");\r\n          if (powparts.length === 2) {\r\n            var _base3 = parseFloat(powparts[0]);\r\n            var _exponent = parseFloat(powparts[1]);\r\n            if (isFinite(_base3) && isFinite(_exponent)) {\r\n              var _result2 = Decimal.pow(_base3, _exponent);\r\n              this.sign = _result2.sign;\r\n              this.layer = _result2.layer;\r\n              this.mag = _result2.mag;\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              return this;\r\n            }\r\n          }\r\n          //Handle various cases involving it being a Big Number.\r\n          value = value.trim().toLowerCase();\r\n          //handle X PT Y format.\r\n          var base;\r\n          var height;\r\n          var ptparts = value.split(\"pt\");\r\n          if (ptparts.length === 2) {\r\n            base = 10;\r\n            var negative = false;\r\n            if (ptparts[0][0] == \"-\") {\r\n              negative = true;\r\n              ptparts[0] = ptparts[0].slice(1);\r\n            }\r\n            height = parseFloat(ptparts[0]);\r\n            ptparts[1] = ptparts[1].replace(\"(\", \"\");\r\n            ptparts[1] = ptparts[1].replace(\")\", \"\");\r\n            var _payload2 = parseFloat(ptparts[1]);\r\n            if (!isFinite(_payload2)) {\r\n              _payload2 = 1;\r\n            }\r\n            if (isFinite(base) && isFinite(height)) {\r\n              var _result3 = Decimal.tetrate(base, height, _payload2, linearhyper4);\r\n              this.sign = _result3.sign;\r\n              this.layer = _result3.layer;\r\n              this.mag = _result3.mag;\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              if (negative) this.sign *= -1;\r\n              return this;\r\n            }\r\n          }\r\n          //handle XpY format (it's the same thing just with p).\r\n          ptparts = value.split(\"p\");\r\n          if (ptparts.length === 2) {\r\n            base = 10;\r\n            var _negative = false;\r\n            if (ptparts[0][0] == \"-\") {\r\n              _negative = true;\r\n              ptparts[0] = ptparts[0].slice(1);\r\n            }\r\n            height = parseFloat(ptparts[0]);\r\n            ptparts[1] = ptparts[1].replace(\"(\", \"\");\r\n            ptparts[1] = ptparts[1].replace(\")\", \"\");\r\n            var _payload3 = parseFloat(ptparts[1]);\r\n            if (!isFinite(_payload3)) {\r\n              _payload3 = 1;\r\n            }\r\n            if (isFinite(base) && isFinite(height)) {\r\n              var _result4 = Decimal.tetrate(base, height, _payload3, linearhyper4);\r\n              this.sign = _result4.sign;\r\n              this.layer = _result4.layer;\r\n              this.mag = _result4.mag;\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              if (_negative) this.sign *= -1;\r\n              return this;\r\n            }\r\n          }\r\n          //handle XFY format\r\n          ptparts = value.split(\"f\");\r\n          if (ptparts.length === 2) {\r\n            base = 10;\r\n            var _negative2 = false;\r\n            if (ptparts[0][0] == \"-\") {\r\n              _negative2 = true;\r\n              ptparts[0] = ptparts[0].slice(1);\r\n            }\r\n            ptparts[0] = ptparts[0].replace(\"(\", \"\");\r\n            ptparts[0] = ptparts[0].replace(\")\", \"\");\r\n            var _payload4 = parseFloat(ptparts[0]);\r\n            ptparts[1] = ptparts[1].replace(\"(\", \"\");\r\n            ptparts[1] = ptparts[1].replace(\")\", \"\");\r\n            height = parseFloat(ptparts[1]);\r\n            if (!isFinite(_payload4)) {\r\n              _payload4 = 1;\r\n            }\r\n            if (isFinite(base) && isFinite(height)) {\r\n              var _result5 = Decimal.tetrate(base, height, _payload4, linearhyper4);\r\n              this.sign = _result5.sign;\r\n              this.layer = _result5.layer;\r\n              this.mag = _result5.mag;\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              if (_negative2) this.sign *= -1;\r\n              return this;\r\n            }\r\n          }\r\n          var parts = value.split(\"e\");\r\n          var ecount = parts.length - 1;\r\n          //Handle numbers that are exactly floats (0 or 1 es).\r\n          if (ecount === 0) {\r\n            var numberAttempt = parseFloat(value);\r\n            if (isFinite(numberAttempt)) {\r\n              this.fromNumber(numberAttempt);\r\n              if (Decimal.fromStringCache.size >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              return this;\r\n            }\r\n          } else if (ecount === 1) {\r\n            //Very small numbers (\"2e-3000\" and so on) may look like valid floats but round to 0.\r\n            var _numberAttempt = parseFloat(value);\r\n            if (isFinite(_numberAttempt) && _numberAttempt !== 0) {\r\n              this.fromNumber(_numberAttempt);\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              return this;\r\n            }\r\n          }\r\n          //Handle new (e^N)X format.\r\n          var newparts = value.split(\"e^\");\r\n          if (newparts.length === 2) {\r\n            this.sign = 1;\r\n            if (newparts[0].charAt(0) == \"-\") {\r\n              this.sign = -1;\r\n            }\r\n            var layerstring = \"\";\r\n            for (var i = 0; i < newparts[1].length; ++i) {\r\n              var chrcode = newparts[1].charCodeAt(i);\r\n              if (chrcode >= 43 && chrcode <= 57 || chrcode === 101) {\r\n                //is \"0\" to \"9\" or \"+\" or \"-\" or \".\" or \"e\" (or \",\" or \"/\")\r\n                layerstring += newparts[1].charAt(i);\r\n              } //we found the end of the layer count\r\n              else {\r\n                this.layer = parseFloat(layerstring);\r\n                this.mag = parseFloat(newparts[1].substr(i + 1));\r\n                // Handle invalid cases like (e^-8)1 and (e^10.5)1 by just calling tetrate\r\n                if (this.layer < 0 || this.layer % 1 != 0) {\r\n                  var _result6 = Decimal.tetrate(10, this.layer, this.mag, linearhyper4);\r\n                  this.sign = _result6.sign;\r\n                  this.layer = _result6.layer;\r\n                  this.mag = _result6.mag;\r\n                }\r\n                this.normalize();\r\n                if (Decimal.fromStringCache.maxSize >= 1) {\r\n                  Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n                }\r\n                return this;\r\n              }\r\n            }\r\n          }\r\n          if (ecount < 1) {\r\n            this.sign = 0;\r\n            this.layer = 0;\r\n            this.mag = 0;\r\n            if (Decimal.fromStringCache.maxSize >= 1) {\r\n              Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n            }\r\n            return this;\r\n          }\r\n          var mantissa = parseFloat(parts[0]);\r\n          if (mantissa === 0) {\r\n            this.sign = 0;\r\n            this.layer = 0;\r\n            this.mag = 0;\r\n            if (Decimal.fromStringCache.maxSize >= 1) {\r\n              Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n            }\r\n            return this;\r\n          }\r\n          var exponent = parseFloat(parts[parts.length - 1]);\r\n          //handle numbers like AeBeC and AeeeeBeC\r\n          if (ecount >= 2) {\r\n            var me = parseFloat(parts[parts.length - 2]);\r\n            if (isFinite(me)) {\r\n              exponent *= Math.sign(me);\r\n              exponent += f_maglog10(me);\r\n            }\r\n          }\r\n          //Handle numbers written like eee... (N es) X\r\n          if (!isFinite(mantissa)) {\r\n            this.sign = parts[0] === \"-\" ? -1 : 1;\r\n            this.layer = ecount;\r\n            this.mag = exponent;\r\n          }\r\n          //Handle numbers written like XeY\r\n          else if (ecount === 1) {\r\n            this.sign = Math.sign(mantissa);\r\n            this.layer = 1;\r\n            //Example: 2e10 is equal to 10^log10(2e10) which is equal to 10^(10+log10(2))\r\n            this.mag = exponent + Math.log10(Math.abs(mantissa));\r\n          }\r\n          //Handle numbers written like Xeee... (N es) Y\r\n          else {\r\n            this.sign = Math.sign(mantissa);\r\n            this.layer = ecount;\r\n            if (ecount === 2) {\r\n              var _result7 = Decimal.mul(FC(1, 2, exponent), D(mantissa));\r\n              this.sign = _result7.sign;\r\n              this.layer = _result7.layer;\r\n              this.mag = _result7.mag;\r\n              if (Decimal.fromStringCache.maxSize >= 1) {\r\n                Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n              }\r\n              return this;\r\n            } else {\r\n              //at eee and above, mantissa is too small to be recognizable!\r\n              this.mag = exponent;\r\n            }\r\n          }\r\n          this.normalize();\r\n          if (Decimal.fromStringCache.maxSize >= 1) {\r\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\r\n          }\r\n          return this;\r\n        }\r\n        /**\r\n         * The function used by new Decimal() to create a new Decimal. Accepts a DecimalSource: uses fromNumber if given a number, uses fromString if given a string, and uses fromDecimal if given a Decimal.\r\n         *\r\n         * Note: this function mutates the Decimal it is called on.\r\n         */\r\n      }, {\r\n        key: \"fromValue\",\r\n        value: function fromValue(value) {\r\n          if (value instanceof Decimal) {\r\n            return this.fromDecimal(value);\r\n          }\r\n          if (typeof value === \"number\") {\r\n            return this.fromNumber(value);\r\n          }\r\n          if (typeof value === \"string\") {\r\n            return this.fromString(value);\r\n          }\r\n          this.sign = 0;\r\n          this.layer = 0;\r\n          this.mag = 0;\r\n          return this;\r\n        }\r\n        /**\r\n         * Returns the numeric value of the Decimal it's called on. Will return Infinity (or -Infinity for negatives) for Decimals that are larger than Number.MAX_VALUE.\r\n         */\r\n      }, {\r\n        key: \"toNumber\",\r\n        value: function toNumber() {\r\n          if (this.mag === Number.POSITIVE_INFINITY && this.layer === Number.POSITIVE_INFINITY && this.sign === 1) {\r\n            return Number.POSITIVE_INFINITY;\r\n          }\r\n          if (this.mag === Number.POSITIVE_INFINITY && this.layer === Number.POSITIVE_INFINITY && this.sign === -1) {\r\n            return Number.NEGATIVE_INFINITY;\r\n          }\r\n          if (!Number.isFinite(this.layer)) {\r\n            return Number.NaN;\r\n          }\r\n          if (this.layer === 0) {\r\n            return this.sign * this.mag;\r\n          } else if (this.layer === 1) {\r\n            return this.sign * Math.pow(10, this.mag);\r\n          } //overflow for any normalized Decimal\r\n          else {\r\n            return this.mag > 0 ? this.sign > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : 0;\r\n          }\r\n        }\r\n      }, {\r\n        key: \"mantissaWithDecimalPlaces\",\r\n        value: function mantissaWithDecimalPlaces(places) {\r\n          // https://stackoverflow.com/a/37425022\r\n          if (isNaN(this.m)) {\r\n            return Number.NaN;\r\n          }\r\n          if (this.m === 0) {\r\n            return 0;\r\n          }\r\n          return decimalPlaces(this.m, places);\r\n        }\r\n      }, {\r\n        key: \"magnitudeWithDecimalPlaces\",\r\n        value: function magnitudeWithDecimalPlaces(places) {\r\n          // https://stackoverflow.com/a/37425022\r\n          if (isNaN(this.mag)) {\r\n            return Number.NaN;\r\n          }\r\n          if (this.mag === 0) {\r\n            return 0;\r\n          }\r\n          return decimalPlaces(this.mag, places);\r\n        }\r\n        /**\r\n         * Returns a string representation of the Decimal it's called on.\r\n         * This string is written as a plain number for most layer 0 numbers, in scientific notation for layer 1 numbers (and layer 0 numbers below 1e-6),\r\n         * in \"ee...X\" form for numbers from layers 2 to 5, and in (e^N)X form for layer > 5.\r\n         */\r\n      }, {\r\n        key: \"toString\",\r\n        value: function toString() {\r\n          if (isNaN(this.layer) || isNaN(this.sign) || isNaN(this.mag)) {\r\n            return \"NaN\";\r\n          }\r\n          if (this.mag === Number.POSITIVE_INFINITY || this.layer === Number.POSITIVE_INFINITY) {\r\n            return this.sign === 1 ? \"Infinity\" : \"-Infinity\";\r\n          }\r\n          if (this.layer === 0) {\r\n            if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\r\n              return (this.sign * this.mag).toString();\r\n            }\r\n            return this.m + \"e\" + this.e;\r\n          } else if (this.layer === 1) {\r\n            return this.m + \"e\" + this.e;\r\n          } else {\r\n            //layer 2+\r\n            if (this.layer <= MAX_ES_IN_A_ROW) {\r\n              return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + this.mag;\r\n            } else {\r\n              return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + this.mag;\r\n            }\r\n          }\r\n        }\r\n      }, {\r\n        key: \"toExponential\",\r\n        value: function toExponential(places) {\r\n          if (this.layer === 0) {\r\n            return (this.sign * this.mag).toExponential(places);\r\n          }\r\n          return this.toStringWithDecimalPlaces(places);\r\n        }\r\n      }, {\r\n        key: \"toFixed\",\r\n        value: function toFixed(places) {\r\n          if (this.layer === 0) {\r\n            return (this.sign * this.mag).toFixed(places);\r\n          }\r\n          return this.toStringWithDecimalPlaces(places);\r\n        }\r\n      }, {\r\n        key: \"toPrecision\",\r\n        value: function toPrecision(places) {\r\n          if (this.e <= -7) {\r\n            return this.toExponential(places - 1);\r\n          }\r\n          if (places > this.e) {\r\n            return this.toFixed(places - this.exponent - 1);\r\n          }\r\n          return this.toExponential(places - 1);\r\n        }\r\n      }, {\r\n        key: \"valueOf\",\r\n        value: function valueOf() {\r\n          return this.toString();\r\n        }\r\n      }, {\r\n        key: \"toJSON\",\r\n        value: function toJSON() {\r\n          return this.toString();\r\n        }\r\n      }, {\r\n        key: \"toStringWithDecimalPlaces\",\r\n        value: function toStringWithDecimalPlaces(places) {\r\n          if (this.layer === 0) {\r\n            if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\r\n              return (this.sign * this.mag).toFixed(places);\r\n            }\r\n            return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\r\n          } else if (this.layer === 1) {\r\n            return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\r\n          } else {\r\n            //layer 2+\r\n            if (this.layer <= MAX_ES_IN_A_ROW) {\r\n              return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + decimalPlaces(this.mag, places);\r\n            } else {\r\n              return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + decimalPlaces(this.mag, places);\r\n            }\r\n          }\r\n        }\r\n        /**\r\n         * Absolute value function: returns 'this' if 'this' >= 0, returns the negative of 'this' if this < 0.\r\n         */\r\n      }, {\r\n        key: \"abs\",\r\n        value: function abs() {\r\n          return FC_NN(this.sign === 0 ? 0 : 1, this.layer, this.mag);\r\n        }\r\n        /**\r\n         * Negates the Decimal it's called on: in other words, when given X, returns -X.\r\n         */\r\n      }, {\r\n        key: \"neg\",\r\n        value: function neg() {\r\n          return FC_NN(-this.sign, this.layer, this.mag);\r\n        }\r\n        /**\r\n         * Negates the Decimal it's called on: in other words, when given X, returns -X.\r\n         */\r\n      }, {\r\n        key: \"negate\",\r\n        value: function negate() {\r\n          return this.neg();\r\n        }\r\n        /**\r\n         * Negates the Decimal it's called on: in other words, when given X, returns -X.\r\n         */\r\n      }, {\r\n        key: \"negated\",\r\n        value: function negated() {\r\n          return this.neg();\r\n        }\r\n        // public sign () {\r\n        //     return this.sign;\r\n        //   }\r\n        /**\r\n         * Returns the sign of the Decimal it's called on. (Though, since sign is a public data member of Decimal, you might as well just call .sign instead of .sgn())\r\n         */\r\n      }, {\r\n        key: \"sgn\",\r\n        value: function sgn() {\r\n          return this.sign;\r\n        }\r\n        /**\r\n         * Rounds the Decimal it's called on to the nearest integer.\r\n         */\r\n      }, {\r\n        key: \"round\",\r\n        value: function round() {\r\n          if (this.mag < 0) {\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          if (this.layer === 0) {\r\n            return FC(this.sign, 0, Math.round(this.mag));\r\n          }\r\n          return new Decimal(this);\r\n        }\r\n        /**\r\n         * \"Rounds\" the Decimal it's called on to the nearest integer that's less than or equal to it.\r\n         */\r\n      }, {\r\n        key: \"floor\",\r\n        value: function floor() {\r\n          if (this.mag < 0) {\r\n            if (this.sign === -1) return FC_NN(-1, 0, 1);else return FC_NN(0, 0, 0);\r\n          }\r\n          if (this.sign === -1) return this.neg().ceil().neg();\r\n          if (this.layer === 0) {\r\n            return FC(this.sign, 0, Math.floor(this.mag));\r\n          }\r\n          return new Decimal(this);\r\n        }\r\n        /**\r\n         * \"Rounds\" the Decimal it's called on to the nearest integer that's greater than or equal to it.\r\n         */\r\n      }, {\r\n        key: \"ceil\",\r\n        value: function ceil() {\r\n          if (this.mag < 0) {\r\n            if (this.sign === 1) return FC_NN(1, 0, 1); //The ceiling function called on something tiny like 10^10^-100 should return 1, since 10^10^-100 is still greater than 0\r\n            else return FC_NN(0, 0, 0);\r\n          }\r\n          if (this.sign === -1) return this.neg().floor().neg();\r\n          if (this.layer === 0) {\r\n            return FC(this.sign, 0, Math.ceil(this.mag));\r\n          }\r\n          return new Decimal(this);\r\n        }\r\n        /**\r\n         * Extracts the integer part of the Decimal and returns it. Behaves like floor on positive numbers, but behaves like ceiling on negative numbers.\r\n         */\r\n      }, {\r\n        key: \"trunc\",\r\n        value: function trunc() {\r\n          if (this.mag < 0) {\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          if (this.layer === 0) {\r\n            return FC(this.sign, 0, Math.trunc(this.mag));\r\n          }\r\n          return new Decimal(this);\r\n        }\r\n        /**\r\n         * Addition: returns the sum of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"add\",\r\n        value: function add(value) {\r\n          var decimal = D(value);\r\n          //Infinity + -Infinity = NaN\r\n          if (this.eq(Decimal.dInf) && decimal.eq(Decimal.dNegInf) || this.eq(Decimal.dNegInf) && decimal.eq(Decimal.dInf)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //inf/nan check\r\n          if (!Number.isFinite(this.layer)) {\r\n            return new Decimal(this);\r\n          }\r\n          if (!Number.isFinite(decimal.layer)) {\r\n            return new Decimal(decimal);\r\n          }\r\n          //Special case - if one of the numbers is 0, return the other number.\r\n          if (this.sign === 0) {\r\n            return new Decimal(decimal);\r\n          }\r\n          if (decimal.sign === 0) {\r\n            return new Decimal(this);\r\n          }\r\n          //Special case - Adding a number to its negation produces 0, no matter how large.\r\n          if (this.sign === -decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag) {\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          var a;\r\n          var b;\r\n          //Special case: If one of the numbers is layer 2 or higher, just take the bigger number.\r\n          if (this.layer >= 2 || decimal.layer >= 2) {\r\n            return this.maxabs(decimal);\r\n          }\r\n          if (Decimal.cmpabs(this, decimal) > 0) {\r\n            a = new Decimal(this);\r\n            b = new Decimal(decimal);\r\n          } else {\r\n            a = new Decimal(decimal);\r\n            b = new Decimal(this);\r\n          }\r\n          if (a.layer === 0 && b.layer === 0) {\r\n            return Decimal.fromNumber(a.sign * a.mag + b.sign * b.mag);\r\n          }\r\n          var layera = a.layer * Math.sign(a.mag);\r\n          var layerb = b.layer * Math.sign(b.mag);\r\n          //If one of the numbers is 2+ layers higher than the other, just take the bigger number.\r\n          if (layera - layerb >= 2) {\r\n            return a;\r\n          }\r\n          if (layera === 0 && layerb === -1) {\r\n            if (Math.abs(b.mag - Math.log10(a.mag)) > MAX_SIGNIFICANT_DIGITS) {\r\n              return a;\r\n            } else {\r\n              var magdiff = Math.pow(10, Math.log10(a.mag) - b.mag);\r\n              var mantissa = b.sign + a.sign * magdiff;\r\n              return FC(Math.sign(mantissa), 1, b.mag + Math.log10(Math.abs(mantissa)));\r\n            }\r\n          }\r\n          if (layera === 1 && layerb === 0) {\r\n            if (Math.abs(a.mag - Math.log10(b.mag)) > MAX_SIGNIFICANT_DIGITS) {\r\n              return a;\r\n            } else {\r\n              var _magdiff = Math.pow(10, a.mag - Math.log10(b.mag));\r\n              var _mantissa = b.sign + a.sign * _magdiff;\r\n              return FC(Math.sign(_mantissa), 1, Math.log10(b.mag) + Math.log10(Math.abs(_mantissa)));\r\n            }\r\n          }\r\n          if (Math.abs(a.mag - b.mag) > MAX_SIGNIFICANT_DIGITS) {\r\n            return a;\r\n          } else {\r\n            var _magdiff2 = Math.pow(10, a.mag - b.mag);\r\n            var _mantissa2 = b.sign + a.sign * _magdiff2;\r\n            return FC(Math.sign(_mantissa2), 1, b.mag + Math.log10(Math.abs(_mantissa2)));\r\n          }\r\n        }\r\n        /**\r\n         * Addition: returns the sum of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"plus\",\r\n        value: function plus(value) {\r\n          return this.add(value);\r\n        }\r\n        /**\r\n         * Subtraction: returns the difference between 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"sub\",\r\n        value: function sub(value) {\r\n          return this.add(D(value).neg());\r\n        }\r\n        /**\r\n         * Subtraction: returns the difference between 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"subtract\",\r\n        value: function subtract(value) {\r\n          return this.sub(value);\r\n        }\r\n        /**\r\n         * Subtraction: returns the difference between 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"minus\",\r\n        value: function minus(value) {\r\n          return this.sub(value);\r\n        }\r\n        /**\r\n         * Multiplication: returns the product of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"mul\",\r\n        value: function mul(value) {\r\n          var decimal = D(value);\r\n          // Infinity * -Infinity = -Infinity\r\n          if (this.eq(Decimal.dInf) && decimal.eq(Decimal.dNegInf) || this.eq(Decimal.dNegInf) && decimal.eq(Decimal.dInf)) {\r\n            return new Decimal(Decimal.dNegInf);\r\n          }\r\n          //Infinity * 0 = NaN\r\n          if (this.mag == Number.POSITIVE_INFINITY && decimal.eq(Decimal.dZero) || this.eq(Decimal.dZero) && this.mag == Number.POSITIVE_INFINITY) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          // -Infinity * -Infinity = Infinity\r\n          if (this.eq(Decimal.dNegInf) && decimal.eq(Decimal.dNegInf)) {\r\n            return new Decimal(Decimal.dInf);\r\n          }\r\n          //inf/nan check\r\n          if (!Number.isFinite(this.layer)) {\r\n            return new Decimal(this);\r\n          }\r\n          if (!Number.isFinite(decimal.layer)) {\r\n            return new Decimal(decimal);\r\n          }\r\n          //Special case - if one of the numbers is 0, return 0.\r\n          if (this.sign === 0 || decimal.sign === 0) {\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          //Special case - Multiplying a number by its own reciprocal yields +/- 1, no matter how large.\r\n          if (this.layer === decimal.layer && this.mag === -decimal.mag) {\r\n            return FC_NN(this.sign * decimal.sign, 0, 1);\r\n          }\r\n          var a;\r\n          var b;\r\n          //Which number is bigger in terms of its multiplicative distance from 1?\r\n          if (this.layer > decimal.layer || this.layer == decimal.layer && Math.abs(this.mag) > Math.abs(decimal.mag)) {\r\n            a = new Decimal(this);\r\n            b = new Decimal(decimal);\r\n          } else {\r\n            a = new Decimal(decimal);\r\n            b = new Decimal(this);\r\n          }\r\n          if (a.layer === 0 && b.layer === 0) {\r\n            return Decimal.fromNumber(a.sign * b.sign * a.mag * b.mag);\r\n          }\r\n          //Special case: If one of the numbers is layer 3 or higher or one of the numbers is 2+ layers bigger than the other, just take the bigger number.\r\n          if (a.layer >= 3 || a.layer - b.layer >= 2) {\r\n            return FC(a.sign * b.sign, a.layer, a.mag);\r\n          }\r\n          if (a.layer === 1 && b.layer === 0) {\r\n            return FC(a.sign * b.sign, 1, a.mag + Math.log10(b.mag));\r\n          }\r\n          if (a.layer === 1 && b.layer === 1) {\r\n            return FC(a.sign * b.sign, 1, a.mag + b.mag);\r\n          }\r\n          if (a.layer === 2 && b.layer === 1) {\r\n            var newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\r\n            return FC(a.sign * b.sign, newmag.layer + 1, newmag.sign * newmag.mag);\r\n          }\r\n          if (a.layer === 2 && b.layer === 2) {\r\n            var _newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\r\n            return FC(a.sign * b.sign, _newmag.layer + 1, _newmag.sign * _newmag.mag);\r\n          }\r\n          throw Error(\"Bad arguments to mul: \" + this + \", \" + value);\r\n        }\r\n        /**\r\n         * Multiplication: returns the product of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"multiply\",\r\n        value: function multiply(value) {\r\n          return this.mul(value);\r\n        }\r\n        /**\r\n         * Multiplication: returns the product of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"times\",\r\n        value: function times(value) {\r\n          return this.mul(value);\r\n        }\r\n        /**\r\n         * Division: returns the quotient of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"div\",\r\n        value: function div(value) {\r\n          var decimal = D(value);\r\n          return this.mul(decimal.recip());\r\n        }\r\n        /**\r\n         * Division: returns the quotient of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"divide\",\r\n        value: function divide(value) {\r\n          return this.div(value);\r\n        }\r\n        /**\r\n         * Division: returns the quotient of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"divideBy\",\r\n        value: function divideBy(value) {\r\n          return this.div(value);\r\n        }\r\n        /**\r\n         * Division: returns the quotient of 'this' and 'value'.\r\n         */\r\n      }, {\r\n        key: \"dividedBy\",\r\n        value: function dividedBy(value) {\r\n          return this.div(value);\r\n        }\r\n        /**\r\n         * Returns the reciprocal (1 / X) of the Decimal it's called on.\r\n         */\r\n      }, {\r\n        key: \"recip\",\r\n        value: function recip() {\r\n          if (this.mag === 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          } else if (this.mag === Number.POSITIVE_INFINITY) {\r\n            return FC_NN(0, 0, 0);\r\n          } else if (this.layer === 0) {\r\n            return FC(this.sign, 0, 1 / this.mag);\r\n          } else {\r\n            return FC(this.sign, this.layer, -this.mag);\r\n          }\r\n        }\r\n        /**\r\n         * Returns the reciprocal (1 / X) of the Decimal it's called on.\r\n         */\r\n      }, {\r\n        key: \"reciprocal\",\r\n        value: function reciprocal() {\r\n          return this.recip();\r\n        }\r\n        /**\r\n         * Returns the reciprocal (1 / X) of the Decimal it's called on.\r\n         */\r\n      }, {\r\n        key: \"reciprocate\",\r\n        value: function reciprocate() {\r\n          return this.recip();\r\n        }\r\n        /**\r\n         * Returns the remainder of 'this' divided by 'value': for example, 5 mod 2 = 1, because the remainder of 5 / 2 is 1.\r\n         * Uses the \"truncated division\" modulo, which is the same as JavaScript's native modulo operator (%)...\r\n         * unless 'floored' is true, in which case it uses the \"floored\" modulo, which is closer to how modulo works in number theory.\r\n         * These two forms of modulo are the same when only positive numbers are involved, but differ in how they work with negative numbers.\r\n         */\r\n        //Taken from OmegaNum.js, with a couple touch-ups\r\n      }, {\r\n        key: \"mod\",\r\n        value: function mod(value) {\r\n          var floored = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          var vd = D(value);\r\n          var decimal = vd.abs();\r\n          if (this.eq(Decimal.dZero) || decimal.eq(Decimal.dZero)) return FC_NN(0, 0, 0);\r\n          if (floored) {\r\n            var absmod = this.abs().mod(decimal);\r\n            if (this.sign == -1 != (vd.sign == -1)) absmod = vd.abs().sub(absmod);\r\n            return absmod.mul(vd.sign);\r\n          }\r\n          var num_this = this.toNumber();\r\n          var num_decimal = decimal.toNumber();\r\n          //Special case: To avoid precision issues, if both numbers are valid JS numbers, just call % on those\r\n          if (isFinite(num_this) && isFinite(num_decimal) && num_this != 0 && num_decimal != 0) {\r\n            return new Decimal(num_this % num_decimal);\r\n          }\r\n          if (this.sub(decimal).eq(this)) {\r\n            //decimal is too small to register to this\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          if (decimal.sub(this).eq(decimal)) {\r\n            //this is too small to register to decimal\r\n            return new Decimal(this);\r\n          }\r\n          if (this.sign == -1) return this.abs().mod(decimal).neg();\r\n          return this.sub(this.div(decimal).floor().mul(decimal));\r\n        }\r\n        /**\r\n         * Returns the remainder of 'this' divided by 'value': for example, 5 mod 2 = 1, because the remainder of 5 / 2 is 1.\r\n         * Uses the \"truncated division\" modulo, which is the same as JavaScript's native modulo operator (%)...\r\n         * unless 'floored' is true, in which case it uses the \"floored\" modulo, which is closer to how modulo works in number theory.\r\n         * These two forms of modulo are the same when only positive numbers are involved, but differ in how they work with negative numbers.\r\n         */\r\n      }, {\r\n        key: \"modulo\",\r\n        value: function modulo(value) {\r\n          var floored = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          return this.mod(value, floored);\r\n        }\r\n        /**\r\n         * Returns the remainder of 'this' divided by 'value': for example, 5 mod 2 = 1, because the remainder of 5 / 2 is 1.\r\n         * Uses the \"truncated division\" modulo, which is the same as JavaScript's native modulo operator (%)...\r\n         * unless 'floored' is true, in which case it uses the \"floored\" modulo, which is closer to how modulo works in number theory.\r\n         * These two forms of modulo are the same when only positive numbers are involved, but differ in how they work with negative numbers.\r\n         */\r\n      }, {\r\n        key: \"modular\",\r\n        value: function modular(value) {\r\n          var floored = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          return this.mod(value, floored);\r\n        }\r\n        /**\r\n         * Returns 1 if 'this' > 'value', returns -1 if 'this' < 'value', returns 0 if 'this' == 'value'.\r\n         */\r\n      }, {\r\n        key: \"cmp\",\r\n        value: function cmp(value) {\r\n          var decimal = D(value);\r\n          if (this.sign > decimal.sign) {\r\n            return 1;\r\n          }\r\n          if (this.sign < decimal.sign) {\r\n            return -1;\r\n          }\r\n          return this.sign * this.cmpabs(value);\r\n        }\r\n        /**\r\n         * Compares the absolute values of this and value.\r\n         * Returns 1 if |'this'| > |'value'|, returns -1 if |'this'| < |'value'|, returns 0 if |'this'| == |'value'|.\r\n         */\r\n      }, {\r\n        key: \"cmpabs\",\r\n        value: function cmpabs(value) {\r\n          var decimal = D(value);\r\n          var layera = this.mag > 0 ? this.layer : -this.layer;\r\n          var layerb = decimal.mag > 0 ? decimal.layer : -decimal.layer;\r\n          if (layera > layerb) {\r\n            return 1;\r\n          }\r\n          if (layera < layerb) {\r\n            return -1;\r\n          }\r\n          if (this.mag > decimal.mag) {\r\n            return 1;\r\n          }\r\n          if (this.mag < decimal.mag) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        /**\r\n         * Returns 1 if 'this' > 'value', returns -1 if 'this' < 'value', returns 0 if 'this' == 'value'.\r\n         */\r\n      }, {\r\n        key: \"compare\",\r\n        value: function compare(value) {\r\n          return this.cmp(value);\r\n        }\r\n        /**\r\n         * Returns true if the Decimal is an NaN value.\r\n         */\r\n      }, {\r\n        key: \"isNan\",\r\n        value: function isNan() {\r\n          return isNaN(this.sign) || isNaN(this.layer) || isNaN(this.mag);\r\n        }\r\n        /**\r\n         * Returns true if the Decimal is finite (by Decimal standards, not by floating point standards - a humongous Decimal like 10^^10^100 is still finite!)\r\n         */\r\n      }, {\r\n        key: \"isFinite\",\r\n        value: function (_isFinite2) {\r\n          function isFinite() {\r\n            return _isFinite2.apply(this, arguments);\r\n          }\r\n          isFinite.toString = function () {\r\n            return _isFinite2.toString();\r\n          };\r\n          return isFinite;\r\n        }(function () {\r\n          return isFinite(this.sign) && isFinite(this.layer) && isFinite(this.mag);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of ==. Returns true if 'this' and 'value' have equal values.\r\n         */)\r\n      }, {\r\n        key: \"eq\",\r\n        value: function eq(value) {\r\n          var decimal = D(value);\r\n          return this.sign === decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag;\r\n        }\r\n        /**\r\n         * Returns true if 'this' and 'value' have equal values.\r\n         */\r\n      }, {\r\n        key: \"equals\",\r\n        value: function equals(value) {\r\n          return this.eq(value);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of !=. Returns true if 'this' and 'value' do not have equal values.\r\n         */\r\n      }, {\r\n        key: \"neq\",\r\n        value: function neq(value) {\r\n          return !this.eq(value);\r\n        }\r\n        /**\r\n         * Returns true if 'this' and 'value' do not have equal values.\r\n         */\r\n      }, {\r\n        key: \"notEquals\",\r\n        value: function notEquals(value) {\r\n          return this.neq(value);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of <. Returns true if 'this' is less than 'value'.\r\n         */\r\n      }, {\r\n        key: \"lt\",\r\n        value: function lt(value) {\r\n          return this.cmp(value) === -1;\r\n        }\r\n        /**\r\n         * The Decimal equivalent of <=. Returns true if 'this' is less than or equal to 'value'.\r\n         */\r\n      }, {\r\n        key: \"lte\",\r\n        value: function lte(value) {\r\n          return !this.gt(value);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of >. Returns true if 'this' is greater than 'value'.\r\n         */\r\n      }, {\r\n        key: \"gt\",\r\n        value: function gt(value) {\r\n          return this.cmp(value) === 1;\r\n        }\r\n        /**\r\n         * The Decimal equivalent of >=. Returns true if 'this' is greater than or equal to 'value'.\r\n         */\r\n      }, {\r\n        key: \"gte\",\r\n        value: function gte(value) {\r\n          return !this.lt(value);\r\n        }\r\n        /**\r\n         * Returns whichever of 'this' and 'value' is higher.\r\n         */\r\n      }, {\r\n        key: \"max\",\r\n        value: function max(value) {\r\n          var decimal = D(value);\r\n          return this.lt(decimal) ? new Decimal(decimal) : new Decimal(this);\r\n        }\r\n        /**\r\n         * Returns whichever of 'this' and 'value' is lower.\r\n         */\r\n      }, {\r\n        key: \"min\",\r\n        value: function min(value) {\r\n          var decimal = D(value);\r\n          return this.gt(decimal) ? new Decimal(decimal) : new Decimal(this);\r\n        }\r\n        /**\r\n         * Returns whichever of 'this' and 'value' has a larger absolute value.\r\n         */\r\n      }, {\r\n        key: \"maxabs\",\r\n        value: function maxabs(value) {\r\n          var decimal = D(value);\r\n          return this.cmpabs(decimal) < 0 ? new Decimal(decimal) : new Decimal(this);\r\n        }\r\n        /**\r\n         * Returns whichever of 'this' and 'value' has a smaller absolute value.\r\n         */\r\n      }, {\r\n        key: \"minabs\",\r\n        value: function minabs(value) {\r\n          var decimal = D(value);\r\n          return this.cmpabs(decimal) > 0 ? new Decimal(decimal) : new Decimal(this);\r\n        }\r\n        /**\r\n         * A combination of minimum and maximum: the value returned by clamp is normally 'this', but it won't go below 'min' and it won't go above 'max'.\r\n         * Therefore, if 'this' < 'min', then 'min' is returned, and if 'this' > 'max', then 'max' is returned.\r\n         */\r\n      }, {\r\n        key: \"clamp\",\r\n        value: function clamp(min, max) {\r\n          return this.max(min).min(max);\r\n        }\r\n        /**\r\n         * Returns 'this', unless 'this' is less than 'min', in which case 'min' is returned.\r\n         */\r\n      }, {\r\n        key: \"clampMin\",\r\n        value: function clampMin(min) {\r\n          return this.max(min);\r\n        }\r\n        /**\r\n         * Returns 'this', unless 'this' is greater than 'max', in which case 'max' is returned.\r\n         */\r\n      }, {\r\n        key: \"clampMax\",\r\n        value: function clampMax(max) {\r\n          return this.min(max);\r\n        }\r\n        /**\r\n         * Returns 1 if 'this' is greater than 'value', returns -1 if 'this' is less than 'value', returns 0 if 'this' is equal to 'value'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"cmp_tolerance\",\r\n        value: function cmp_tolerance(value, tolerance) {\r\n          var decimal = D(value);\r\n          return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\r\n        }\r\n        /**\r\n         * Returns 1 if 'this' is greater than 'value', returns -1 if 'this' is less than 'value', returns 0 if 'this' is equal to 'value'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"compare_tolerance\",\r\n        value: function compare_tolerance(value, tolerance) {\r\n          return this.cmp_tolerance(value, tolerance);\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"eq_tolerance\",\r\n        value: function eq_tolerance(value, tolerance) {\r\n          var decimal = D(value); // https://stackoverflow.com/a/33024979\r\n          if (tolerance == null) {\r\n            tolerance = 1e-7;\r\n          }\r\n          //Numbers that are too far away are never close.\r\n          if (this.sign !== decimal.sign) {\r\n            return false;\r\n          }\r\n          if (Math.abs(this.layer - decimal.layer) > 1) {\r\n            return false;\r\n          }\r\n          // return abs(a-b) <= tolerance * max(abs(a), abs(b))\r\n          var magA = this.mag;\r\n          var magB = decimal.mag;\r\n          if (this.layer > decimal.layer) {\r\n            magB = f_maglog10(magB);\r\n          }\r\n          if (this.layer < decimal.layer) {\r\n            magA = f_maglog10(magA);\r\n          }\r\n          return Math.abs(magA - magB) <= tolerance * Math.max(Math.abs(magA), Math.abs(magB));\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"equals_tolerance\",\r\n        value: function equals_tolerance(value, tolerance) {\r\n          return this.eq_tolerance(value, tolerance);\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are not approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"neq_tolerance\",\r\n        value: function neq_tolerance(value, tolerance) {\r\n          return !this.eq_tolerance(value, tolerance);\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are not approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"notEquals_tolerance\",\r\n        value: function notEquals_tolerance(value, tolerance) {\r\n          return this.neq_tolerance(value, tolerance);\r\n        }\r\n        /**\r\n         * Returns true if 'this' is less than 'value'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"lt_tolerance\",\r\n        value: function lt_tolerance(value, tolerance) {\r\n          var decimal = D(value);\r\n          return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\r\n        }\r\n        /**\r\n         * Returns true if 'this' is less than or equal to 'value'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"lte_tolerance\",\r\n        value: function lte_tolerance(value, tolerance) {\r\n          var decimal = D(value);\r\n          return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\r\n        }\r\n        /**\r\n         * Returns true if 'this' is greater than 'value'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"gt_tolerance\",\r\n        value: function gt_tolerance(value, tolerance) {\r\n          var decimal = D(value);\r\n          return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\r\n        }\r\n        /**\r\n         * Returns true if 'this' is greater than or equal to 'value'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"gte_tolerance\",\r\n        value: function gte_tolerance(value, tolerance) {\r\n          var decimal = D(value);\r\n          return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\r\n        }\r\n        /**\r\n         * \"Positive log10\": Returns the base-10 logarithm of nonnegative Decimals, but returns 0 for negative Decimals.\r\n         */\r\n      }, {\r\n        key: \"pLog10\",\r\n        value: function pLog10() {\r\n          if (this.lt(Decimal.dZero)) {\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          return this.log10();\r\n        }\r\n        /**\r\n         * Returns the base-10 logarithm of abs('this').\r\n         */\r\n      }, {\r\n        key: \"absLog10\",\r\n        value: function absLog10() {\r\n          if (this.sign === 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          } else if (this.layer > 0) {\r\n            return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\r\n          } else {\r\n            return FC(1, 0, Math.log10(this.mag));\r\n          }\r\n        }\r\n        /**\r\n         * Base-10 logarithm: returns the Decimal X such that 10^X = 'this'.\r\n         * For numbers above layer 0, this is equivalent to subtracting 1 from layer and normalizing.\r\n         */\r\n      }, {\r\n        key: \"log10\",\r\n        value: function log10() {\r\n          if (this.sign <= 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          } else if (this.layer > 0) {\r\n            return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\r\n          } else {\r\n            return FC(this.sign, 0, Math.log10(this.mag));\r\n          }\r\n        }\r\n        /**\r\n         * Logarithms are one of the inverses of exponentiation: this function finds the Decimal X such that base^X = 'this'.\r\n         */\r\n      }, {\r\n        key: \"log\",\r\n        value: function log(base) {\r\n          base = D(base);\r\n          if (this.sign <= 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          if (base.sign <= 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          if (base.sign === 1 && base.layer === 0 && base.mag === 1) {\r\n            return new Decimal(Decimal.dNaN);\r\n          } else if (this.layer === 0 && base.layer === 0) {\r\n            return FC(this.sign, 0, Math.log(this.mag) / Math.log(base.mag));\r\n          }\r\n          return Decimal.div(this.log10(), base.log10());\r\n        }\r\n        /**\r\n         * Base-2 logarithm: returns the Decimal X such that 2^X = 'this'.\r\n         */\r\n      }, {\r\n        key: \"log2\",\r\n        value: function log2() {\r\n          if (this.sign <= 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          } else if (this.layer === 0) {\r\n            return FC(this.sign, 0, Math.log2(this.mag));\r\n          } else if (this.layer === 1) {\r\n            return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 3.321928094887362); //log2(10)\r\n          } else if (this.layer === 2) {\r\n            return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.5213902276543247); //-log10(log10(2))\r\n          } else {\r\n            return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\r\n          }\r\n        }\r\n        /**\r\n         * Base-e logarithm, also known as the \"natural\" logarithm: returns the Decimal X such that e^X = 'this'.\r\n         */\r\n      }, {\r\n        key: \"ln\",\r\n        value: function ln() {\r\n          if (this.sign <= 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          } else if (this.layer === 0) {\r\n            return FC(this.sign, 0, Math.log(this.mag));\r\n          } else if (this.layer === 1) {\r\n            return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 2.302585092994046); //ln(10)\r\n          } else if (this.layer === 2) {\r\n            return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.36221568869946325); //log10(log10(e))\r\n          } else {\r\n            return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\r\n          }\r\n        }\r\n        /**\r\n         * Logarithms are one of the inverses of exponentiation: this function finds the Decimal X such that base^X = 'this'.\r\n         */\r\n      }, {\r\n        key: \"logarithm\",\r\n        value: function logarithm(base) {\r\n          return this.log(base);\r\n        }\r\n        /**\r\n         * Exponentiation: Returns the result of 'this' ^ 'value' (often written as 'this' ** 'value' in programming languages).\r\n         */\r\n      }, {\r\n        key: \"pow\",\r\n        value: function pow(value) {\r\n          var decimal = D(value);\r\n          var a = new Decimal(this);\r\n          var b = new Decimal(decimal);\r\n          //special case: if a is 0, then return 0 (UNLESS b is 0, then return 1)\r\n          if (a.sign === 0) {\r\n            return b.eq(0) ? FC_NN(1, 0, 1) : a;\r\n          }\r\n          //special case: if a is 1, then return 1\r\n          if (a.sign === 1 && a.layer === 0 && a.mag === 1) {\r\n            return a;\r\n          }\r\n          //special case: if b is 0, then return 1\r\n          if (b.sign === 0) {\r\n            return FC_NN(1, 0, 1);\r\n          }\r\n          //special case: if b is 1, then return a\r\n          if (b.sign === 1 && b.layer === 0 && b.mag === 1) {\r\n            return a;\r\n          }\r\n          var result = a.absLog10().mul(b).pow10();\r\n          if (this.sign === -1) {\r\n            if (Math.abs(b.toNumber() % 2) % 2 === 1) {\r\n              return result.neg();\r\n            } else if (Math.abs(b.toNumber() % 2) % 2 === 0) {\r\n              return result;\r\n            }\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          return result;\r\n        }\r\n        /**\r\n         * Raises 10 to the power of 'this', i.e. (10^'this'). For positive numbers above 1, this is equivalent to adding 1 to layer and normalizing.\r\n         */\r\n      }, {\r\n        key: \"pow10\",\r\n        value: function pow10() {\r\n          /*\r\n          There are four cases we need to consider:\r\n          1) positive sign, positive mag (e15, ee15): +1 layer (e.g. 10^15 becomes e15, 10^e15 becomes ee15)\r\n          2) negative sign, positive mag (-e15, -ee15): +1 layer but sign and mag sign are flipped (e.g. 10^-15 becomes e-15, 10^-e15 becomes ee-15)\r\n          3) positive sign, negative mag (e-15, ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n          4) negative sign, negative mag (-e-15, -ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n          */\r\n          if (this.eq(Decimal.dInf)) {\r\n            return new Decimal(Decimal.dInf);\r\n          }\r\n          if (this.eq(Decimal.dNegInf)) {\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          if (!Number.isFinite(this.layer) || !Number.isFinite(this.mag)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          var a = new Decimal(this);\r\n          //handle layer 0 case - if no precision is lost just use Math.pow, else promote one layer\r\n          if (a.layer === 0) {\r\n            var newmag = Math.pow(10, a.sign * a.mag);\r\n            if (Number.isFinite(newmag) && Math.abs(newmag) >= 0.1) {\r\n              return FC(1, 0, newmag);\r\n            } else {\r\n              if (a.sign === 0) {\r\n                return FC_NN(1, 0, 1);\r\n              } else {\r\n                a = FC_NN(a.sign, a.layer + 1, Math.log10(a.mag));\r\n              }\r\n            }\r\n          }\r\n          //handle all 4 layer 1+ cases individually\r\n          if (a.sign > 0 && a.mag >= 0) {\r\n            return FC(a.sign, a.layer + 1, a.mag);\r\n          }\r\n          if (a.sign < 0 && a.mag >= 0) {\r\n            return FC(-a.sign, a.layer + 1, -a.mag);\r\n          }\r\n          //both the negative mag cases are identical: one +/- rounding error\r\n          return FC_NN(1, 0, 1);\r\n        }\r\n        /**\r\n         * Exponentiation: Returns the result of 'value' ^ 'this' (often written as 'value' ** 'this' in programming languages).\r\n         */\r\n      }, {\r\n        key: \"pow_base\",\r\n        value: function pow_base(value) {\r\n          return D(value).pow(this);\r\n        }\r\n        /**\r\n         * Roots are one of the inverses of exponentiation: this function finds the Decimal X such that X ^ 'value' = 'this'.\r\n         * Equivalent to 'this' ^ (1 / 'value'), which is written here as this.pow(value.recip()).\r\n         */\r\n      }, {\r\n        key: \"root\",\r\n        value: function root(value) {\r\n          var decimal = D(value);\r\n          if (this.lt(0) && decimal.mod(2, true).eq(1)) return this.neg().root(decimal).neg();\r\n          return this.pow(decimal.recip());\r\n        }\r\n        /**\r\n         * For positive integers, X factorial (written as X!) equals X * (X - 1) * (X - 2) *... * 3 * 2 * 1. 0! equals 1.\r\n         * This can be extended to real numbers (except for negative integers) via the gamma function, which is what this function does.\r\n         */\r\n      }, {\r\n        key: \"factorial\",\r\n        value: function factorial() {\r\n          if (this.mag < 0) {\r\n            return this.add(1).gamma();\r\n          } else if (this.layer === 0) {\r\n            return this.add(1).gamma();\r\n          } else if (this.layer === 1) {\r\n            return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\r\n          } else {\r\n            return Decimal.exp(this);\r\n          }\r\n        }\r\n        /**\r\n         * The gamma function extends the idea of factorials to non-whole numbers using some calculus.\r\n         * Gamma(x) is defined as the integral of t^(x-1) * e^-t dt from t = 0 to t = infinity,\r\n         * and gamma(x) = (x - 1)! for nonnegative integer x, so the factorial for non-whole numbers is defined using the gamma function.\r\n         */\r\n        //from HyperCalc source code\r\n      }, {\r\n        key: \"gamma\",\r\n        value: function gamma() {\r\n          if (this.mag < 0) {\r\n            return this.recip();\r\n          } else if (this.layer === 0) {\r\n            if (this.lt(FC_NN(1, 0, 24))) {\r\n              return Decimal.fromNumber(f_gamma(this.sign * this.mag));\r\n            }\r\n            var t = this.mag - 1;\r\n            var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\r\n            l = l + (t + 0.5) * Math.log(t);\r\n            l = l - t;\r\n            var n2 = t * t;\r\n            var np = t;\r\n            var lm = 12 * np;\r\n            var adj = 1 / lm;\r\n            var l2 = l + adj;\r\n            if (l2 === l) {\r\n              return Decimal.exp(l);\r\n            }\r\n            l = l2;\r\n            np = np * n2;\r\n            lm = 360 * np;\r\n            adj = 1 / lm;\r\n            l2 = l - adj;\r\n            if (l2 === l) {\r\n              return Decimal.exp(l);\r\n            }\r\n            l = l2;\r\n            np = np * n2;\r\n            lm = 1260 * np;\r\n            var lt = 1 / lm;\r\n            l = l + lt;\r\n            np = np * n2;\r\n            lm = 1680 * np;\r\n            lt = 1 / lm;\r\n            l = l - lt;\r\n            return Decimal.exp(l);\r\n          } else if (this.layer === 1) {\r\n            return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\r\n          } else {\r\n            return Decimal.exp(this);\r\n          }\r\n        }\r\n        /**\r\n         * Returns the natural logarithm of Gamma('this').\r\n         */\r\n      }, {\r\n        key: \"lngamma\",\r\n        value: function lngamma() {\r\n          return this.gamma().ln();\r\n        }\r\n        /**\r\n         * Base-e exponentiation: returns e^'this'.\r\n         */\r\n      }, {\r\n        key: \"exp\",\r\n        value: function exp() {\r\n          if (this.mag < 0) {\r\n            return FC_NN(1, 0, 1);\r\n          }\r\n          if (this.layer === 0 && this.mag <= 709.7) {\r\n            return Decimal.fromNumber(Math.exp(this.sign * this.mag));\r\n          } else if (this.layer === 0) {\r\n            return FC(1, 1, this.sign * Math.log10(Math.E) * this.mag);\r\n          } else if (this.layer === 1) {\r\n            return FC(1, 2, this.sign * (Math.log10(0.4342944819032518) + this.mag));\r\n          } else {\r\n            return FC(1, this.layer + 1, this.sign * this.mag);\r\n          }\r\n        }\r\n        /**\r\n         * Squaring a number means multiplying it by itself, a.k.a. raising it to the second power.\r\n         */\r\n      }, {\r\n        key: \"sqr\",\r\n        value: function sqr() {\r\n          return this.pow(2);\r\n        }\r\n        /**\r\n         * Square root: finds the Decimal X such that X * X, a.k.a X^2, equals 'this'. Equivalent to X^(1/2).\r\n         */\r\n      }, {\r\n        key: \"sqrt\",\r\n        value: function sqrt() {\r\n          if (this.layer === 0) {\r\n            return Decimal.fromNumber(Math.sqrt(this.sign * this.mag));\r\n          } else if (this.layer === 1) {\r\n            return FC(1, 2, Math.log10(this.mag) - 0.3010299956639812);\r\n          } else {\r\n            var result = Decimal.div(FC_NN(this.sign, this.layer - 1, this.mag), FC_NN(1, 0, 2));\r\n            result.layer += 1;\r\n            result.normalize();\r\n            return result;\r\n          }\r\n        }\r\n        /**\r\n         * Cubing a number means raising it to the third power.\r\n         */\r\n      }, {\r\n        key: \"cube\",\r\n        value: function cube() {\r\n          return this.pow(3);\r\n        }\r\n        /**\r\n         * Cube root: finds the Decimal X such that X^3 equals 'this'. Equivalent to X^(1/3).\r\n         */\r\n      }, {\r\n        key: \"cbrt\",\r\n        value: function cbrt() {\r\n          if (this.lt(0)) return this.neg().pow(1 / 3).neg();\r\n          return this.pow(1 / 3);\r\n        }\r\n        /**\r\n         *\r\n         * Tetration: The result of exponentiating 'this' to 'this' 'height' times in a row.  https://en.wikipedia.org/wiki/Tetration\r\n         *\r\n         * If payload != 1, then this is 'iterated exponentiation', the result of exping 'payload' to base 'this' 'height' times. https://andydude.github.io/tetration/archives/tetration2/ident.html\r\n         *\r\n         * Works with negative and positive real heights. Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"tetrate\",\r\n        value: function tetrate() {\r\n          var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\r\n          var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          //x^^1 == x\r\n          if (height === 1) {\r\n            return Decimal.pow(this, payload);\r\n          }\r\n          //x^^0 == 1\r\n          if (height === 0) {\r\n            return new Decimal(payload);\r\n          }\r\n          //1^^x == 1\r\n          if (this.eq(Decimal.dOne)) {\r\n            return FC_NN(1, 0, 1);\r\n          }\r\n          //-1^^x == -1\r\n          if (this.eq(-1)) {\r\n            return Decimal.pow(this, payload);\r\n          }\r\n          if (height === Number.POSITIVE_INFINITY) {\r\n            var this_num = this.toNumber();\r\n            //within the convergence range?\r\n            if (this_num <= 1.44466786100976613366 && this_num >= 0.06598803584531253708) {\r\n              var negln = Decimal.ln(this).neg();\r\n              //For bases above 1, b^x = x has two solutions. The lower solution is a stable equilibrium, the upper solution is an unstable equilibrium.\r\n              var lower = negln.lambertw().div(negln);\r\n              // However, if the base is below 1, there's only the stable equilibrium solution.\r\n              if (this_num < 1) return lower;\r\n              var upper = negln.lambertw(false).div(negln);\r\n              //hotfix for the very edge of the number range not being handled properly\r\n              if (this_num > 1.444667861009099) {\r\n                lower = upper = Decimal.fromNumber(Math.E);\r\n              }\r\n              payload = D(payload);\r\n              if (payload.eq(upper)) return upper;else if (payload.lt(upper)) return lower;else return new Decimal(Decimal.dInf);\r\n            } else if (this_num > 1.44466786100976613366) {\r\n              //explodes to infinity\r\n              return new Decimal(Decimal.dInf);\r\n            } else {\r\n              //0.06598803584531253708 > this_num >= 0: never converges\r\n              //this_num < 0: quickly becomes a complex number\r\n              return new Decimal(Decimal.dNaN);\r\n            }\r\n          }\r\n          //0^^x oscillates if we define 0^0 == 1 (which in javascript land we do), since then 0^^1 is 0, 0^^2 is 1, 0^^3 is 0, etc. payload is ignored\r\n          //using the linear approximation for height (TODO: don't know a better way to calculate it ATM, but it wouldn't surprise me if it's just NaN)\r\n          if (this.eq(Decimal.dZero)) {\r\n            var result = Math.abs((height + 1) % 2);\r\n            if (result > 1) {\r\n              result = 2 - result;\r\n            }\r\n            return Decimal.fromNumber(result);\r\n          }\r\n          if (height < 0) {\r\n            return Decimal.iteratedlog(payload, this, -height, linear);\r\n          }\r\n          payload = new Decimal(payload);\r\n          var oldheight = height;\r\n          height = Math.trunc(height);\r\n          var fracheight = oldheight - height;\r\n          if (this.gt(Decimal.dZero) && (this.lt(1) || this.lte(1.44466786100976613366) && payload.lte(Decimal.ln(this).neg().lambertw(false).div(Decimal.ln(this).neg()))) && (oldheight > 10000 || !linear)) {\r\n            //similar to 0^^n, flip-flops between two values, converging slowly (or if it's below 0.06598803584531253708, never). So once again, the fractional part at the beginning will be a linear approximation (TODO: again pending knowledge of how to approximate better, although tbh I think it should in reality just be NaN)\r\n            var limitheight = Math.min(10000, height);\r\n            if (payload.eq(Decimal.dOne)) payload = this.pow(fracheight);else if (this.lt(1)) payload = payload.pow(1 - fracheight).mul(this.pow(payload).pow(fracheight));else payload = payload.layeradd(fracheight, this);\r\n            for (var i = 0; i < limitheight; ++i) {\r\n              var old_payload = payload;\r\n              payload = this.pow(payload);\r\n              //stop early if we converge\r\n              if (old_payload.eq(payload)) {\r\n                return payload;\r\n              }\r\n            }\r\n            if (oldheight > 10000 && Math.ceil(oldheight) % 2 == 1) {\r\n              return this.pow(payload);\r\n            }\r\n            return payload;\r\n          }\r\n          //TODO: base < 0, but it's hard for me to reason about (probably all non-integer heights are NaN automatically?)\r\n          if (fracheight !== 0) {\r\n            if (payload.eq(Decimal.dOne)) {\r\n              //If (linear), use linear approximation even for bases <= 10\r\n              //TODO: for bases above 10, revert to old linear approximation until I can think of something better\r\n              if (this.gt(10) || linear) {\r\n                payload = this.pow(fracheight);\r\n              } else {\r\n                payload = Decimal.fromNumber(Decimal.tetrate_critical(this.toNumber(), fracheight));\r\n                //TODO: until the critical section grid can handle numbers below 2, scale them to the base\r\n                //TODO: maybe once the critical section grid has very large bases, this math can be appropriate for them too? I'll think about it\r\n                if (this.lt(2)) {\r\n                  payload = payload.sub(1).mul(this.minus(1)).plus(1);\r\n                }\r\n              }\r\n            } else {\r\n              if (this.eq(10)) {\r\n                payload = payload.layeradd10(fracheight, linear);\r\n              } else if (this.lt(1)) {\r\n                payload = payload.pow(1 - fracheight).mul(this.pow(payload).pow(fracheight));\r\n              } else {\r\n                payload = payload.layeradd(fracheight, this, linear);\r\n              }\r\n            }\r\n          }\r\n          for (var _i = 0; _i < height; ++_i) {\r\n            payload = this.pow(payload);\r\n            //bail if we're NaN\r\n            if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\r\n              return payload.normalize();\r\n            }\r\n            //shortcut\r\n            if (payload.layer - this.layer > 3) {\r\n              return FC_NN(payload.sign, payload.layer + (height - _i - 1), payload.mag);\r\n            }\r\n            //give up after 10000 iterations if nothing is happening\r\n            if (_i > 10000) {\r\n              return payload;\r\n            }\r\n          }\r\n          return payload;\r\n        }\r\n        /**\r\n         * Iterated exponentiation, the result of exping 'payload' to base 'this' 'height' times. https://andydude.github.io/tetration/archives/tetration2/ident.html\r\n         *\r\n         * Works with negative and positive real heights. Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         *\r\n         * Identical to tetrate.\r\n         */\r\n      }, {\r\n        key: \"iteratedexp\",\r\n        value: function iteratedexp() {\r\n          var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\r\n          var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          return this.tetrate(height, payload, linear);\r\n        }\r\n        /**\r\n         * iterated log/repeated log: The result of applying log(base) 'times' times in a row. Approximately equal to subtracting 'times' from the number's slog representation. Equivalent to tetrating to a negative height.\r\n         *\r\n         * Works with negative and positive real heights. Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"iteratedlog\",\r\n        value: function iteratedlog() {\r\n          var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\r\n          var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          if (times < 0) {\r\n            return Decimal.tetrate(base, -times, this, linear);\r\n          }\r\n          base = D(base);\r\n          var result = Decimal.fromDecimal(this);\r\n          var fulltimes = times;\r\n          times = Math.trunc(times);\r\n          var fraction = fulltimes - times;\r\n          if (result.layer - base.layer > 3) {\r\n            var layerloss = Math.min(times, result.layer - base.layer - 3);\r\n            times -= layerloss;\r\n            result.layer -= layerloss;\r\n          }\r\n          for (var i = 0; i < times; ++i) {\r\n            result = result.log(base);\r\n            //bail if we're NaN\r\n            if (!isFinite(result.layer) || !isFinite(result.mag)) {\r\n              return result.normalize();\r\n            }\r\n            //give up after 10000 iterations if nothing is happening\r\n            if (i > 10000) {\r\n              return result;\r\n            }\r\n          }\r\n          //handle fractional part\r\n          if (fraction > 0 && fraction < 1) {\r\n            if (base.eq(10)) {\r\n              result = result.layeradd10(-fraction, linear);\r\n            } else {\r\n              //I have no clue what a fractional times on a base below 1 should even mean, so I'm not going to bother - just let it be NaN (TODO: come up with what the answer actually should be)\r\n              result = result.layeradd(-fraction, base, linear);\r\n            }\r\n          }\r\n          return result;\r\n        }\r\n        /**\r\n         * Super-logarithm, one of tetration's inverses, tells you what size power tower you'd have to tetrate 'base' to to get 'this'. https://en.wikipedia.org/wiki/Super-logarithm\r\n         *\r\n         * By definition, will never be higher than 1.8e308 in break_eternity.js, since a power tower 1.8e308 numbers tall is the largest representable number.\r\n         *\r\n         * Accepts a number of iterations (default is 100), and use binary search to, after making an initial guess, hone in on the true value, assuming tetration as the ground truth.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"slog\",\r\n        value: function slog() {\r\n          var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\r\n          var iterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          var step_size = 0.001;\r\n          var has_changed_directions_once = false;\r\n          var previously_rose = false;\r\n          var result = this.slog_internal(base, linear).toNumber();\r\n          for (var i = 1; i < iterations; ++i) {\r\n            var new_decimal = new Decimal(base).tetrate(result, Decimal.dOne, linear);\r\n            var currently_rose = new_decimal.gt(this);\r\n            if (i > 1) {\r\n              if (previously_rose != currently_rose) {\r\n                has_changed_directions_once = true;\r\n              }\r\n            }\r\n            previously_rose = currently_rose;\r\n            if (has_changed_directions_once) {\r\n              step_size /= 2;\r\n            } else {\r\n              step_size *= 2;\r\n            }\r\n            step_size = Math.abs(step_size) * (currently_rose ? -1 : 1);\r\n            result += step_size;\r\n            if (step_size === 0) {\r\n              break;\r\n            }\r\n          }\r\n          return Decimal.fromNumber(result);\r\n        }\r\n      }, {\r\n        key: \"slog_internal\",\r\n        value: function slog_internal() {\r\n          var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\r\n          var linear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          base = D(base);\r\n          //special cases:\r\n          //slog base 0 or lower is NaN\r\n          if (base.lte(Decimal.dZero)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //slog base 1 is NaN\r\n          if (base.eq(Decimal.dOne)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //need to handle these small, wobbling bases specially\r\n          if (base.lt(Decimal.dOne)) {\r\n            if (this.eq(Decimal.dOne)) {\r\n              return FC_NN(0, 0, 0);\r\n            }\r\n            if (this.eq(Decimal.dZero)) {\r\n              return FC_NN(-1, 0, 1);\r\n            }\r\n            //0 < this < 1: ambiguous (happens multiple times)\r\n            //this < 0: impossible (as far as I can tell)\r\n            //this > 1: partially complex (http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html base 0.25 for proof)\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //slog_n(0) is -1\r\n          if (this.mag < 0 || this.eq(Decimal.dZero)) {\r\n            return FC_NN(-1, 0, 1);\r\n          }\r\n          if (base.lt(1.44466786100976613366)) {\r\n            var negln = Decimal.ln(base).neg();\r\n            var infTower = negln.lambertw().div(negln);\r\n            if (this.eq(infTower)) return new Decimal(Decimal.dInf);\r\n            if (this.gt(infTower)) return new Decimal(Decimal.dNaN);\r\n          }\r\n          var result = 0;\r\n          var copy = Decimal.fromDecimal(this);\r\n          if (copy.layer - base.layer > 3) {\r\n            var layerloss = copy.layer - base.layer - 3;\r\n            result += layerloss;\r\n            copy.layer -= layerloss;\r\n          }\r\n          for (var i = 0; i < 100; ++i) {\r\n            if (copy.lt(Decimal.dZero)) {\r\n              copy = Decimal.pow(base, copy);\r\n              result -= 1;\r\n            } else if (copy.lte(Decimal.dOne)) {\r\n              if (linear) return Decimal.fromNumber(result + copy.toNumber() - 1);else return Decimal.fromNumber(result + Decimal.slog_critical(base.toNumber(), copy.toNumber()));\r\n            } else {\r\n              result += 1;\r\n              copy = Decimal.log(copy, base);\r\n            }\r\n          }\r\n          return Decimal.fromNumber(result);\r\n        }\r\n        //background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\r\n      }, {\r\n        key: \"layeradd10\",\r\n        value:\r\n        /**\r\n         * Adds/removes layers from a Decimal, even fractional layers (e.g. its slog10 representation). Very similar to tetrate base 10 and iterated log base 10.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n        //Moved this over to use the same critical section as tetrate/slog.\r\n        function layeradd10(diff) {\r\n          var linear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          diff = Decimal.fromValue_noAlloc(diff).toNumber();\r\n          var result = Decimal.fromDecimal(this);\r\n          if (diff >= 1) {\r\n            //bug fix: if result is very smol (mag < 0, layer > 0) turn it into 0 first\r\n            if (result.mag < 0 && result.layer > 0) {\r\n              result.sign = 0;\r\n              result.mag = 0;\r\n              result.layer = 0;\r\n            } else if (result.sign === -1 && result.layer == 0) {\r\n              //bug fix - for stuff like -3.layeradd10(1) we need to move the sign to the mag\r\n              result.sign = 1;\r\n              result.mag = -result.mag;\r\n            }\r\n            var layeradd = Math.trunc(diff);\r\n            diff -= layeradd;\r\n            result.layer += layeradd;\r\n          }\r\n          if (diff <= -1) {\r\n            var _layeradd = Math.trunc(diff);\r\n            diff -= _layeradd;\r\n            result.layer += _layeradd;\r\n            if (result.layer < 0) {\r\n              for (var i = 0; i < 100; ++i) {\r\n                result.layer++;\r\n                result.mag = Math.log10(result.mag);\r\n                if (!isFinite(result.mag)) {\r\n                  //another bugfix: if we hit -Infinity mag, then we should return negative infinity, not 0. 0.layeradd10(-1) h its this\r\n                  if (result.sign === 0) {\r\n                    result.sign = 1;\r\n                  }\r\n                  //also this, for 0.layeradd10(-2)\r\n                  if (result.layer < 0) {\r\n                    result.layer = 0;\r\n                  }\r\n                  return result.normalize();\r\n                }\r\n                if (result.layer >= 0) {\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          while (result.layer < 0) {\r\n            result.layer++;\r\n            result.mag = Math.log10(result.mag);\r\n          }\r\n          //bugfix: before we normalize: if we started with 0, we now need to manually fix a layer ourselves!\r\n          if (result.sign === 0) {\r\n            result.sign = 1;\r\n            if (result.mag === 0 && result.layer >= 1) {\r\n              result.layer -= 1;\r\n              result.mag = 1;\r\n            }\r\n          }\r\n          result.normalize();\r\n          //layeradd10: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 10 and iterated log base 10. Also equivalent to adding a fractional amount to the number's layer in its break_eternity.js representation.\r\n          if (diff !== 0) {\r\n            return result.layeradd(diff, 10, linear); //safe, only calls positive height 1 payload tetration, slog and log\r\n          }\r\n  \r\n          return result;\r\n        }\r\n        /**\r\n         * layeradd: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 'base' and iterated log base 'base'.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"layeradd\",\r\n        value: function layeradd(diff, base) {\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          var baseD = D(base);\r\n          if (baseD.gt(1) && baseD.lte(1.44466786100976613366)) {\r\n            var excessSlog = Decimal.excess_slog(this, base, linear);\r\n            var _slogthis = excessSlog[0].toNumber();\r\n            var range = excessSlog[1];\r\n            var _slogdest = _slogthis + diff;\r\n            var negln = Decimal.ln(base).neg();\r\n            var lower = negln.lambertw().div(negln);\r\n            var upper = negln.lambertw(false).div(negln);\r\n            var slogzero = Decimal.dOne;\r\n            if (range == 1) slogzero = lower.mul(upper).sqrt();else if (range == 2) slogzero = upper.mul(2);\r\n            var slogone = baseD.pow(slogzero);\r\n            var wholeheight = Math.floor(_slogdest);\r\n            var fracheight = _slogdest - wholeheight;\r\n            var towertop = slogzero.pow(1 - fracheight).mul(slogone.pow(fracheight));\r\n            return Decimal.tetrate(baseD, wholeheight, towertop, linear); //wholediff is a whole number so this is safe even if it ends up calling iteratedlog\r\n          }\r\n  \r\n          var slogthis = this.slog(base, 100, linear).toNumber();\r\n          var slogdest = slogthis + diff;\r\n          if (slogdest >= 0) {\r\n            return Decimal.tetrate(base, slogdest, Decimal.dOne, linear);\r\n          } else if (!Number.isFinite(slogdest)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          } else if (slogdest >= -1) {\r\n            return Decimal.log(Decimal.tetrate(base, slogdest + 1, Decimal.dOne, linear), base);\r\n          } else {\r\n            return Decimal.log(Decimal.log(Decimal.tetrate(base, slogdest + 2, Decimal.dOne, linear), base), base);\r\n          }\r\n        }\r\n        //Apparently having something be private but not static breaks everything\r\n        /**\r\n         * A strange version of slog for bases between 1 and e^1/e which can handle values above base^^Infinity.\r\n         * Returns a pair of a Decimal and a number, with the number always being 0, 1, or 2. The number indicates what range we're in:\r\n         * 0 means we're below the lower solution of b^x = x, and so the normal slog is used.\r\n         * 1 means we're between the two solutions of b^x = x, with the geometric mean of the two solutions arbitrarily chosen to be the value with a slog of 0.\r\n         * 2 means we're above the upper solution of b^x = x, with (upper solution * 2) arbitrarily chosen to be the value with a slog of 0.\r\n         *\r\n         * The values returned by this function don't really have much mathematical meaning, but the difference between two values does.\r\n         * Therefore, this function is kept private, but it's used for layeradd on these small bases.\r\n         */\r\n      }, {\r\n        key: \"lambertw\",\r\n        value:\r\n        /**\r\n         * The Lambert W function, also called the omega function or product logarithm, is the solution W(x) === x*e^x.\r\n         * https://en.wikipedia.org/wiki/Lambert_W_function\r\n         *\r\n         * This is a multi-valued function in the complex plane, but only two branches matter for real numbers: the \"principal branch\" W0, and the \"non-principal branch\" W_-1.\r\n         * W_0 works for any number >= -1/e, but W_-1 only works for nonpositive numbers >= -1/e.\r\n         * The \"principal\" parameter, which is true by default, decides which branch we're looking for: W_0 is used if principal is true, W_-1 is used if principal is false.\r\n         */\r\n        //Some special values, for testing: https://en.wikipedia.org/wiki/Lambert_W_function#Special_values\r\n        function lambertw() {\r\n          var principal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\r\n          if (this.lt(-0.3678794411710499)) {\r\n            return new Decimal(Decimal.dNaN); //complex\r\n          } else if (principal) {\r\n            if (this.abs().lt(\"1e-300\")) return new Decimal(this);else if (this.mag < 0) {\r\n              return Decimal.fromNumber(f_lambertw(this.toNumber()));\r\n            } else if (this.layer === 0) {\r\n              return Decimal.fromNumber(f_lambertw(this.sign * this.mag));\r\n            } else if (this.lt(\"eee15\")) {\r\n              return d_lambertw(this);\r\n            } else {\r\n              // Numbers this large would sometimes fail to converge using d_lambertw, and at this size this.ln() is close enough\r\n              return this.ln();\r\n            }\r\n          } else {\r\n            if (this.sign === 1) {\r\n              return new Decimal(Decimal.dNaN); //complex\r\n            }\r\n  \r\n            if (this.layer === 0) {\r\n              return Decimal.fromNumber(f_lambertw(this.sign * this.mag, 1e-10, false));\r\n            } else if (this.layer == 1) {\r\n              return d_lambertw(this, 1e-10, false);\r\n            } else {\r\n              return this.neg().recip().lambertw().neg();\r\n            }\r\n          }\r\n        }\r\n        /**\r\n         * The super square-root function - what number, tetrated to height 2, equals 'this'? https://en.wikipedia.org/wiki/Tetration#Super-root\r\n         */\r\n      }, {\r\n        key: \"ssqrt\",\r\n        value: function ssqrt() {\r\n          return this.linear_sroot(2);\r\n        }\r\n        /**\r\n         * Super-root, one of tetration's inverses - what number, tetrated to height 'degree', equals 'this'? https://en.wikipedia.org/wiki/Tetration#Super-root\r\n         *\r\n         * Only works with the linear approximation of tetration, as starting with analytic and then switching to linear would result in inconsistent behavior for super-roots.\r\n         * This only matters for non-integer degrees.\r\n         */\r\n        //Another reason this doesn't support analytic approximation because I don't know the structure of non-linear tetrations for inputs < 1\r\n        //TODO: Optimize this like how slog is optimized (if it isn't already)\r\n      }, {\r\n        key: \"linear_sroot\",\r\n        value: function linear_sroot(degree) {\r\n          //1st-degree super root just returns its input\r\n          if (degree == 1) {\r\n            return this;\r\n          }\r\n          if (this.eq(Decimal.dInf)) {\r\n            return new Decimal(Decimal.dInf);\r\n          }\r\n          if (!this.isFinite()) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //Using linear approximation, x^^n = x^n if 0 < n < 1\r\n          if (degree > 0 && degree < 1) {\r\n            return this.root(degree);\r\n          }\r\n          //Using the linear approximation, there actually is a single solution for super roots with -2 < degree <= -1\r\n          if (degree > -2 && degree < -1) {\r\n            return Decimal.fromNumber(degree).add(2).pow(this.recip());\r\n          }\r\n          //Super roots with -1 <= degree < 0 have either no solution or infinitely many solutions, and tetration with height <= -2 returns NaN, so super roots of degree <= -2 don't work\r\n          if (degree <= 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //Infinite degree super-root is x^(1/x) between 1/e <= x <= e, undefined otherwise\r\n          if (degree == Number.POSITIVE_INFINITY) {\r\n            var this_num = this.toNumber();\r\n            if (this_num < Math.E && this_num > _EXPN1) {\r\n              return this.pow(this.recip());\r\n            } else {\r\n              return new Decimal(Decimal.dNaN);\r\n            }\r\n          }\r\n          //Special case: any super-root of 1 is 1\r\n          if (this.eq(1)) {\r\n            return FC_NN(1, 0, 1);\r\n          }\r\n          //TODO: base < 0 (It'll probably be NaN anyway)\r\n          if (this.lt(0)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //Treat all numbers of layer <= -2 as zero, because they effectively are\r\n          if (this.lte(\"1ee-16\")) {\r\n            if (degree % 2 == 1) return new Decimal(this);else return new Decimal(Decimal.dNaN);\r\n          }\r\n          //this > 1\r\n          if (this.gt(1)) {\r\n            //Uses guess-and-check to find the super-root.\r\n            //If this > 10^^(degree), then the answer is under iteratedlog(10, degree - 1): for example, ssqrt(x) < log(x, 10) as long as x > 10^10, and linear_sroot(x, 3) < log(log(x, 10), 10) as long as x > 10^10^10\r\n            //On the other hand, if this < 10^^(degree), then clearly the answer is less than 10\r\n            //Since the answer could be a higher-layered number itself (whereas slog's maximum is 1.8e308), the guess-and-check is scaled to the layer of the upper bound, so the guess is set to the average of some higher-layer exponents of the bounds rather than the bounds itself (as taking plain averages on tetrational-scale numbers would go nowhere)\r\n            var upperBound = Decimal.dTen;\r\n            if (this.gte(Decimal.tetrate(10, degree, 1, true))) {\r\n              upperBound = this.iteratedlog(10, degree - 1, true);\r\n            }\r\n            if (degree <= 1) {\r\n              upperBound = this.root(degree);\r\n            }\r\n            var lower = Decimal.dZero; //This is zero rather than one because we might be on a higher layer, so the lower bound might actually some 10^10^10...^0\r\n            var layer = upperBound.layer;\r\n            var upper = upperBound.iteratedlog(10, layer, true);\r\n            var previous = upper;\r\n            var guess = upper.div(2);\r\n            var loopGoing = true;\r\n            while (loopGoing) {\r\n              guess = lower.add(upper).div(2);\r\n              if (Decimal.iteratedexp(10, layer, guess, true).tetrate(degree, 1, true).gt(this)) upper = guess;else lower = guess;\r\n              if (guess.eq(previous)) loopGoing = false;else previous = guess;\r\n            }\r\n            return Decimal.iteratedexp(10, layer, guess, true);\r\n          }\r\n          //0 < this < 1\r\n          else {\r\n            //A tetration of decimal degree can potentially have three different portions, as shown at https://www.desmos.com/calculator/ayvqks6mxa, which is a graph of x^^2.05:\r\n            //The portion where the function is increasing, extending from a minimum (which may be at x = 0 or at some x between 0 and 1) up to infinity (I'll call this the \"increasing\" range)\r\n            //The portion where the function is decreasing (I'll call this the \"decreasing\" range)\r\n            //A small, steep increasing portion very close to x = 0 (I'll call this the \"zero\" range)\r\n            //If ceiling(degree) is even, then the tetration will either be strictly increasing, or it will have the increasing and decreasing ranges, but not the zero range (because if ceiling(degree) is even, 0^^degree == 1).\r\n            //If ceiling(degree) is odd, then the tetration will either be strictly increasing, or it will have all three ranges (because if ceiling(degree) is odd, 0^^degree == 0).\r\n            //The existence of these ranges means that a super-root could potentially have two or three valid answers.\r\n            //Out of these, we'd prefer the increasing range value if it exists, otherwise we'll take the zero range value (it can't have a decreasing range value if it doesn't have an increasing range value) if the zero range exists.\r\n            //It's possible to identify which range that \"this\" is in:\r\n            //If the tetration is decreasing at that point, the point is in the decreasing range.\r\n            //If the tetration is increasing at that point and ceiling(degree) is even, the point is in the increasing range since there is no zero range.\r\n            //If the tetration is increasing at that point and ceiling(degree) is odd, look at the second derivative at that point. If the second derivative is positive, the point is in the increasing range. If the second derivative is negative, the point is the zero range.\r\n            //We need to find the local minimum (separates decreasing and increasing ranges) and the local maximum (separates zero and decreasing ranges).\r\n            //(stage) is which stage of the loop we're in: stage 1 is finding the minimum, stage 2 means we're between the stages, and stage 3 is finding the maximum.\r\n            //The boundary between the decreasing range and the zero range can be very small, so we want to use layer -1 numbers. Therefore, all numbers involved are log10(recip()) of their actual values.\r\n            var stage = 1;\r\n            var minimum = FC(1, 10, 1);\r\n            var maximum = FC(1, 10, 1);\r\n            var _lower = FC(1, 10, 1); //eeeeeeeee-10, which is effectively 0; I would use Decimal.dInf but its reciprocal is NaN\r\n            var _upper = FC(1, 1, -16); //~ 1 - 1e-16\r\n            var prevspan = Decimal.dZero;\r\n            var difference = FC(1, 10, 1);\r\n            var _upperBound = _upper.pow10().recip();\r\n            var distance = Decimal.dZero;\r\n            var prevPoint = _upperBound;\r\n            var nextPoint = _upperBound;\r\n            var evenDegree = Math.ceil(degree) % 2 == 0;\r\n            var range = 0;\r\n            var lastValid = FC(1, 10, 1);\r\n            var infLoopDetector = false;\r\n            var previousUpper = Decimal.dZero;\r\n            var decreasingFound = false;\r\n            while (stage < 4) {\r\n              if (stage == 2) {\r\n                //The minimum has been found. If ceiling(degree) is even, there's no zero range and thus no local maximum, so end the loop here. Otherwise, begin finding the maximum.\r\n                if (evenDegree) break;else {\r\n                  _lower = FC(1, 10, 1);\r\n                  _upper = minimum;\r\n                  stage = 3;\r\n                  difference = FC(1, 10, 1);\r\n                  lastValid = FC(1, 10, 1);\r\n                }\r\n              }\r\n              infLoopDetector = false;\r\n              while (_upper.neq(_lower)) {\r\n                previousUpper = _upper;\r\n                if (_upper.pow10().recip().tetrate(degree, 1, true).eq(1) && _upper.pow10().recip().lt(0.4)) {\r\n                  _upperBound = _upper.pow10().recip();\r\n                  prevPoint = _upper.pow10().recip();\r\n                  nextPoint = _upper.pow10().recip();\r\n                  distance = Decimal.dZero;\r\n                  range = -1; //This would cause problems with degree < 1 in the linear approximation... but those are already covered as a special case\r\n                  if (stage == 3) lastValid = _upper;\r\n                } else if (_upper.pow10().recip().tetrate(degree, 1, true).eq(_upper.pow10().recip()) && !evenDegree && _upper.pow10().recip().lt(0.4)) {\r\n                  _upperBound = _upper.pow10().recip();\r\n                  prevPoint = _upper.pow10().recip();\r\n                  nextPoint = _upper.pow10().recip();\r\n                  distance = Decimal.dZero;\r\n                  range = 0;\r\n                } else if (_upper.pow10().recip().tetrate(degree, 1, true).eq(_upper.pow10().recip().mul(2).tetrate(degree, 1, true))) {\r\n                  //If the upper bound is closer to zero than the next point with a discernable tetration, so surely it's in whichever range is closest to zero?\r\n                  //This won't happen in a strictly increasing tetration, as there x^^degree ~= x as x approaches zero\r\n                  _upperBound = _upper.pow10().recip();\r\n                  prevPoint = Decimal.dZero;\r\n                  nextPoint = _upperBound.mul(2);\r\n                  distance = _upperBound;\r\n                  if (evenDegree) range = -1;else range = 0;\r\n                } else {\r\n                  //We want to use prevspan to find the \"previous point\" right before the upper bound and the \"next point\" right after the upper bound, as that will let us approximate derivatives\r\n                  prevspan = _upper.mul(1.2e-16);\r\n                  _upperBound = _upper.pow10().recip();\r\n                  prevPoint = _upper.add(prevspan).pow10().recip();\r\n                  distance = _upperBound.sub(prevPoint);\r\n                  nextPoint = _upperBound.add(distance);\r\n                  //...but it's of no use to us while its tetration is equal to upper's tetration, so widen the difference until it's not\r\n                  //We add prevspan and subtract nextspan because, since upper is log10(recip(upper bound)), the upper bound gets smaller as upper gets larger and vice versa\r\n                  while (prevPoint.tetrate(degree, 1, true).eq(_upperBound.tetrate(degree, 1, true)) || nextPoint.tetrate(degree, 1, true).eq(_upperBound.tetrate(degree, 1, true)) || prevPoint.gte(_upperBound) || nextPoint.lte(_upperBound)) {\r\n                    prevspan = prevspan.mul(2);\r\n                    prevPoint = _upper.add(prevspan).pow10().recip();\r\n                    distance = _upperBound.sub(prevPoint);\r\n                    nextPoint = _upperBound.add(distance);\r\n                  }\r\n                  if (stage == 1 && nextPoint.tetrate(degree, 1, true).gt(_upperBound.tetrate(degree, 1, true)) && prevPoint.tetrate(degree, 1, true).gt(_upperBound.tetrate(degree, 1, true)) || stage == 3 && nextPoint.tetrate(degree, 1, true).lt(_upperBound.tetrate(degree, 1, true)) && prevPoint.tetrate(degree, 1, true).lt(_upperBound.tetrate(degree, 1, true))) {\r\n                    lastValid = _upper;\r\n                  }\r\n                  if (nextPoint.tetrate(degree, 1, true).lt(_upperBound.tetrate(degree, 1, true))) {\r\n                    //Derivative is negative, so we're in decreasing range\r\n                    range = -1;\r\n                  } else if (evenDegree) {\r\n                    //No zero range, so we're in increasing range\r\n                    range = 1;\r\n                  } else if (stage == 3 && _upper.gt_tolerance(minimum, 1e-8)) {\r\n                    //We're already below the minimum, so we can't be in range 1\r\n                    range = 0;\r\n                  } else {\r\n                    //Number imprecision has left the second derivative somewhat untrustworthy, so we need to expand the bounds to ensure it's correct\r\n                    while (prevPoint.tetrate(degree, 1, true).eq_tolerance(_upperBound.tetrate(degree, 1, true), 1e-8) || nextPoint.tetrate(degree, 1, true).eq_tolerance(_upperBound.tetrate(degree, 1, true), 1e-8) || prevPoint.gte(_upperBound) || nextPoint.lte(_upperBound)) {\r\n                      prevspan = prevspan.mul(2);\r\n                      prevPoint = _upper.add(prevspan).pow10().recip();\r\n                      distance = _upperBound.sub(prevPoint);\r\n                      nextPoint = _upperBound.add(distance);\r\n                    }\r\n                    if (nextPoint.tetrate(degree, 1, true).sub(_upperBound.tetrate(degree, 1, true)).lt(_upperBound.tetrate(degree, 1, true).sub(prevPoint.tetrate(degree, 1, true)))) {\r\n                      //Second derivative is negative, so we're in zero range\r\n                      range = 0;\r\n                    } else {\r\n                      //By process of elimination, we're in increasing range\r\n                      range = 1;\r\n                    }\r\n                  }\r\n                }\r\n                if (range == -1) decreasingFound = true;\r\n                if (stage == 1 && range == 1 || stage == 3 && range != 0) {\r\n                  //The upper bound is too high\r\n                  if (_lower.eq(FC(1, 10, 1))) {\r\n                    _upper = _upper.mul(2);\r\n                  } else {\r\n                    var cutOff = false;\r\n                    if (infLoopDetector && (range == 1 && stage == 1 || range == -1 && stage == 3)) cutOff = true; //Avoids infinite loops from floating point imprecision\r\n                    _upper = _upper.add(_lower).div(2);\r\n                    if (cutOff) break;\r\n                  }\r\n                } else {\r\n                  if (_lower.eq(FC(1, 10, 1))) {\r\n                    //We've now found an actual lower bound\r\n                    _lower = _upper;\r\n                    _upper = _upper.div(2);\r\n                  } else {\r\n                    //The upper bound is too low, meaning last time we decreased the upper bound, we should have gone to the other half of the new range instead\r\n                    var _cutOff = false;\r\n                    if (infLoopDetector && (range == 1 && stage == 1 || range == -1 && stage == 3)) _cutOff = true; //Avoids infinite loops from floating point imprecision\r\n                    _lower = _lower.sub(difference);\r\n                    _upper = _upper.sub(difference);\r\n                    if (_cutOff) break;\r\n                  }\r\n                }\r\n                if (_lower.sub(_upper).div(2).abs().gt(difference.mul(1.5))) infLoopDetector = true;\r\n                difference = _lower.sub(_upper).div(2).abs();\r\n                if (_upper.gt(\"1e18\")) break;\r\n                if (_upper.eq(previousUpper)) break; //Another infinite loop catcher\r\n              }\r\n  \r\n              if (_upper.gt(\"1e18\")) break;\r\n              if (!decreasingFound) break; //If there's no decreasing range, then even if an error caused lastValid to gain a value, the minimum can't exist\r\n              if (lastValid == FC(1, 10, 1)) {\r\n                //Whatever we're searching for, it doesn't exist. If there's no minimum, then there's no maximum either, so either way we can end the loop here.\r\n                break;\r\n              }\r\n              if (stage == 1) minimum = lastValid;else if (stage == 3) maximum = lastValid;\r\n              stage++;\r\n            }\r\n            //Now we have the minimum and maximum, so it's time to calculate the actual super-root.\r\n            //First, check if the root is in the increasing range.\r\n            _lower = minimum;\r\n            _upper = FC(1, 1, -18);\r\n            var _previous = _upper;\r\n            var _guess = Decimal.dZero;\r\n            var _loopGoing = true;\r\n            while (_loopGoing) {\r\n              if (_lower.eq(FC(1, 10, 1))) _guess = _upper.mul(2);else _guess = _lower.add(_upper).div(2);\r\n              if (Decimal.pow(10, _guess).recip().tetrate(degree, 1, true).gt(this)) _upper = _guess;else _lower = _guess;\r\n              if (_guess.eq(_previous)) _loopGoing = false;else _previous = _guess;\r\n              if (_upper.gt(\"1e18\")) return new Decimal(Decimal.dNaN);\r\n            }\r\n            //using guess.neq(minimum) led to imprecision errors, so here's a fixed version of that\r\n            if (!_guess.eq_tolerance(minimum, 1e-15)) {\r\n              return _guess.pow10().recip();\r\n            } else {\r\n              //If guess == minimum, we haven't actually found the super-root, the algorithm just kept going down trying to find a super-root that's not in the increasing range.\r\n              //Check if the root is in the zero range.\r\n              if (maximum.eq(FC(1, 10, 1))) {\r\n                //There is no zero range, so the super root doesn't exist\r\n                return new Decimal(Decimal.dNaN);\r\n              }\r\n              _lower = FC(1, 10, 1);\r\n              _upper = maximum;\r\n              _previous = _upper;\r\n              _guess = Decimal.dZero;\r\n              _loopGoing = true;\r\n              while (_loopGoing) {\r\n                if (_lower.eq(FC(1, 10, 1))) _guess = _upper.mul(2);else _guess = _lower.add(_upper).div(2);\r\n                if (Decimal.pow(10, _guess).recip().tetrate(degree, 1, true).gt(this)) _upper = _guess;else _lower = _guess;\r\n                if (_guess.eq(_previous)) _loopGoing = false;else _previous = _guess;\r\n                if (_upper.gt(\"1e18\")) return new Decimal(Decimal.dNaN);\r\n              }\r\n              return _guess.pow10().recip();\r\n            }\r\n          }\r\n        }\r\n        /**\r\n         * This function takes a Decimal => Decimal function as its argument (or DecimalSource => Decimal, that's fine too),\r\n         * and it returns a DecimalSource => Decimal function that's an inverse of the first one, which uses binary search to find its target.\r\n         * The resulting function will call the original many times, so it may be noticably slower than the original.\r\n         *\r\n         * This function is only intended to be used on continuous, strictly increasing (or, using the decreasing parameter, strictly decreasing) functions.\r\n         * Its resulting function may output erroneous results if the original function was not strictly increasing.\r\n         * If the function is increasing but not strictly increasing, the inverse will, in ranges where the original function is constant, try to return the value closest to 0 out of the multiple correct values.\r\n         * If the function is not continuous, the inverse should return the correct answer in cases where the given value is returned by some input to the original function, but it will return an erroneous result otherwise (the correct result would be to return NaN, but checking to ensure continuity is not implemented)\r\n         *\r\n         * @param func The Decimal => Decimal function to create an inverse function of.\r\n         * @param decreasing This parameter is false by default. If this parameter is true, the original function should be strictly decreasing instead of strictly increasing.\r\n         * @param iterations The amount of iterations that the inverse function runs before it gives up and returns whatever value it's found thus far. Default is 120, which should be enough to always be as precise as floating point allows.\r\n         * @param minX The original function is assumed to have this value as the lowest value in its domain. Is Decimal.dLayerMax.neg() by default, which means all negative finite values are allowed but infinity is not.\r\n         * @param maxX The original function is assumed to have this value as the highest value in its domain. Is Decimal.dLayerMax by default, which means all positive finite values are allowed but infinity is not.\r\n         * @param minY If the input to the inverse function is below this value, the inverse function assumes the input is not in the range and returns NaN. Is Decimal.dLayerMax.neg() by default, which means all negative finite values are allowed but infinity is not.\r\n         * @param maxY If the input to the inverse function is above this value, the inverse function assumes the input is not in the range and returns NaN. Is Decimal.dLayerMax by default, which means all positive finite values are allowed but infinity is not.\r\n         */\r\n      }, {\r\n        key: \"pentate\",\r\n        value:\r\n        /**\r\n         * Pentation/pentate: The result of tetrating 'height' times in a row. An absurdly strong operator - Decimal.pentate(2, 4.28) and Decimal.pentate(10, 2.37) are already too huge for break_eternity.js!\r\n         * https://en.wikipedia.org/wiki/Pentation\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         *\r\n         * For non-whole pentation heights, the linear approximation of pentation is always used, as there is no defined analytic approximation of pentation.\r\n         */\r\n        function pentate() {\r\n          var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\r\n          var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          payload = new Decimal(payload);\r\n          var oldheight = height;\r\n          height = Math.floor(height);\r\n          var fracheight = oldheight - height;\r\n          var prevpayload = Decimal.dZero;\r\n          var prevtwopayload = Decimal.dZero;\r\n          // Linear approximation. I have no idea if this is a meaningful approximation for pentation to continuous heights, but it is monotonic and continuous.\r\n          if (fracheight !== 0) {\r\n            if (payload.eq(Decimal.dOne)) {\r\n              ++height;\r\n              payload = Decimal.fromNumber(fracheight);\r\n            } else {\r\n              // Despite calling penta_log, this is safe, as penta_log only calls pentation with payload 1.\r\n              return this.pentate(payload.penta_log(this, undefined, linear).plus(oldheight).toNumber(), 1, linear);\r\n            }\r\n          }\r\n          if (height > 0) {\r\n            for (var i = 0; i < height;) {\r\n              prevtwopayload = prevpayload;\r\n              prevpayload = payload;\r\n              payload = this.tetrate(payload.toNumber(), Decimal.dOne, linear);\r\n              ++i;\r\n              // Under the linear approximation of pentation, if p is between 0 and 1, x^^^p == x^^p (which just equals x^p if tetration is also using the linear approximation)\r\n              // ...and once both the base and payload are between 0 and 1, they'll both stay that way.\r\n              if (this.gt(0) && this.lte(1) && payload.gt(0) && payload.lte(1)) return this.tetrate(height - i, payload, linear);\r\n              // End early if it's settled on a limit. Bases close to 0 alternate between two possible values.\r\n              if (payload.eq(prevpayload) || payload.eq(prevtwopayload) && i % 2 == height % 2) return payload.normalize();\r\n              //bail if we're NaN\r\n              if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\r\n                return payload.normalize();\r\n              }\r\n              //give up after 10000 iterations if nothing is happening\r\n              if (i > 10000) {\r\n                return payload;\r\n              }\r\n            }\r\n          } else {\r\n            // Repeated slog is sloooow, but that's what negative pentation height means. Since it's just calling slog repeatedly anyway (without any layer shortcuts), I see no reason to make this its own function (whereas iteratedlog makes sense to be its own function even though it's negative height tetrate).\r\n            for (var _i2 = 0; _i2 < -height; ++_i2) {\r\n              prevpayload = payload;\r\n              payload = payload.slog(this, undefined, linear);\r\n              // End early if it's settled on a limit\r\n              if (payload.eq(prevpayload)) return payload.normalize();\r\n              //bail if we're NaN\r\n              if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\r\n                return payload.normalize();\r\n              }\r\n              //give up after 100 iterations if nothing is happening\r\n              if (_i2 > 100) {\r\n                return payload;\r\n              }\r\n            }\r\n          }\r\n          return payload;\r\n        }\r\n        /**\r\n         * Penta-logarithm, one of pentation's inverses, tells you what height you'd have to pentate 'base' to to get 'this'.\r\n         *\r\n         * Grows incredibly slowly. For bases above 2, you won't be seeing a result greater than 5 out of this function.\r\n         *\r\n         * Accepts a number of iterations (default is 100), and use binary search to, after making an initial guess, hone in on the true value, assuming pentation as the ground truth.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         *\r\n         * For non-whole pentation heights, the linear approximation of pentation is always used, as there is no defined analytic approximation of pentation.\r\n         */\r\n        // INCREDIBLY slow on numbers <= -1. Probably don't call it on those.\r\n        // If you're here looking to port penta_log to OmegaNum, ExpantaNum, or something similar, then know that this implementation isn't sufficient for that purpose. The pentation functions here run loops without shortcuts, because in break_eternity the numbers don't get large enough to need those shortcuts.\r\n      }, {\r\n        key: \"penta_log\",\r\n        value: function penta_log() {\r\n          var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\r\n          var iterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          base = new Decimal(base);\r\n          // Bases below 1 oscillate, so the logarithm doesn't make sense\r\n          if (base.lte(1)) return new Decimal(Decimal.dNaN);\r\n          if (this.eq(1)) return FC_NN(0, 0, 0);\r\n          if (this.eq(Decimal.dInf)) return new Decimal(Decimal.dInf);\r\n          var value = new Decimal(1);\r\n          var result = 0;\r\n          var step_size = 1;\r\n          // There's some x between -1 and -2, depending on the base, where base^^x == x. This x is base^^^(-Infinity), and we shouldn't bother with numbers less than that limit.\r\n          if (this.lt(-1)) {\r\n            if (this.lte(-2)) return new Decimal(Decimal.dNaN);\r\n            var limitcheck = base.tetrate(this.toNumber(), 1, linear);\r\n            if (this.eq(limitcheck)) return new Decimal(Decimal.dNegInf);\r\n            if (this.gt(limitcheck)) return new Decimal(Decimal.dNaN);\r\n          }\r\n          // pentate runs through each tetration iteration anyway, so while we're narrowing down on the nearest integer it's faster to just check them one-by-one than to run through pentate every time\r\n          if (this.gt(1)) {\r\n            while (value.lt(this)) {\r\n              result++;\r\n              value = Decimal.tetrate(base, value.toNumber(), 1, linear);\r\n              if (result > 1000) {\r\n                // Probably reached a limit by this point.\r\n                return new Decimal(Decimal.dNaN);\r\n              }\r\n            }\r\n          } else {\r\n            while (value.gt(this)) {\r\n              result--;\r\n              value = Decimal.slog(value, base, linear);\r\n              if (result > 100) {\r\n                // Probably reached the limit by this point.\r\n                return new Decimal(Decimal.dNaN);\r\n              }\r\n            }\r\n          }\r\n          for (var i = 1; i < iterations; ++i) {\r\n            var new_decimal = base.pentate(result, Decimal.dOne, linear);\r\n            if (new_decimal.eq(this)) break;\r\n            var currently_rose = new_decimal.gt(this);\r\n            step_size = Math.abs(step_size) * (currently_rose ? -1 : 1);\r\n            result += step_size;\r\n            step_size /= 2;\r\n            if (step_size === 0) {\r\n              break;\r\n            }\r\n          }\r\n          return Decimal.fromNumber(result);\r\n        }\r\n        /**\r\n         * Penta-root, one of pentation's inverses - what number, pentated to height 'degree', equals 'this'?\r\n         *\r\n         * Only works with the linear approximation of tetration, as starting with analytic and then switching to linear would result in inconsistent behavior for super-roots.\r\n         */\r\n      }, {\r\n        key: \"linear_penta_root\",\r\n        value: function linear_penta_root(degree) {\r\n          //1st-degree super root just returns its input\r\n          if (degree == 1) {\r\n            return this;\r\n          }\r\n          //TODO: degree < 0 (A pretty useless case, seeing as it runs into the same issues as linear_sroot's degrees between -1 and 0 for degrees between -2 and 0, and for degrees below -2 it'll only have a value for negative numbers between -1 and... some limit between -1 and -2.)\r\n          if (degree < 0) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          if (this.eq(Decimal.dInf)) {\r\n            return new Decimal(Decimal.dInf);\r\n          }\r\n          if (!this.isFinite()) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          //Using linear approximation, x^^^n = x^n if 0 < n < 1\r\n          if (degree > 0 && degree < 1) {\r\n            return this.root(degree);\r\n          }\r\n          //Special case: any super-root of 1 is 1\r\n          if (this.eq(1)) {\r\n            return FC_NN(1, 0, 1);\r\n          }\r\n          //TODO: base < 0 (It'll probably be NaN anyway)\r\n          if (this.lt(0)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          /* If 'this' is below 1, then the result is going to be below 1, meaning the original number was a tetration tower where all entries are below 1...\r\n          ...and in the linear approximation, tetration with a height between 0 and 1 reduces to exponentiation of that height.\r\n          Therefore, penta_root and sroot will return the same value. */\r\n          if (this.lt(1)) {\r\n            return this.linear_sroot(degree);\r\n          }\r\n          // Unlike with super-root, I'm not sure how to get a good upper bound here, so let's just call increasingInverse.\r\n          return Decimal.increasingInverse(function (value) {\r\n            return Decimal.pentate(value, degree, 1, true);\r\n          })(this);\r\n        }\r\n        // trig functions!\r\n        /**\r\n         * The sine function, one of the main two trigonometric functions. Behaves periodically with period 2*pi.\r\n         */\r\n      }, {\r\n        key: \"sin\",\r\n        value: function sin() {\r\n          if (this.mag < 0) {\r\n            return new Decimal(this);\r\n          }\r\n          if (this.layer === 0) {\r\n            return Decimal.fromNumber(Math.sin(this.sign * this.mag));\r\n          }\r\n          return FC_NN(0, 0, 0);\r\n        }\r\n        /**\r\n         * The cosine function, one of the main two trigonometric functions. Behaves periodically with period 2*pi.\r\n         */\r\n      }, {\r\n        key: \"cos\",\r\n        value: function cos() {\r\n          if (this.mag < 0) {\r\n            return FC_NN(1, 0, 1);\r\n          }\r\n          if (this.layer === 0) {\r\n            return Decimal.fromNumber(Math.cos(this.sign * this.mag));\r\n          }\r\n          return FC_NN(0, 0, 0);\r\n        }\r\n        /**\r\n         * The tangent function, equal to sine divided by cosine. Behaves periodically with period pi.\r\n         */\r\n      }, {\r\n        key: \"tan\",\r\n        value: function tan() {\r\n          if (this.mag < 0) {\r\n            return new Decimal(this);\r\n          }\r\n          if (this.layer === 0) {\r\n            return Decimal.fromNumber(Math.tan(this.sign * this.mag));\r\n          }\r\n          return FC_NN(0, 0, 0);\r\n        }\r\n        /**\r\n         * The arcsine function, the inverse of the sine function.\r\n         */\r\n      }, {\r\n        key: \"asin\",\r\n        value: function asin() {\r\n          if (this.mag < 0) {\r\n            return new Decimal(this);\r\n          }\r\n          if (this.layer === 0) {\r\n            return Decimal.fromNumber(Math.asin(this.sign * this.mag));\r\n          }\r\n          return new Decimal(Decimal.dNaN);\r\n        }\r\n        /**\r\n         * The arccosine function, the inverse of the cosine function.\r\n         */\r\n      }, {\r\n        key: \"acos\",\r\n        value: function acos() {\r\n          if (this.mag < 0) {\r\n            return Decimal.fromNumber(Math.acos(this.toNumber()));\r\n          }\r\n          if (this.layer === 0) {\r\n            return Decimal.fromNumber(Math.acos(this.sign * this.mag));\r\n          }\r\n          return new Decimal(Decimal.dNaN);\r\n        }\r\n        /**\r\n         * The arctangent function, the inverse of the tangent function.\r\n         */\r\n      }, {\r\n        key: \"atan\",\r\n        value: function atan() {\r\n          if (this.mag < 0) {\r\n            return new Decimal(this);\r\n          }\r\n          if (this.layer === 0) {\r\n            return Decimal.fromNumber(Math.atan(this.sign * this.mag));\r\n          }\r\n          return Decimal.fromNumber(Math.atan(this.sign * 1.8e308));\r\n        }\r\n        /**\r\n         * Hyperbolic sine: sinh(X) = (e^x - e^-x)/2.\r\n         */\r\n      }, {\r\n        key: \"sinh\",\r\n        value: function sinh() {\r\n          return this.exp().sub(this.negate().exp()).div(2);\r\n        }\r\n        /**\r\n         * Hyperbolic cosine: cosh(x) = (e^x + e^-x)/2.\r\n         */\r\n      }, {\r\n        key: \"cosh\",\r\n        value: function cosh() {\r\n          return this.exp().add(this.negate().exp()).div(2);\r\n        }\r\n        /**\r\n         * Hyperbolic tangent: tanh(x) = sinh(x)/cosh(x).\r\n         */\r\n      }, {\r\n        key: \"tanh\",\r\n        value: function tanh() {\r\n          return this.sinh().div(this.cosh());\r\n        }\r\n        /**\r\n         * Hyperbolic arcsine, the inverse of hyperbolic sine.\r\n         */\r\n      }, {\r\n        key: \"asinh\",\r\n        value: function asinh() {\r\n          return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\r\n        }\r\n        /**\r\n         * Hyperbolic arccosine, the inverse of hyperbolic cosine.\r\n         */\r\n      }, {\r\n        key: \"acosh\",\r\n        value: function acosh() {\r\n          return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\r\n        }\r\n        /**\r\n         * Hyperbolic arcctangent, the inverse of hyperbolic tangent.\r\n         */\r\n      }, {\r\n        key: \"atanh\",\r\n        value: function atanh() {\r\n          if (this.abs().gte(1)) {\r\n            return new Decimal(Decimal.dNaN);\r\n          }\r\n          return Decimal.ln(this.add(1).div(Decimal.fromNumber(1).sub(this))).div(2);\r\n        }\r\n        /**\r\n         * Joke function from Realm Grinder\r\n         */\r\n      }, {\r\n        key: \"ascensionPenalty\",\r\n        value: function ascensionPenalty(ascensions) {\r\n          if (ascensions === 0) {\r\n            return new Decimal(this);\r\n          }\r\n          return this.root(Decimal.pow(10, ascensions));\r\n        }\r\n        /**\r\n         * Joke function from Cookie Clicker. It's 'egg'\r\n         */\r\n      }, {\r\n        key: \"egg\",\r\n        value: function egg() {\r\n          return this.add(9);\r\n        }\r\n      }, {\r\n        key: \"lessThanOrEqualTo\",\r\n        value: function lessThanOrEqualTo(other) {\r\n          return this.cmp(other) < 1;\r\n        }\r\n      }, {\r\n        key: \"lessThan\",\r\n        value: function lessThan(other) {\r\n          return this.cmp(other) < 0;\r\n        }\r\n      }, {\r\n        key: \"greaterThanOrEqualTo\",\r\n        value: function greaterThanOrEqualTo(other) {\r\n          return this.cmp(other) > -1;\r\n        }\r\n      }, {\r\n        key: \"greaterThan\",\r\n        value: function greaterThan(other) {\r\n          return this.cmp(other) > 0;\r\n        }\r\n      }], [{\r\n        key: \"fromComponents\",\r\n        value: function fromComponents(sign, layer, mag) {\r\n          return new Decimal().fromComponents(sign, layer, mag);\r\n        }\r\n        /**\r\n         * Turns the given components into a Decimal, but not necessarily a valid one (it's only valid if the components would already create a valid Decimal without normalization). Users of this library should not use this function.\r\n         */\r\n      }, {\r\n        key: \"fromComponents_noNormalize\",\r\n        value: function fromComponents_noNormalize(sign, layer, mag) {\r\n          return new Decimal().fromComponents_noNormalize(sign, layer, mag);\r\n        }\r\n        /**\r\n         * Turns the mantissa and exponent into a valid Decimal with value mantissa * 10^exponent.\r\n         */\r\n      }, {\r\n        key: \"fromMantissaExponent\",\r\n        value: function fromMantissaExponent(mantissa, exponent) {\r\n          return new Decimal().fromMantissaExponent(mantissa, exponent);\r\n        }\r\n        /**\r\n         * Turns the mantissa and exponent into a Decimal, but not necessarily a valid one. Users of this library should not use this function.\r\n         */\r\n      }, {\r\n        key: \"fromMantissaExponent_noNormalize\",\r\n        value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\r\n          return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\r\n        }\r\n        /**\r\n         * Creates a deep copy of the provided value.\r\n         */\r\n      }, {\r\n        key: \"fromDecimal\",\r\n        value: function fromDecimal(value) {\r\n          return new Decimal().fromDecimal(value);\r\n        }\r\n        /**\r\n         * Converts a floating-point number into a Decimal.\r\n         */\r\n      }, {\r\n        key: \"fromNumber\",\r\n        value: function fromNumber(value) {\r\n          return new Decimal().fromNumber(value);\r\n        }\r\n        /**\r\n         * Converts a string into a Decimal.\r\n         *\r\n         * If linearhyper4 is true, then strings like \"10^^8.5\" will use the linear approximation of tetration even for bases <= 10.\r\n         */\r\n      }, {\r\n        key: \"fromString\",\r\n        value: function fromString(value) {\r\n          var linearhyper4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          return new Decimal().fromString(value, linearhyper4);\r\n        }\r\n        /**\r\n         * The function used by new Decimal() to create a new Decimal. Accepts a DecimalSource: uses fromNumber if given a number, uses fromString if given a string, and uses fromDecimal if given a Decimal.\r\n         */\r\n      }, {\r\n        key: \"fromValue\",\r\n        value: function fromValue(value) {\r\n          return new Decimal().fromValue(value);\r\n        }\r\n        /**\r\n         * Converts a DecimalSource to a Decimal, without constructing a new Decimal\r\n         * if the provided value is already a Decimal.\r\n         *\r\n         * As the return value could be the provided value itself, this function\r\n         * returns a read-only Decimal to prevent accidental mutations of the value.\r\n         * Use `new Decimal(value)` to explicitly create a writeable copy if mutation\r\n         * is required.\r\n         */\r\n      }, {\r\n        key: \"fromValue_noAlloc\",\r\n        value: function fromValue_noAlloc(value) {\r\n          if (value instanceof Decimal) {\r\n            return value;\r\n          } else if (typeof value === \"string\") {\r\n            var cached = Decimal.fromStringCache.get(value);\r\n            if (cached !== undefined) {\r\n              return cached;\r\n            }\r\n            return Decimal.fromString(value);\r\n          } else if (typeof value === \"number\") {\r\n            return Decimal.fromNumber(value);\r\n          } else {\r\n            // This should never happen... but some users like Prestige Tree Rewritten\r\n            // pass undefined values in as DecimalSources, so we should handle this\r\n            // case to not break them.\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n        }\r\n        /**\r\n         * Absolute value function: returns 'value' if 'value' >= 0, returns the negative of 'value' if 'value' < 0.\r\n         */\r\n      }, {\r\n        key: \"abs\",\r\n        value: function abs(value) {\r\n          return D(value).abs();\r\n        }\r\n        /**\r\n         * Returns the negative of the given value.\r\n         */\r\n      }, {\r\n        key: \"neg\",\r\n        value: function neg(value) {\r\n          return D(value).neg();\r\n        }\r\n        /**\r\n         * Returns the negative of the given value.\r\n         */\r\n      }, {\r\n        key: \"negate\",\r\n        value: function negate(value) {\r\n          return D(value).neg();\r\n        }\r\n        /**\r\n         * Returns the negative of the given value.\r\n         */\r\n      }, {\r\n        key: \"negated\",\r\n        value: function negated(value) {\r\n          return D(value).neg();\r\n        }\r\n        /**\r\n         * Returns the sign of the given value.\r\n         */\r\n      }, {\r\n        key: \"sign\",\r\n        value: function sign(value) {\r\n          return D(value).sign;\r\n        }\r\n        /**\r\n         * Returns the sign of the given value.\r\n         */\r\n      }, {\r\n        key: \"sgn\",\r\n        value: function sgn(value) {\r\n          return D(value).sign;\r\n        }\r\n        /**\r\n         * Rounds the value to the nearest integer.\r\n         */\r\n      }, {\r\n        key: \"round\",\r\n        value: function round(value) {\r\n          return D(value).round();\r\n        }\r\n        /**\r\n         * \"Rounds\" the value to the nearest integer that's less than or equal to it.\r\n         */\r\n      }, {\r\n        key: \"floor\",\r\n        value: function floor(value) {\r\n          return D(value).floor();\r\n        }\r\n        /**\r\n         * \"Rounds\" the value to the nearest integer that's greater than or equal to it.\r\n         */\r\n      }, {\r\n        key: \"ceil\",\r\n        value: function ceil(value) {\r\n          return D(value).ceil();\r\n        }\r\n        /**\r\n         * Extracts the integer part of the Decimal and returns it. Behaves like floor on positive numbers, but behaves like ceiling on negative numbers.\r\n         */\r\n      }, {\r\n        key: \"trunc\",\r\n        value: function trunc(value) {\r\n          return D(value).trunc();\r\n        }\r\n        /**\r\n         * Addition: returns the sum of the two Decimals.\r\n         */\r\n      }, {\r\n        key: \"add\",\r\n        value: function add(value, other) {\r\n          return D(value).add(other);\r\n        }\r\n        /**\r\n         * Addition: returns the sum of the two Decimals.\r\n         */\r\n      }, {\r\n        key: \"plus\",\r\n        value: function plus(value, other) {\r\n          return D(value).add(other);\r\n        }\r\n        /**\r\n         * Subtraction: returns the difference between 'value' and 'other'.\r\n         */\r\n      }, {\r\n        key: \"sub\",\r\n        value: function sub(value, other) {\r\n          return D(value).sub(other);\r\n        }\r\n        /**\r\n         * Subtraction: returns the difference between 'value' and 'other'.\r\n         */\r\n      }, {\r\n        key: \"subtract\",\r\n        value: function subtract(value, other) {\r\n          return D(value).sub(other);\r\n        }\r\n        /**\r\n         * Subtraction: returns the difference between 'value' and 'other'.\r\n         */\r\n      }, {\r\n        key: \"minus\",\r\n        value: function minus(value, other) {\r\n          return D(value).sub(other);\r\n        }\r\n        /**\r\n         * Multiplication: returns the product of the two Decimals.\r\n         */\r\n      }, {\r\n        key: \"mul\",\r\n        value: function mul(value, other) {\r\n          return D(value).mul(other);\r\n        }\r\n        /**\r\n         * Multiplication: returns the product of the two Decimals.\r\n         */\r\n      }, {\r\n        key: \"multiply\",\r\n        value: function multiply(value, other) {\r\n          return D(value).mul(other);\r\n        }\r\n        /**\r\n         * Multiplication: returns the product of the two Decimals.\r\n         */\r\n      }, {\r\n        key: \"times\",\r\n        value: function times(value, other) {\r\n          return D(value).mul(other);\r\n        }\r\n        /**\r\n         * Division: returns the quotient of 'value' and 'other'.\r\n         */\r\n      }, {\r\n        key: \"div\",\r\n        value: function div(value, other) {\r\n          return D(value).div(other);\r\n        }\r\n        /**\r\n         * Division: returns the quotient of 'value' and 'other'.\r\n         */\r\n      }, {\r\n        key: \"divide\",\r\n        value: function divide(value, other) {\r\n          return D(value).div(other);\r\n        }\r\n        /**\r\n         * Returns the reciprocal (1 / X) of the given value.\r\n         */\r\n      }, {\r\n        key: \"recip\",\r\n        value: function recip(value) {\r\n          return D(value).recip();\r\n        }\r\n        /**\r\n         * Returns the reciprocal (1 / X) of the given value.\r\n         */\r\n      }, {\r\n        key: \"reciprocal\",\r\n        value: function reciprocal(value) {\r\n          return D(value).recip();\r\n        }\r\n        /**\r\n         * Returns the reciprocal (1 / X) of the given value.\r\n         */\r\n      }, {\r\n        key: \"reciprocate\",\r\n        value: function reciprocate(value) {\r\n          return D(value).reciprocate();\r\n        }\r\n        /**\r\n         * Returns the remainder of 'this' divided by 'value': for example, 5 mod 2 = 1, because the remainder of 5 / 2 is 1.\r\n         * Uses the \"truncated division\" modulo, which is the same as JavaScript's native modulo operator (%)...\r\n         * unless 'floored' is true, in which case it uses the \"floored\" modulo, which is closer to how modulo works in number theory.\r\n         * These two forms of modulo are the same when only positive numbers are involved, but differ in how they work with negative numbers.\r\n         */\r\n      }, {\r\n        key: \"mod\",\r\n        value: function mod(value, other) {\r\n          var floored = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          return D(value).mod(other, floored);\r\n        }\r\n        /**\r\n         * Returns the remainder of 'this' divided by 'value': for example, 5 mod 2 = 1, because the remainder of 5 / 2 is 1.\r\n         * Uses the \"truncated division\" modulo, which is the same as JavaScript's native modulo operator (%)...\r\n         * unless 'floored' is true, in which case it uses the \"floored\" modulo, which is closer to how modulo works in number theory.\r\n         * These two forms of modulo are the same when only positive numbers are involved, but differ in how they work with negative numbers.\r\n         */\r\n      }, {\r\n        key: \"modulo\",\r\n        value: function modulo(value, other) {\r\n          var floored = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          return D(value).modulo(other, floored);\r\n        }\r\n        /**\r\n         * Returns the remainder of 'this' divided by 'value': for example, 5 mod 2 = 1, because the remainder of 5 / 2 is 1.\r\n         * Uses the \"truncated division\" modulo, which is the same as JavaScript's native modulo operator (%)...\r\n         * unless 'floored' is true, in which case it uses the \"floored\" modulo, which is closer to how modulo works in number theory.\r\n         * These two forms of modulo are the same when only positive numbers are involved, but differ in how they work with negative numbers.\r\n         */\r\n      }, {\r\n        key: \"modular\",\r\n        value: function modular(value, other) {\r\n          var floored = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          return D(value).modular(other, floored);\r\n        }\r\n        /**\r\n         * Returns 1 if 'value' > 'other', returns -1 if 'value' < 'other', returns 0 if 'value' == 'other'.\r\n         */\r\n      }, {\r\n        key: \"cmp\",\r\n        value: function cmp(value, other) {\r\n          return D(value).cmp(other);\r\n        }\r\n        /**\r\n         * Compares the absolute values of this and value.\r\n         * Returns 1 if |'value'| > |'other'|, returns -1 if |'value'| < |'other'|, returns 0 if |'value'| == |'other'|.\r\n         */\r\n      }, {\r\n        key: \"cmpabs\",\r\n        value: function cmpabs(value, other) {\r\n          return D(value).cmpabs(other);\r\n        }\r\n        /**\r\n         * Returns 1 if 'value' > 'other', returns -1 if 'value' < 'other', returns 0 if 'value' == 'other'.\r\n         */\r\n      }, {\r\n        key: \"compare\",\r\n        value: function compare(value, other) {\r\n          return D(value).cmp(other);\r\n        }\r\n        /**\r\n         * Returns true if the given value is an NaN value.\r\n         */\r\n      }, {\r\n        key: \"isNaN\",\r\n        value: function (_isNaN) {\r\n          function isNaN(_x) {\r\n            return _isNaN.apply(this, arguments);\r\n          }\r\n          isNaN.toString = function () {\r\n            return _isNaN.toString();\r\n          };\r\n          return isNaN;\r\n        }(function (value) {\r\n          value = D(value);\r\n          return isNaN(value.sign) || isNaN(value.layer) || isNaN(value.mag);\r\n        }\r\n        /**\r\n         * Returns true if the given value is finite (by Decimal standards, not by floating point standards - a humongous Decimal like 10^^10^100 is still finite!)\r\n         */)\r\n      }, {\r\n        key: \"isFinite\",\r\n        value: function (_isFinite) {\r\n          function isFinite(_x2) {\r\n            return _isFinite.apply(this, arguments);\r\n          }\r\n          isFinite.toString = function () {\r\n            return _isFinite.toString();\r\n          };\r\n          return isFinite;\r\n        }(function (value) {\r\n          value = D(value);\r\n          return isFinite(value.sign) && isFinite(value.layer) && isFinite(value.mag);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of ==. Returns true if 'value' and 'other' have equal values.\r\n         */)\r\n      }, {\r\n        key: \"eq\",\r\n        value: function eq(value, other) {\r\n          return D(value).eq(other);\r\n        }\r\n        /**\r\n         * Returns true if 'value' and 'other' have equal values.\r\n         */\r\n      }, {\r\n        key: \"equals\",\r\n        value: function equals(value, other) {\r\n          return D(value).eq(other);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of !=. Returns true if 'value' and 'other' do not have equal values.\r\n         */\r\n      }, {\r\n        key: \"neq\",\r\n        value: function neq(value, other) {\r\n          return D(value).neq(other);\r\n        }\r\n        /**\r\n         * Returns true if 'value' and 'other' do not have equal values.\r\n         */\r\n      }, {\r\n        key: \"notEquals\",\r\n        value: function notEquals(value, other) {\r\n          return D(value).notEquals(other);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of <. Returns true if 'value' is less than 'other'.\r\n         */\r\n      }, {\r\n        key: \"lt\",\r\n        value: function lt(value, other) {\r\n          return D(value).lt(other);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of <=. Returns true if 'value' is less than or equal to 'other'.\r\n         */\r\n      }, {\r\n        key: \"lte\",\r\n        value: function lte(value, other) {\r\n          return D(value).lte(other);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of >. Returns true if 'value' is greater than 'other'.\r\n         */\r\n      }, {\r\n        key: \"gt\",\r\n        value: function gt(value, other) {\r\n          return D(value).gt(other);\r\n        }\r\n        /**\r\n         * The Decimal equivalent of >=. Returns true if 'value' is greater than or equal to 'other'.\r\n         */\r\n      }, {\r\n        key: \"gte\",\r\n        value: function gte(value, other) {\r\n          return D(value).gte(other);\r\n        }\r\n        /**\r\n         * Returns whichever of 'value' and 'other' is higher.\r\n         */\r\n      }, {\r\n        key: \"max\",\r\n        value: function max(value, other) {\r\n          return D(value).max(other);\r\n        }\r\n        /**\r\n         * Returns whichever of 'value' and 'other' is lower.\r\n         */\r\n      }, {\r\n        key: \"min\",\r\n        value: function min(value, other) {\r\n          return D(value).min(other);\r\n        }\r\n        /**\r\n         * Returns whichever of 'value' and 'other' has a larger absolute value.\r\n         */\r\n      }, {\r\n        key: \"minabs\",\r\n        value: function minabs(value, other) {\r\n          return D(value).minabs(other);\r\n        }\r\n        /**\r\n         * Returns whichever of 'value' and 'other' has a smaller absolute value.\r\n         */\r\n      }, {\r\n        key: \"maxabs\",\r\n        value: function maxabs(value, other) {\r\n          return D(value).maxabs(other);\r\n        }\r\n        /**\r\n         * A combination of minimum and maximum: the value returned by clamp is normally 'value', but it won't go below 'min' and it won't go above 'max'.\r\n         * Therefore, if 'value' < 'min', then 'min' is returned, and if 'value' > 'max', then 'max' is returned.\r\n         */\r\n      }, {\r\n        key: \"clamp\",\r\n        value: function clamp(value, min, max) {\r\n          return D(value).clamp(min, max);\r\n        }\r\n        /**\r\n         * Returns 'value', unless 'value' is less than 'min', in which case 'min' is returned.\r\n         */\r\n      }, {\r\n        key: \"clampMin\",\r\n        value: function clampMin(value, min) {\r\n          return D(value).clampMin(min);\r\n        }\r\n        /**\r\n         * Returns 'value', unless 'value' is greater than 'max', in which case 'max' is returned.\r\n         */\r\n      }, {\r\n        key: \"clampMax\",\r\n        value: function clampMax(value, max) {\r\n          return D(value).clampMax(max);\r\n        }\r\n        /**\r\n         * Returns 1 if 'value' is greater than 'other', returns -1 if 'value' is less than 'other', returns 0 if 'value' is equal to 'other'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"cmp_tolerance\",\r\n        value: function cmp_tolerance(value, other, tolerance) {\r\n          return D(value).cmp_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Returns 1 if 'value' is greater than 'other', returns -1 if 'value' is less than 'other', returns 0 if 'value' is equal to 'other'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"compare_tolerance\",\r\n        value: function compare_tolerance(value, other, tolerance) {\r\n          return D(value).cmp_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"eq_tolerance\",\r\n        value: function eq_tolerance(value, other, tolerance) {\r\n          return D(value).eq_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"equals_tolerance\",\r\n        value: function equals_tolerance(value, other, tolerance) {\r\n          return D(value).eq_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are not approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"neq_tolerance\",\r\n        value: function neq_tolerance(value, other, tolerance) {\r\n          return D(value).neq_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Tests whether two Decimals are not approximately equal, up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"notEquals_tolerance\",\r\n        value: function notEquals_tolerance(value, other, tolerance) {\r\n          return D(value).notEquals_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Returns true if 'value' is less than 'other'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"lt_tolerance\",\r\n        value: function lt_tolerance(value, other, tolerance) {\r\n          return D(value).lt_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Returns true if 'value' is less than or equal to 'other'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"lte_tolerance\",\r\n        value: function lte_tolerance(value, other, tolerance) {\r\n          return D(value).lte_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Returns true if 'value' is greater than 'other'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"gt_tolerance\",\r\n        value: function gt_tolerance(value, other, tolerance) {\r\n          return D(value).gt_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * Returns true if 'value' is greater than or equal to 'other'.\r\n         * However, the two Decimals are considered equal if they're approximately equal up to a certain tolerance.\r\n         * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n         * For example, if you put in 1e-9, then any number closer to the\r\n         * larger number than (larger number)*1e-9 will be considered equal.\r\n         */\r\n      }, {\r\n        key: \"gte_tolerance\",\r\n        value: function gte_tolerance(value, other, tolerance) {\r\n          return D(value).gte_tolerance(other, tolerance);\r\n        }\r\n        /**\r\n         * \"Positive log10\": Returns the base-10 logarithm of nonnegative Decimals, but returns 0 for negative Decimals.\r\n         */\r\n      }, {\r\n        key: \"pLog10\",\r\n        value: function pLog10(value) {\r\n          return D(value).pLog10();\r\n        }\r\n        /**\r\n         * Returns the base-10 logarithm of abs('value').\r\n         */\r\n      }, {\r\n        key: \"absLog10\",\r\n        value: function absLog10(value) {\r\n          return D(value).absLog10();\r\n        }\r\n        /**\r\n         * Base-10 logarithm: returns the Decimal X such that 10^X = 'value'.\r\n         * For numbers above layer 0, this is equivalent to subtracting 1 from layer and normalizing.\r\n         */\r\n      }, {\r\n        key: \"log10\",\r\n        value: function log10(value) {\r\n          return D(value).log10();\r\n        }\r\n        /**\r\n         * Logarithms are one of the inverses of exponentiation: this function finds the Decimal X such that base^X = 'value'.\r\n         */\r\n      }, {\r\n        key: \"log\",\r\n        value: function log(value, base) {\r\n          return D(value).log(base);\r\n        }\r\n        /**\r\n         * Base-2 logarithm: returns the Decimal X such that 2^X = 'value'.\r\n         */\r\n      }, {\r\n        key: \"log2\",\r\n        value: function log2(value) {\r\n          return D(value).log2();\r\n        }\r\n        /**\r\n         * Base-e logarithm, also known as the \"natural\" logarithm: returns the Decimal X such that e^X = 'value'.\r\n         */\r\n      }, {\r\n        key: \"ln\",\r\n        value: function ln(value) {\r\n          return D(value).ln();\r\n        }\r\n        /**\r\n         * Logarithms are one of the inverses of exponentiation: this function finds the Decimal X such that base^X = 'value'.\r\n         */\r\n      }, {\r\n        key: \"logarithm\",\r\n        value: function logarithm(value, base) {\r\n          return D(value).logarithm(base);\r\n        }\r\n        /**\r\n         * Exponentiation: Returns the result of 'value' ^ 'other' (often written as 'value' ** 'other' in programming languages).\r\n         */\r\n      }, {\r\n        key: \"pow\",\r\n        value: function pow(value, other) {\r\n          return D(value).pow(other);\r\n        }\r\n        /**\r\n         * Raises 10 to the power of 'value', i.e. (10^'value'). For positive numbers above 1, this is equivalent to adding 1 to the value's layer and normalizing.\r\n         */\r\n      }, {\r\n        key: \"pow10\",\r\n        value: function pow10(value) {\r\n          return D(value).pow10();\r\n        }\r\n        /**\r\n         * Roots are one of the inverses of exponentiation: this function finds the Decimal X such that X ^ 'other' = 'value'.\r\n         * Equivalent to 'value' ^ (1 / 'other'), which is written here as value.pow(other.recip()).\r\n         */\r\n      }, {\r\n        key: \"root\",\r\n        value: function root(value, other) {\r\n          return D(value).root(other);\r\n        }\r\n        /**\r\n         * For positive integers, X factorial (written as X!) equals X * (X - 1) * (X - 2) *... * 3 * 2 * 1. 0! equals 1.\r\n         * This can be extended to real numbers (except for negative integers) via the gamma function, which is what this function does.\r\n         */\r\n      }, {\r\n        key: \"factorial\",\r\n        value: function factorial(value, _other) {\r\n          return D(value).factorial();\r\n        }\r\n        /**\r\n         * The gamma function extends the idea of factorials to non-whole numbers using some calculus.\r\n         * Gamma(x) is defined as the integral of t^(x-1) * e^-t dt from t = 0 to t = infinity,\r\n         * and gamma(x) = (x - 1)! for nonnegative integer x, so the factorial for non-whole numbers is defined using the gamma function.\r\n         */\r\n      }, {\r\n        key: \"gamma\",\r\n        value: function gamma(value, _other) {\r\n          return D(value).gamma();\r\n        }\r\n        /**\r\n         * Returns the natural (base-e) logarithm of Gamma('value').\r\n         */\r\n      }, {\r\n        key: \"lngamma\",\r\n        value: function lngamma(value, _other) {\r\n          return D(value).lngamma();\r\n        }\r\n        /**\r\n         * Base-e exponentiation: returns e^'value'.\r\n         */\r\n      }, {\r\n        key: \"exp\",\r\n        value: function exp(value) {\r\n          return D(value).exp();\r\n        }\r\n        /**\r\n         * Squaring a number means multiplying it by itself, a.k.a. raising it to the second power.\r\n         */\r\n      }, {\r\n        key: \"sqr\",\r\n        value: function sqr(value) {\r\n          return D(value).sqr();\r\n        }\r\n        /**\r\n         * Square root: finds the Decimal X such that X * X, a.k.a X^2, equals 'value'. Equivalent to X^(1/2).\r\n         */\r\n      }, {\r\n        key: \"sqrt\",\r\n        value: function sqrt(value) {\r\n          return D(value).sqrt();\r\n        }\r\n        /**\r\n         * Cubing a number means raising it to the third power.\r\n         */\r\n      }, {\r\n        key: \"cube\",\r\n        value: function cube(value) {\r\n          return D(value).cube();\r\n        }\r\n        /**\r\n         * Cube root: finds the Decimal X such that X^3 equals 'value'. Equivalent to X^(1/3).\r\n         */\r\n      }, {\r\n        key: \"cbrt\",\r\n        value: function cbrt(value) {\r\n          return D(value).cbrt();\r\n        }\r\n        /**\r\n         *\r\n         * Tetration: The result of exponentiating 'value' to 'value' 'height' times in a row.  https://en.wikipedia.org/wiki/Tetration\r\n         *\r\n         * If payload != 1, then this is 'iterated exponentiation', the result of exping 'payload' to base 'value' 'height' times. https://andydude.github.io/tetration/archives/tetration2/ident.html\r\n         *\r\n         * Works with negative and positive real heights. Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"tetrate\",\r\n        value: function tetrate(value) {\r\n          var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\r\n          var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\r\n          var linear = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n          return D(value).tetrate(height, payload, linear);\r\n        }\r\n        /**\r\n         * Iterated exponentiation, the result of exping 'payload' to base 'value' 'height' times. https://andydude.github.io/tetration/archives/tetration2/ident.html\r\n         *\r\n         * Works with negative and positive real heights. Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         *\r\n         * Identical to tetrate.\r\n         */\r\n      }, {\r\n        key: \"iteratedexp\",\r\n        value: function iteratedexp(value) {\r\n          var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\r\n          var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\r\n          var linear = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n          return D(value).iteratedexp(height, payload, linear);\r\n        }\r\n        /**\r\n         * iterated log/repeated log: The result of applying log(base) 'times' times in a row. Approximately equal to subtracting 'times' from the number's slog representation. Equivalent to tetrating to a negative height.\r\n         *\r\n         * Works with negative and positive real heights. Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"iteratedlog\",\r\n        value: function iteratedlog(value) {\r\n          var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\r\n          var times = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n          var linear = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n          return D(value).iteratedlog(base, times, linear);\r\n        }\r\n        /**\r\n         * Adds/removes layers from a Decimal, even fractional layers (e.g. its slog10 representation). Very similar to tetrate base 10 and iterated log base 10.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"layeradd10\",\r\n        value: function layeradd10(value, diff) {\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          return D(value).layeradd10(diff, linear);\r\n        }\r\n        /**\r\n         * layeradd: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 'base' and iterated log base 'base'.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"layeradd\",\r\n        value: function layeradd(value, diff) {\r\n          var base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\r\n          var linear = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n          return D(value).layeradd(diff, base, linear);\r\n        }\r\n        /**\r\n         * Super-logarithm, one of tetration's inverses, tells you what size power tower you'd have to tetrate 'base' to to get 'value'. https://en.wikipedia.org/wiki/Super-logarithm\r\n         *\r\n         * By definition, will never be higher than 1.8e308 in break_eternity.js, since a power tower 1.8e308 numbers tall is the largest representable number.\r\n         *\r\n         * Accepts a number of iterations (default is 100), and use binary search to, after making an initial guess, hone in on the true value, assuming tetration as the ground truth.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         */\r\n      }, {\r\n        key: \"slog\",\r\n        value: function slog(value) {\r\n          var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          return D(value).slog(base, 100, linear);\r\n        }\r\n        /**\r\n         * The Lambert W function, also called the omega function or product logarithm, is the solution W(x) === x*e^x.\r\n         * https://en.wikipedia.org/wiki/Lambert_W_function\r\n         *\r\n         * This is a multi-valued function in the complex plane, but only two branches matter for real numbers: the \"principal branch\" W0, and the \"non-principal branch\" W_-1.\r\n         * W_0 works for any number >= -1/e, but W_-1 only works for negative numbers >= -1/e.\r\n         * The \"principal\" parameter, which is true by default, decides which branch we're looking for: W_0 is used if principal is true, W_-1 is used if principal is false.\r\n         */\r\n      }, {\r\n        key: \"lambertw\",\r\n        value: function lambertw(value, principal) {\r\n          return D(value).lambertw(principal);\r\n        }\r\n        /**\r\n         * The super square-root function - what number, tetrated to height 2, equals 'value'? https://en.wikipedia.org/wiki/Tetration#Super-root\r\n         */\r\n      }, {\r\n        key: \"ssqrt\",\r\n        value: function ssqrt(value) {\r\n          return D(value).ssqrt();\r\n        }\r\n        /**\r\n         * Super-root, one of tetration's inverses - what number, tetrated to height 'degree', equals 'value'? https://en.wikipedia.org/wiki/Tetration#Super-root\r\n         *\r\n         * Only works with the linear approximation of tetration, as starting with analytic and then switching to linear would result in inconsistent behavior for super-roots.\r\n         * This only matters for non-integer degrees.\r\n         */\r\n      }, {\r\n        key: \"linear_sroot\",\r\n        value: function linear_sroot(value, degree) {\r\n          return D(value).linear_sroot(degree);\r\n        }\r\n        /**\r\n         * Pentation/pentate: The result of tetrating 'height' times in a row. An absurdly strong operator - Decimal.pentate(2, 4.28) and Decimal.pentate(10, 2.37) are already too huge for break_eternity.js!\r\n         * https://en.wikipedia.org/wiki/Pentation\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         *\r\n         * For non-whole pentation heights, the linear approximation of pentation is always used, as there is no defined analytic approximation of pentation.\r\n         */\r\n      }, {\r\n        key: \"pentate\",\r\n        value: function pentate(value) {\r\n          var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\r\n          var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\r\n          var linear = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n          return D(value).pentate(height, payload, linear);\r\n        }\r\n        /**\r\n         * Penta-logarithm, one of pentation's inverses, tells you what height you'd have to pentate 'base' to to get 'value'.\r\n         *\r\n         * Grows incredibly slowly. For bases above 2, you won't be seeing a result greater than 5 out of this function.\r\n         *\r\n         * Accepts a number of iterations (default is 100), and use binary search to, after making an initial guess, hone in on the true value, assuming pentation as the ground truth.\r\n         *\r\n         * Tetration for non-integer heights does not have a single agreed-upon definition,\r\n         * so this library uses an analytic approximation for bases <= 10, but it reverts to the linear approximation for bases > 10.\r\n         * If you want to use the linear approximation even for bases <= 10, set the linear parameter to true.\r\n         * Analytic approximation is not currently supported for bases > 10.\r\n         *\r\n         * For non-whole pentation heights, the linear approximation of pentation is always used, as there is no defined analytic approximation of pentation.\r\n         */\r\n      }, {\r\n        key: \"penta_log\",\r\n        value: function penta_log(value) {\r\n          var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          return D(value).penta_log(base, 100, linear);\r\n        }\r\n        /**\r\n         * Penta-root, one of pentation's inverses - what number, pentated to height 'degree', equals 'value'?\r\n         *\r\n         * Only works with the linear approximation of tetration, as starting with analytic and then switching to linear would result in inconsistent behavior for super-roots.\r\n         */\r\n      }, {\r\n        key: \"linear_penta_root\",\r\n        value: function linear_penta_root(value, degree) {\r\n          return D(value).linear_penta_root(degree);\r\n        }\r\n        /**\r\n         * The sine function, one of the main two trigonometric functions. Behaves periodically with period 2*pi.\r\n         */\r\n      }, {\r\n        key: \"sin\",\r\n        value: function sin(value) {\r\n          return D(value).sin();\r\n        }\r\n        /**\r\n         * The cosine function, one of the main two trigonometric functions. Behaves periodically with period 2*pi.\r\n         */\r\n      }, {\r\n        key: \"cos\",\r\n        value: function cos(value) {\r\n          return D(value).cos();\r\n        }\r\n        /**\r\n         * The tangent function, equal to sine divided by cosine. Behaves periodically with period pi.\r\n         */\r\n      }, {\r\n        key: \"tan\",\r\n        value: function tan(value) {\r\n          return D(value).tan();\r\n        }\r\n        /**\r\n         * The arcsine function, the inverse of the sine function.\r\n         */\r\n      }, {\r\n        key: \"asin\",\r\n        value: function asin(value) {\r\n          return D(value).asin();\r\n        }\r\n        /**\r\n         * The arccosine function, the inverse of the cosine function.\r\n         */\r\n      }, {\r\n        key: \"acos\",\r\n        value: function acos(value) {\r\n          return D(value).acos();\r\n        }\r\n        /**\r\n         * The arctangent function, the inverse of the tangent function.\r\n         */\r\n      }, {\r\n        key: \"atan\",\r\n        value: function atan(value) {\r\n          return D(value).atan();\r\n        }\r\n        /**\r\n         * Hyperbolic sine: sinh(X) = (e^x - e^-x)/2.\r\n         */\r\n      }, {\r\n        key: \"sinh\",\r\n        value: function sinh(value) {\r\n          return D(value).sinh();\r\n        }\r\n        /**\r\n         * Hyperbolic cosine: cosh(x) = (e^x + e^-x)/2.\r\n         */\r\n      }, {\r\n        key: \"cosh\",\r\n        value: function cosh(value) {\r\n          return D(value).cosh();\r\n        }\r\n        /**\r\n         * Hyperbolic tangent: tanh(x) = sinh(x)/cosh(x).\r\n         */\r\n      }, {\r\n        key: \"tanh\",\r\n        value: function tanh(value) {\r\n          return D(value).tanh();\r\n        }\r\n        /**\r\n         * Hyperbolic arcsine, the inverse of hyperbolic sine.\r\n         */\r\n      }, {\r\n        key: \"asinh\",\r\n        value: function asinh(value) {\r\n          return D(value).asinh();\r\n        }\r\n        /**\r\n         * Hyperbolic arccosine, the inverse of hyperbolic cosine.\r\n         */\r\n      }, {\r\n        key: \"acosh\",\r\n        value: function acosh(value) {\r\n          return D(value).acosh();\r\n        }\r\n        /**\r\n         * Hyperbolic arcctangent, the inverse of hyperbolic tangent.\r\n         */\r\n      }, {\r\n        key: \"atanh\",\r\n        value: function atanh(value) {\r\n          return D(value).atanh();\r\n        }\r\n        /**\r\n         * If you're willing to spend 'resourcesAvailable' and want to buy something\r\n         * with exponentially increasing cost each purchase (start at priceStart,\r\n         * multiply by priceRatio, already own currentOwned), how much of it can you buy?\r\n         * Adapted from Trimps source code.\r\n         */\r\n      }, {\r\n        key: \"affordGeometricSeries\",\r\n        value: function affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\r\n          return this.affordGeometricSeries_core(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\r\n        }\r\n        /**\r\n         * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n         * the initial price is priceStart and it multiplies by priceRatio each purchase?\r\n         */\r\n      }, {\r\n        key: \"sumGeometricSeries\",\r\n        value: function sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\r\n          return this.sumGeometricSeries_core(numItems, D(priceStart), D(priceRatio), currentOwned);\r\n        }\r\n        /**\r\n         * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\r\n         * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\r\n         * how much of it can you buy?\r\n         */\r\n      }, {\r\n        key: \"affordArithmeticSeries\",\r\n        value: function affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\r\n          return this.affordArithmeticSeries_core(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\r\n        }\r\n        /**\r\n         * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n         * the initial price is priceStart and it adds priceAdd each purchase?\r\n         * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\r\n         */\r\n      }, {\r\n        key: \"sumArithmeticSeries\",\r\n        value: function sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\r\n          return this.sumArithmeticSeries_core(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\r\n        }\r\n        /**\r\n         * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\r\n         * the lowest efficiency score is the better one to purchase.\r\n         * From Frozen Cookies:\r\n         * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\r\n         */\r\n      }, {\r\n        key: \"efficiencyOfPurchase\",\r\n        value: function efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\r\n          return this.efficiencyOfPurchase_core(D(cost), D(currentRpS), D(deltaRpS));\r\n        }\r\n      }, {\r\n        key: \"randomDecimalForTesting\",\r\n        value: function randomDecimalForTesting(maxLayers) {\r\n          // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\r\n          //5% of the time, return 0\r\n          if (Math.random() * 20 < 1) {\r\n            return FC_NN(0, 0, 0);\r\n          }\r\n          var randomsign = Math.random() > 0.5 ? 1 : -1;\r\n          //5% of the time, return 1 or -1\r\n          if (Math.random() * 20 < 1) {\r\n            return FC_NN(randomsign, 0, 1);\r\n          }\r\n          //pick a random layer\r\n          var layer = Math.floor(Math.random() * (maxLayers + 1));\r\n          var randomexp = layer === 0 ? Math.random() * 616 - 308 : Math.random() * 16;\r\n          //10% of the time, make it a simple power of 10\r\n          if (Math.random() > 0.9) {\r\n            randomexp = Math.trunc(randomexp);\r\n          }\r\n          var randommag = Math.pow(10, randomexp);\r\n          //10% of the time, trunc mag\r\n          if (Math.random() > 0.9) {\r\n            randommag = Math.trunc(randommag);\r\n          }\r\n          return FC(randomsign, layer, randommag);\r\n        }\r\n      }, {\r\n        key: \"affordGeometricSeries_core\",\r\n        value: function affordGeometricSeries_core(resourcesAvailable, priceStart, priceRatio, currentOwned) {\r\n          var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\r\n          return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10().div(priceRatio.log10()));\r\n        }\r\n      }, {\r\n        key: \"sumGeometricSeries_core\",\r\n        value: function sumGeometricSeries_core(numItems, priceStart, priceRatio, currentOwned) {\r\n          return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\r\n        }\r\n      }, {\r\n        key: \"affordArithmeticSeries_core\",\r\n        value: function affordArithmeticSeries_core(resourcesAvailable, priceStart, priceAdd, currentOwned) {\r\n          // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\r\n          // where a is actualStart, d is priceAdd and S is resourcesAvailable\r\n          // then floor it and you're done!\r\n          var actualStart = priceStart.add(currentOwned.mul(priceAdd));\r\n          var b = actualStart.sub(priceAdd.div(2));\r\n          var b2 = b.pow(2);\r\n          return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\r\n        }\r\n      }, {\r\n        key: \"sumArithmeticSeries_core\",\r\n        value: function sumArithmeticSeries_core(numItems, priceStart, priceAdd, currentOwned) {\r\n          var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\r\n          return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\r\n        }\r\n      }, {\r\n        key: \"efficiencyOfPurchase_core\",\r\n        value: function efficiencyOfPurchase_core(cost, currentRpS, deltaRpS) {\r\n          return cost.div(currentRpS).add(cost.div(deltaRpS));\r\n        }\r\n      }, {\r\n        key: \"slog_critical\",\r\n        value: function slog_critical(base, height) {\r\n          //TODO: for bases above 10, revert to old linear approximation until I can think of something better\r\n          if (base > 10) {\r\n            return height - 1;\r\n          }\r\n          return Decimal.critical_section(base, height, critical_slog_values);\r\n        }\r\n      }, {\r\n        key: \"tetrate_critical\",\r\n        value: function tetrate_critical(base, height) {\r\n          return Decimal.critical_section(base, height, critical_tetr_values);\r\n        }\r\n      }, {\r\n        key: \"critical_section\",\r\n        value: function critical_section(base, height, grid) {\r\n          //this part is simple at least, since it's just 0.1 to 0.9\r\n          height *= 10;\r\n          if (height < 0) {\r\n            height = 0;\r\n          }\r\n          if (height > 10) {\r\n            height = 10;\r\n          }\r\n          //have to do this complicated song and dance since one of the critical_headers is Math.E, and in the future I'd like 1.5 as well\r\n          if (base < 2) {\r\n            base = 2;\r\n          }\r\n          if (base > 10) {\r\n            base = 10;\r\n          }\r\n          var lower = 0;\r\n          var upper = 0;\r\n          //basically, if we're between bases, we interpolate each bases' relevant values together\r\n          //then we interpolate based on what the fractional height is.\r\n          //accuracy could be improved by doing a non-linear interpolation (maybe), by adding more bases and heights (definitely) but this is AFAIK the best you can get without running some pari.gp or mathematica program to calculate exact values\r\n          //however, do note http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html can do it for arbitrary heights but not for arbitrary bases (2, e, 10 present)\r\n          for (var i = 0; i < critical_headers.length; ++i) {\r\n            if (critical_headers[i] == base) {\r\n              // exact match\r\n              lower = grid[i][Math.floor(height)];\r\n              upper = grid[i][Math.ceil(height)];\r\n              break;\r\n            } else if (critical_headers[i] < base && critical_headers[i + 1] > base) {\r\n              // interpolate between this and the next\r\n              var basefrac = (base - critical_headers[i]) / (critical_headers[i + 1] - critical_headers[i]);\r\n              lower = grid[i][Math.floor(height)] * (1 - basefrac) + grid[i + 1][Math.floor(height)] * basefrac;\r\n              upper = grid[i][Math.ceil(height)] * (1 - basefrac) + grid[i + 1][Math.ceil(height)] * basefrac;\r\n              break;\r\n            }\r\n          }\r\n          var frac = height - Math.floor(height);\r\n          //improvement - you get more accuracy (especially around 0.9-1.0) by doing log, then frac, then powing the result\r\n          //(we could pre-log the lookup table, but then fractional bases would get Weird)\r\n          //also, use old linear for slog (values 0 or less in critical section). maybe something else is better but haven't thought about what yet\r\n          if (lower <= 0 || upper <= 0) {\r\n            return lower * (1 - frac) + upper * frac;\r\n          } else {\r\n            return Math.pow(base, Math.log(lower) / Math.log(base) * (1 - frac) + Math.log(upper) / Math.log(base) * frac);\r\n          }\r\n        }\r\n      }, {\r\n        key: \"excess_slog\",\r\n        value: function excess_slog(value, base) {\r\n          var linear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n          value = D(value);\r\n          base = D(base);\r\n          var baseD = base;\r\n          base = base.toNumber();\r\n          if (base == 1 || base <= 0) return [new Decimal(Decimal.dNaN), 0];\r\n          if (base > 1.44466786100976613366) return [value.slog(base, 100, linear), 0];\r\n          var negln = Decimal.ln(base).neg();\r\n          var lower = negln.lambertw().div(negln);\r\n          var upper = Decimal.dInf;\r\n          if (base > 1) upper = negln.lambertw(false).div(negln);\r\n          if (base > 1.444667861009099) {\r\n            lower = upper = Decimal.fromNumber(Math.E);\r\n          }\r\n          if (value.lt(lower)) return [value.slog(base, 100, linear), 0];\r\n          if (value.eq(lower)) return [new Decimal(Decimal.dInf), 0];\r\n          if (value.eq(upper)) return [new Decimal(Decimal.dNegInf), 2];\r\n          if (value.gt(upper)) {\r\n            var slogzero = upper.mul(2);\r\n            var slogone = baseD.pow(slogzero);\r\n            var estimate = 0;\r\n            if (value.gte(slogzero) && value.lt(slogone)) estimate = 0;else if (value.gte(slogone)) {\r\n              var payload = slogone;\r\n              estimate = 1;\r\n              while (payload.lt(value)) {\r\n                payload = baseD.pow(payload);\r\n                estimate = estimate + 1;\r\n                if (payload.layer > 3) {\r\n                  var layersleft = Math.floor(value.layer - payload.layer + 1);\r\n                  payload = baseD.iteratedexp(layersleft, payload, linear);\r\n                  estimate = estimate + layersleft;\r\n                }\r\n              }\r\n              if (payload.gt(value)) {\r\n                payload = payload.log(base);\r\n                estimate = estimate - 1;\r\n              }\r\n            } else if (value.lt(slogzero)) {\r\n              var _payload5 = slogzero;\r\n              estimate = 0;\r\n              while (_payload5.gt(value)) {\r\n                _payload5 = _payload5.log(base);\r\n                estimate = estimate - 1;\r\n              }\r\n            }\r\n            var fracheight = 0;\r\n            var tested = 0;\r\n            var step_size = 0.5;\r\n            var towertop = slogzero;\r\n            var guess = Decimal.dZero;\r\n            while (step_size > 1e-16) {\r\n              tested = fracheight + step_size;\r\n              towertop = slogzero.pow(1 - tested).mul(slogone.pow(tested)); //Weighted geometric average\r\n              guess = Decimal.iteratedexp(base, estimate, towertop);\r\n              if (guess.eq(value)) return [new Decimal(estimate + tested), 2];else if (guess.lt(value)) fracheight += step_size;\r\n              step_size /= 2;\r\n            }\r\n            if (guess.neq_tolerance(value, 1e-7)) return [new Decimal(Decimal.dNaN), 0];\r\n            return [new Decimal(estimate + fracheight), 2];\r\n          }\r\n          if (value.lt(upper) && value.gt(lower)) {\r\n            var _slogzero = lower.mul(upper).sqrt(); //Geometric mean of the two b^x = x solutions\r\n            var _slogone = baseD.pow(_slogzero);\r\n            var _estimate = 0;\r\n            if (value.lte(_slogzero) && value.gt(_slogone)) _estimate = 0;else if (value.lte(_slogone)) {\r\n              var _payload6 = _slogone;\r\n              _estimate = 1;\r\n              while (_payload6.gt(value)) {\r\n                _payload6 = baseD.pow(_payload6);\r\n                _estimate = _estimate + 1;\r\n              }\r\n              if (_payload6.lt(value)) {\r\n                _payload6 = _payload6.log(base);\r\n                _estimate = _estimate - 1;\r\n              }\r\n            } else if (value.gt(_slogzero)) {\r\n              var _payload7 = _slogzero;\r\n              _estimate = 0;\r\n              while (_payload7.lt(value)) {\r\n                _payload7 = _payload7.log(base);\r\n                _estimate = _estimate - 1;\r\n              }\r\n            }\r\n            var _fracheight = 0;\r\n            var _tested = 0;\r\n            var _step_size = 0.5;\r\n            var _towertop = _slogzero;\r\n            var _guess2 = Decimal.dZero;\r\n            while (_step_size > 1e-16) {\r\n              _tested = _fracheight + _step_size;\r\n              _towertop = _slogzero.pow(1 - _tested).mul(_slogone.pow(_tested)); //Weighted geometric average\r\n              _guess2 = Decimal.iteratedexp(base, _estimate, _towertop);\r\n              if (_guess2.eq(value)) return [new Decimal(_estimate + _tested), 1];else if (_guess2.gt(value)) _fracheight += _step_size;\r\n              _step_size /= 2;\r\n            }\r\n            if (_guess2.neq_tolerance(value, 1e-7)) return [new Decimal(Decimal.dNaN), 0];\r\n            return [new Decimal(_estimate + _fracheight), 1];\r\n          }\r\n          throw new Error(\"Unhandled behavior in excess_slog\");\r\n        }\r\n      }, {\r\n        key: \"increasingInverse\",\r\n        value: function increasingInverse(func) {\r\n          var decreasing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n          var iterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 120;\r\n          var minX = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Decimal.dLayerMax.neg();\r\n          var maxX = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Decimal.dLayerMax;\r\n          var minY = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Decimal.dLayerMax.neg();\r\n          var maxY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Decimal.dLayerMax;\r\n          return function (value) {\r\n            value = new Decimal(value);\r\n            minX = new Decimal(minX);\r\n            maxX = new Decimal(maxX);\r\n            minY = new Decimal(minY);\r\n            maxY = new Decimal(maxY);\r\n            if (value.isNan() || maxX.lt(minX) || value.lt(minY) || value.gt(maxY)) return new Decimal(Decimal.dNaN);\r\n            // Before actually doing the search, let's determine what range we're looking at. First-class function shenanigans incoming.\r\n            var rangeApply = function rangeApply(value) {\r\n              return new Decimal(value);\r\n            };\r\n            var currentCheck = true; // Checking whether the inverse is positive\r\n            if (maxX.lt(0)) currentCheck = false;else if (minX.gt(0)) currentCheck = true;else {\r\n              var valCheck = func(Decimal.dZero);\r\n              if (valCheck.eq(value)) return FC_NN(0, 0, 0);\r\n              currentCheck = value.gt(valCheck);\r\n              if (decreasing) currentCheck = !currentCheck;\r\n            }\r\n            var positive = currentCheck;\r\n            var reciprocal;\r\n            if (currentCheck) {\r\n              // Checking whether the inverse is below 1/9e15\r\n              if (maxX.lt(FIRST_NEG_LAYER)) currentCheck = true;else if (minX.gt(FIRST_NEG_LAYER)) currentCheck = false;else {\r\n                var _valCheck = func(new Decimal(FIRST_NEG_LAYER));\r\n                currentCheck = value.lt(_valCheck);\r\n                if (decreasing) currentCheck = !currentCheck;\r\n              }\r\n              if (currentCheck) {\r\n                reciprocal = true;\r\n                // Checking whether the inverse is above 1/e9e15\r\n                var limit = Decimal.pow(10, EXP_LIMIT).recip();\r\n                if (maxX.lt(limit)) currentCheck = false;else if (minX.gt(limit)) currentCheck = true;else {\r\n                  var _valCheck2 = func(new Decimal(limit));\r\n                  currentCheck = value.gt(_valCheck2);\r\n                  if (decreasing) currentCheck = !currentCheck;\r\n                }\r\n                // If the inverse is between 1/e9e15 and 1/9e15, search through layer -1 numbers.\r\n                if (currentCheck) rangeApply = function rangeApply(value) {\r\n                  return Decimal.pow(10, value).recip();\r\n                };else {\r\n                  // Checking whether the inverse is above 1/10^^9e15\r\n                  var _limit = Decimal.tetrate(10, EXP_LIMIT);\r\n                  if (maxX.lt(_limit)) currentCheck = false;else if (minX.gt(_limit)) currentCheck = true;else {\r\n                    var _valCheck3 = func(new Decimal(_limit));\r\n                    currentCheck = value.gt(_valCheck3);\r\n                    if (decreasing) currentCheck = !currentCheck;\r\n                  }\r\n                  // If the inverse is between 1/10^^9e15 and 1/e9e15, search through reciprocals of negative layers themselves.\r\n                  if (currentCheck) rangeApply = function rangeApply(value) {\r\n                    return Decimal.tetrate(10, new Decimal(value).toNumber()).recip();\r\n                  };\r\n                  // If the inverse is below 1/10^^9e15, search through reciprocals of exponents of layers.\r\n                  else rangeApply = function rangeApply(value) {\r\n                    return new Decimal(value).gt(Math.log10(Number.MAX_VALUE)) ? Decimal.dZero : Decimal.tetrate(10, Decimal.pow(10, value).toNumber()).recip();\r\n                  };\r\n                }\r\n              } else {\r\n                reciprocal = false;\r\n                // Checking whether the inverse is below 9e15\r\n                if (maxX.lt(EXP_LIMIT)) currentCheck = true;else if (minX.gt(EXP_LIMIT)) currentCheck = false;else {\r\n                  var _valCheck4 = func(new Decimal(EXP_LIMIT));\r\n                  currentCheck = value.lt(_valCheck4);\r\n                  if (decreasing) currentCheck = !currentCheck;\r\n                }\r\n                // If the inverse is between 1/9e15 and 9e15, search through direct (layer 0) numbers.\r\n                if (currentCheck) rangeApply = function rangeApply(value) {\r\n                  return new Decimal(value);\r\n                };else {\r\n                  // Checking whether the inverse is below e9e15\r\n                  var _limit2 = Decimal.pow(10, EXP_LIMIT);\r\n                  if (maxX.lt(_limit2)) currentCheck = true;else if (minX.gt(_limit2)) currentCheck = false;else {\r\n                    var _valCheck5 = func(new Decimal(_limit2));\r\n                    currentCheck = value.lt(_valCheck5);\r\n                    if (decreasing) currentCheck = !currentCheck;\r\n                  }\r\n                  // If the inverse is between 9e15 and e9e15, search through layer 1 numbers.\r\n                  if (currentCheck) rangeApply = function rangeApply(value) {\r\n                    return Decimal.pow(10, value);\r\n                  };else {\r\n                    // Checking whether the inverse is below 10^^9e15\r\n                    var _limit3 = Decimal.tetrate(10, EXP_LIMIT);\r\n                    if (maxX.lt(_limit3)) currentCheck = true;else if (minX.gt(_limit3)) currentCheck = false;else {\r\n                      var _valCheck6 = func(new Decimal(_limit3));\r\n                      currentCheck = value.lt(_valCheck6);\r\n                      if (decreasing) currentCheck = !currentCheck;\r\n                    }\r\n                    // If the inverse is between e9e15 and 10^^9e15, search through layers themselves.\r\n                    if (currentCheck) rangeApply = function rangeApply(value) {\r\n                      return Decimal.tetrate(10, new Decimal(value).toNumber());\r\n                    };\r\n                    // If the inverse is above 10^^9e15, search through exponents of layers.\r\n                    else rangeApply = function rangeApply(value) {\r\n                      return new Decimal(value).gt(Math.log10(Number.MAX_VALUE)) ? Decimal.dInf : Decimal.tetrate(10, Decimal.pow(10, value).toNumber());\r\n                    };\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              reciprocal = true;\r\n              // Checking whether the inverse is above -1/9e15\r\n              if (maxX.lt(-FIRST_NEG_LAYER)) currentCheck = false;else if (minX.gt(-FIRST_NEG_LAYER)) currentCheck = true;else {\r\n                var _valCheck7 = func(new Decimal(-FIRST_NEG_LAYER));\r\n                currentCheck = value.gt(_valCheck7);\r\n                if (decreasing) currentCheck = !currentCheck;\r\n              }\r\n              if (currentCheck) {\r\n                // Checking whether the inverse is below -1/e9e15\r\n                var _limit4 = Decimal.pow(10, EXP_LIMIT).recip().neg();\r\n                if (maxX.lt(_limit4)) currentCheck = true;else if (minX.gt(_limit4)) currentCheck = false;else {\r\n                  var _valCheck8 = func(new Decimal(_limit4));\r\n                  currentCheck = value.lt(_valCheck8);\r\n                  if (decreasing) currentCheck = !currentCheck;\r\n                }\r\n                // If the inverse is between -1/e9e15 and -1/9e15, search through negatives of layer -1 numbers.\r\n                if (currentCheck) rangeApply = function rangeApply(value) {\r\n                  return Decimal.pow(10, value).recip().neg();\r\n                };else {\r\n                  // Checking whether the inverse is below -1/10^^9e15\r\n                  var _limit5 = Decimal.tetrate(10, EXP_LIMIT).neg();\r\n                  if (maxX.lt(_limit5)) currentCheck = true;else if (minX.gt(_limit5)) currentCheck = false;else {\r\n                    var _valCheck9 = func(new Decimal(_limit5));\r\n                    currentCheck = value.lt(_valCheck9);\r\n                    if (decreasing) currentCheck = !currentCheck;\r\n                  }\r\n                  // If the inverse is between -1/10^^9e15 and -1/e9e15, search through reciprocals of negative layers themselves.\r\n                  if (currentCheck) rangeApply = function rangeApply(value) {\r\n                    return Decimal.tetrate(10, new Decimal(value).toNumber()).recip().neg();\r\n                  };\r\n                  // If the inverse is above -1/10^^9e15, search through exponents of reciprocals of negative layers.\r\n                  else rangeApply = function rangeApply(value) {\r\n                    return new Decimal(value).gt(Math.log10(Number.MAX_VALUE)) ? Decimal.dZero : Decimal.tetrate(10, Decimal.pow(10, value).toNumber()).recip().neg();\r\n                  };\r\n                }\r\n              } else {\r\n                reciprocal = false;\r\n                // Checking whether the inverse is above -9e15\r\n                if (maxX.lt(-EXP_LIMIT)) currentCheck = false;else if (minX.gt(-EXP_LIMIT)) currentCheck = true;else {\r\n                  var _valCheck10 = func(new Decimal(-EXP_LIMIT));\r\n                  currentCheck = value.gt(_valCheck10);\r\n                  if (decreasing) currentCheck = !currentCheck;\r\n                }\r\n                // If the inverse is between -1/9e15 and -9e15, search through negatives of direct (layer 0) numbers.\r\n                if (currentCheck) rangeApply = function rangeApply(value) {\r\n                  return Decimal.neg(value);\r\n                };else {\r\n                  // Checking whether the inverse is above -e9e15\r\n                  var _limit6 = Decimal.pow(10, EXP_LIMIT).neg();\r\n                  if (maxX.lt(_limit6)) currentCheck = false;else if (minX.gt(_limit6)) currentCheck = true;else {\r\n                    var _valCheck11 = func(new Decimal(_limit6));\r\n                    currentCheck = value.gt(_valCheck11);\r\n                    if (decreasing) currentCheck = !currentCheck;\r\n                  }\r\n                  // If the inverse is between -9e15 and -e9e15, search through negatives of layer 1 numbers.\r\n                  if (currentCheck) rangeApply = function rangeApply(value) {\r\n                    return Decimal.pow(10, value).neg();\r\n                  };else {\r\n                    // Checking whether the inverse is above -10^^9e15\r\n                    var _limit7 = Decimal.tetrate(10, EXP_LIMIT).neg();\r\n                    if (maxX.lt(_limit7)) currentCheck = false;else if (minX.gt(_limit7)) currentCheck = true;else {\r\n                      var _valCheck12 = func(new Decimal(_limit7));\r\n                      currentCheck = value.gt(_valCheck12);\r\n                      if (decreasing) currentCheck = !currentCheck;\r\n                    }\r\n                    // If the inverse is between e9e15 and 10^^9e15, search through negatives of layers themselves.\r\n                    if (currentCheck) rangeApply = function rangeApply(value) {\r\n                      return Decimal.tetrate(10, new Decimal(value).toNumber()).neg();\r\n                    };\r\n                    // If the inverse is below -10^^9e15, search through negatives of exponents of layers.\r\n                    else rangeApply = function rangeApply(value) {\r\n                      return new Decimal(value).gt(Math.log10(Number.MAX_VALUE)) ? Decimal.dNegInf : Decimal.tetrate(10, Decimal.pow(10, value).toNumber()).neg();\r\n                    };\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            var searchIncreasing = positive != reciprocal != decreasing;\r\n            var comparative = searchIncreasing ? function (a, b) {\r\n              return Decimal.gt(a, b);\r\n            } : function (a, b) {\r\n              return Decimal.lt(a, b);\r\n            };\r\n            var step_size = 0.001;\r\n            var has_changed_directions_once = false;\r\n            var previously_rose = false;\r\n            var result = 1;\r\n            var appliedResult = Decimal.dOne;\r\n            var oldresult = 0;\r\n            var critical = false;\r\n            for (var i = 1; i < iterations; ++i) {\r\n              critical = false;\r\n              oldresult = result;\r\n              appliedResult = rangeApply(result);\r\n              //Under no circumstances should we be calling func on something outside its domain.\r\n              if (appliedResult.gt(maxX)) {\r\n                appliedResult = maxX;\r\n                critical = true;\r\n              }\r\n              if (appliedResult.lt(minX)) {\r\n                appliedResult = minX;\r\n                critical = true;\r\n              }\r\n              var new_decimal = func(appliedResult);\r\n              if (new_decimal.eq(value) && !critical) {\r\n                break;\r\n              }\r\n              var currently_rose = comparative(new_decimal, value);\r\n              if (i > 1) {\r\n                if (previously_rose != currently_rose) {\r\n                  has_changed_directions_once = true;\r\n                }\r\n              }\r\n              previously_rose = currently_rose;\r\n              if (has_changed_directions_once) {\r\n                step_size /= 2;\r\n              } else {\r\n                step_size *= 2;\r\n              }\r\n              // If the inverse is trying to increase when it's already at maxX, or it's trying to decrease when it's already at minX, it's going outside the domain, so return NaN.\r\n              if (currently_rose != searchIncreasing && appliedResult.eq(maxX) || currently_rose == searchIncreasing && appliedResult.eq(minX)) return new Decimal(Decimal.dNaN);\r\n              step_size = Math.abs(step_size) * (currently_rose ? -1 : 1);\r\n              result += step_size;\r\n              if (step_size === 0 || oldresult == result) {\r\n                break;\r\n              }\r\n            }\r\n            return rangeApply(result);\r\n          };\r\n        }\r\n      }]);\r\n      return Decimal;\r\n    }();\r\n    Decimal.dZero = FC_NN(0, 0, 0);\r\n    /**\r\n     * Represents the number 1.\r\n     */\r\n    Decimal.dOne = FC_NN(1, 0, 1);\r\n    /**\r\n     * Represents the number -1.\r\n     */\r\n    Decimal.dNegOne = FC_NN(-1, 0, 1);\r\n    /**\r\n     * Represents the number 2.\r\n     */\r\n    Decimal.dTwo = FC_NN(1, 0, 2);\r\n    /**\r\n     * Represents the number 10.\r\n     */\r\n    Decimal.dTen = FC_NN(1, 0, 10);\r\n    /**\r\n     * Represents a NaN (Not A Number) value.\r\n     */\r\n    Decimal.dNaN = FC_NN(Number.NaN, Number.NaN, Number.NaN);\r\n    /**\r\n     * Represents positive infinity.\r\n     */\r\n    Decimal.dInf = FC_NN(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\r\n    /**\r\n     * Represents negative infinity.\r\n     */\r\n    Decimal.dNegInf = FC_NN(-1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\r\n    /**\r\n     * Represents the largest value a JavaScript number can have, which is approximately 1.79 * 10^308.\r\n     */\r\n    Decimal.dNumberMax = FC(1, 0, Number.MAX_VALUE);\r\n    /**\r\n     * Represents the smallest value a JavaScript number can have, which is approximately 5 * 10^-324.\r\n     */\r\n    Decimal.dNumberMin = FC(1, 0, Number.MIN_VALUE);\r\n    /**\r\n     * Represents the largest Decimal where adding 1 to the layer is a safe operation\r\n     * (Decimals larger than this are too big for pow/exp/log to affect, but tetrate/iteratedlog/slog can still affect them).\r\n     * Approximately 10^^(9.007 * 10^15).\r\n     */\r\n    Decimal.dLayerSafeMax = FC(1, Number.MAX_SAFE_INTEGER, EXP_LIMIT - 1);\r\n    /**\r\n     * Represents the smallest Decimal where adding 1 to the layer is a safe operation. Approximately 1 / (10^^(9.007 * 10^15)).\r\n     */\r\n    Decimal.dLayerSafeMin = FC(1, Number.MAX_SAFE_INTEGER, -(EXP_LIMIT - 1));\r\n    /**\r\n     * Represents the largest finite value a Decimal can represent. Approximately 10^^(1.79 * 10^308).\r\n     */\r\n    Decimal.dLayerMax = FC(1, Number.MAX_VALUE, EXP_LIMIT - 1);\r\n    /**\r\n     * Represents the smallest non-zero value a Decimal can represent. Approximately 1 / (10^^(1.79 * 10^308)).\r\n     */\r\n    Decimal.dLayerMin = FC(1, Number.MAX_VALUE, -(EXP_LIMIT - 1));\r\n    Decimal.fromStringCache = new LRUCache(DEFAULT_FROM_STRING_CACHE_SIZE);\r\n    // return Decimal;\r\n    // Optimise Decimal aliases.\r\n    // We can't do this optimisation before Decimal is assigned.\r\n    D = Decimal.fromValue_noAlloc;\r\n    FC = Decimal.fromComponents;\r\n    FC_NN = Decimal.fromComponents_noNormalize;\r\n    Decimal.fromMantissaExponent;\r\n    Decimal.fromMantissaExponent_noNormalize;\r\n  \r\n    return Decimal;\r\n  \r\n  }));","<template>\r\n  <nav>\r\n    <router-link to=\"/\">Home</router-link>\r\n    <router-link to=\"/math\">YooA Math</router-link>\r\n    <router-link to=\"/cryptography\">Cryptography</router-link>\r\n    <router-link to=\"/statistics\">Statistics</router-link>\r\n    <router-link to=\"/illions\">YooA-illions</router-link>\r\n    <router-link to=\"/numbers\">Korean Numbers</router-link>\r\n    <router-link to=\"/incremental\">YooA Incremental</router-link>\r\n  </nav>\r\n  <router-view/>\r\n</template>\r\n\r\n<style>\r\n#app {\r\n  font-family: monospace;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: blue;\r\n  font-size: 12pt;\r\n}\r\n\r\nnav {\r\n  overflow: hidden;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tbackground-color: #333;\r\n\twidth: 100%;\r\n\tbox-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\r\n\tz-index: 1;\r\n}\r\n\r\nnav a {\r\n  font-weight: bold;\r\n  color: #046daa;\r\n  text-decoration: none;\r\n  font-size: 17pt;\r\n  padding: 14px 16px;\r\n  float: left;\r\n}\r\n\r\nnav a:hover {\r\n  background-color: #ddd;\r\n  color: black;\r\n}\r\n\r\nnav a.router-link-exact-active {\r\n  color: white;\r\n  background-color: #046daa;\r\n}\r\n</style>\r\n","import { render } from \"./App.vue?vue&type=template&id=f1a80a48\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=f1a80a48&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"main\">\r\n    <h1>YooA</h1>\r\n\t\t<p>Yoo Si-ah, better known by her stage name YooA is a South Korean singer, and is a member of the girl group Oh My Girl under WM Entertainment. She made her debut as a solo artist, with her first EP Bon Voyage, on September 7, 2020.</p>\r\n\t\t<ul>\r\n\t\t\t<li>Full name: Yoo Shi Ah (유시아)</li>\r\n\t\t\t<li>Birthday: September 17, 1995</li>\r\n\t\t\t<li>Age: 29 years old</li>\r\n\t\t\t<li>Group: OH MY GIRL</li>\r\n\t\t</ul>\r\n\t\t<img src = \"../assets/YooA.png\" width = \"300\" height = \"400\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n</script>\r\n","import { render } from \"./Home.vue?vue&type=template&id=0bb19a06\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"main\">\r\n    <h1>YooA Math</h1>\r\n    <div class=\"game\">\r\n      <p id = \"inst\">Solve the math (#7 = 2pts, #8 = 5pts). DON'T put variables (value only) in #3, 4, 6, 7. ^ = exponent.</p>\r\n      <ol id = \"questions\">\r\n        <li>1 + 1 = ?</li>\r\n        <input type = \"text\" id = \"q1\" name = \"q1\">\r\n        <li>2 + 2 = ?</li>\r\n        <input type = \"text\" id = \"q2\" name = \"q2\">\r\n        <li>x + 4 = 3</li>\r\n        <input type = \"text\" id = \"q3\" name = \"q3\" placeholder = \"Solve for x.\">\r\n        <li>3x - 2 = 7</li>\r\n        <input type = \"text\" id = \"q4\" name = \"q4\" placeholder = \"Solve for x.\">\r\n        <li>(x - 4)<sup>2</sup> = ?</li>\r\n        <input type = \"text\" id = \"q5\" name = \"q5\" placeholder = \"Expand (standard form).\">\r\n        <li>x + 2y = 6, 2x - y = 7</li>\r\n        <input type = \"text\" id = \"q6\" name = \"q6\" placeholder = \"Solve for x and y.\">\r\n        <li>\r\n            x = (3! + 15 - 2 * 6 - 1)<sup>(1/4 + 1/2) * 8/9</sup><br>\r\n            A = (x<sup>3</sup>)<sup>2 / 3</sup><br>\r\n            o = A - (x + 1)<sup>2</sup><br>\r\n            Y = (x - 1)(x + 1)<br>\r\n            YooA = ?\r\n        </li>\r\n        <input type = \"text\" id = \"q7\" name = \"q7\" placeholder = \"Solve for YooA.\">\r\n        <li>\r\n            i = √-1<br>\r\n            M = x<sup>2</sup> + i<sup>(8 - 3<sup>2</sup>) * 4i<sup>2</sup></sup><br>\r\n            m = (x - 1)(x + 1)<br>\r\n            A = (x<sup>5</sup>)(x<sup>(2i)<sup>2</sup></sup>) + 1<br>\r\n            o = A<sup>4</sup> / (x + 1)<sup>2</sup> - 2A<br>\r\n            Y = (m<sup>log<sub>4</sub>(2) + 3 - 5 / 2</sup> + 2) / A<br>\r\n            Mimi - YooA = ?\r\n        </li>\r\n        <input type = \"text\" id = \"q8\" name = \"q8\" placeholder = \"Solve for Mimi - YooA (factor).\">\r\n      </ol>\r\n      <button id = \"submit\" @click=\"submit\">Submit</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Math from '../math'\r\n\r\nexport default {\r\n  methods:{\r\n      submit() {\r\n          Math.submit();\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nh3 {\r\n  display: inline;\r\n}\r\n\r\ndiv.main {\r\n  min-height: 100vh;\r\n  background-color: powderblue;\r\n  padding: 45px 15px;\r\n}\r\n\r\ndiv.game {\r\n\ttext-align: center;\r\n\tbackground-color: #d17be2;\r\n\tborder-radius: 20px;\r\n\twidth: 700px;\r\n\tmin-height: 450px;\r\n\tpadding: 10px;\r\n\tposition: relative;\r\n}\r\n\r\ninput[type = text] {\r\n\tpadding: 8px 10px;\r\n\tmargin: 8px 0;\r\n\tdisplay: inline-block;\r\n\tfont-size: 12px;\r\n\tfont-family: monospace;\r\n\twidth: 250px;\r\n}\r\n\r\nbutton {\r\n\tbackground-color: #046dAA;\r\n \tcolor: white;\r\n\tpadding: 12px 20px;\r\n\tmargin: 8px;\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n\tcursor: pointer;\r\n\tfont-size: 17px;\r\n\tfont-family: monospace;\r\n}\r\n\r\nbutton:hover {\r\n\tbackground-color: #075785;\r\n}\r\n</style>\r\n","var score\r\nvar passed = \"\"\r\nvar answers = new Array(8)\r\nvar correctAns = [\r\n    [2], \r\n    [4], \r\n    [-1], \r\n    [3], \r\n    [\"x^2-8x+16\", \"x^2 - 8x + 16\"], \r\n    [\"4,1\", \"4, 1\", \"(4,1)\", \"(4, 1)\"], \r\n    [\"4860\", \"4,860\"], \r\n    [\"-x^2(x-1)(x+1)(x^2+1)\", \"-x^2 (x-1) (x+1) (x^2+1)\", \"-x^2(x - 1)(x + 1)(x^2 + 1)\", \"-x^2 (x - 1) (x + 1) (x^2 + 1)\",\r\n    \"-x^2(x+1)(x-1)(x^2+1)\", \"-x^2 (x+1) (x-1) (x^2+1)\", \"-x^2(x + 1)(x - 1)(x^2 + 1)\", \"-x^2 (x + 1) (x - 1) (x^2 + 1)\",\r\n    \"-x^2(x^2+1)(x-1)(x+1)\", \"-x^2 (x^2+1) (x-1) (x+1)\", \"-x^2(x^2 + 1)(x - 1)(x + 1)\", \"-x^2 (x^2 + 1) (x - 1) (x + 1)\",\r\n    \"-x^2(x^2+1)(x+1)(x-1)\", \"-x^2 (x^2+1) (x+1) (x-1)\", \"-x^2(x^2 + 1)(x + 1)(x - 1)\", \"-x^2 (x^2 + 1) (x + 1) (x - 1)\",\r\n    ]\r\n]\r\nvar scores = [1, 1, 1, 1, 1, 1, 2, 5]\r\nvar check\r\n\r\nlet submit = () => {\r\n    score = 0\r\n    check = \"\"\r\n    for (let i = 1; i <= 8; i++) {\r\n        answers[i-1] = (document.getElementById(\"q\" + i).value)\r\n        if (correctAns[i-1] == answers[i-1] || correctAns[i-1].includes(answers[i-1])) {\r\n            score += scores[i-1]\r\n            check += i + \": <span style = 'color: green'>CORRECT!</span> \"\r\n        }\r\n        else check += i + \": <span style = 'color: red'>WRONG!</span> \"\r\n        check += \"(\" + scores[i-1] + \" pt\" + (scores[i-1] == 1 ? \"\" : \"s\") + \")<br>\"\r\n    }\r\n    let miracle = \"are a \" + colorText(\"h3\", \"#F4A6D7\", \"MI\") + colorText(\"h3\", \"#9ADBE8\", \"RA\") + colorText(\"h3\", \"#EEE29F\", \"CLE\")\r\n    let passed = score < 8 ? \"<span style = 'color: red'>FAILED\" : score < 13 ? \"<span style = 'color: green'>PASSED\" : miracle\r\n\r\n    let inst = document.getElementById(\"inst\")\r\n    document.getElementById(\"questions\").style.display = \"none\"\r\n    document.getElementById(\"submit\").style.display = \"none\"\r\n    inst.style.fontSize = \"20pt\"\r\n    inst.innerHTML = \"Submitted! <br>\" + check + \"Score: \" + score + \"/13<br>You \" + passed + \"!</span> - YooA\"\r\n}\r\n\r\nvar exports = {\r\n    submit\r\n}\r\n\r\nexport default exports","import { render } from \"./Math.vue?vue&type=template&id=7ec6ac92\"\nimport script from \"./Math.vue?vue&type=script&lang=js\"\nexport * from \"./Math.vue?vue&type=script&lang=js\"\n\nimport \"./Math.vue?vue&type=style&index=0&id=7ec6ac92&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"main\">\r\n    <h1>Matrix Cryptography</h1>\r\n    <div class=\"game\">\r\n\t\t<p id = \"inst\">Decode/Encode the messages.</p>\r\n\t\t<div id = \"questions\">\r\n\t\t\t<p>1. Decode the following message that was encoded using matrix A.</p>\r\n\t\t\t<p>A = </p>\r\n\t\t\t<table class = \"matrix\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>2</td>\r\n\t\t\t\t\t<td>3</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>3</td>\r\n\t\t\t\t\t<td>4</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t\t<!--YOOA NUMBER ONE-->\r\n\t\t\t<!--25 15 15 1 0 14 21 13 2 5 18 0 15 14 5 0-->\r\n\t\t\t<p>95 135 33 49 42 56 81 115 19 26 36 54 72 101 10 15</p>\r\n\t\t\t<input type = \"text\" id = \"crypto1\" name = \"crypto1\" placeholder = \"Decode (CAPITAL LETTERS)\"><br>\r\n\t\t\t<p>2. Decode the following message that was encoded using matrix B.</p>\r\n\t\t\t<p>B = </p>\r\n\t\t\t<table class = \"matrix\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>7</td>\r\n\t\t\t\t\t<td>2</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>17</td>\r\n\t\t\t\t\t<td>5</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t\t<!--Hyojung, Mimi, YooA, Seunghee, Yubin, Arin-->\r\n\t\t\t<!--8 25 15 10 21 14 7 0 13 9 13 9 0 25 15 15 1 0 19 5 21 14 7 8 5 5 0 25 21 2 9 14 0 1 18 9 14 0-->\r\n\t\t\t<p>481 141 275 80 385 112 49 14 244 71 244 71 425 125 360 105 7 2 218 63 385 112 185 54 120 35 425 125 181 52 301 88 17 5 279 81 98 28</p>\r\n\t\t\t<input type = \"text\" id = \"crypto2\" name = \"crypto2\" placeholder = \"Decode (CAPITAL LETTERS)\"><br>\r\n\t\t\t<p>3. Encode the following message using matrix C.</p>\r\n\t\t\t<p>C = </p>\r\n\t\t\t<table class = \"matrix\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td style = \"width:110px\">(3 + √(4<sup>2</sup> + 3<sup>2</sup>)) / 2</td>\r\n\t\t\t\t\t<td style = \"width:110px\"><sup>10</sup>√3<sup>4! - 2 * 2</sup></td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>3log<sub>2</sub>(16) / 4</td>\r\n\t\t\t\t\t<td>(log<sub>3</sub>(5<sup>2</sup> + 2))! + 1</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t\t<!--4 9-->\r\n\t\t\t<!--3 7-->\r\n\t\t\t<p>OH MY GIRL</p>\r\n\t\t\t<input type = \"text\" id = \"crypto3\" name = \"crypto3\" placeholder = \"Encode (numbers)\"><br>\r\n\t\t\t<p>4. Encode the following message using matrix D.</p>\r\n\t\t\t<p>D = </p>\r\n\t\t\t<table class = \"matrix\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td style = \"width:110px\">(2<sup>2<sup>3</sup></sup> - 4<sup>2</sup>) / 4! + 1</td>\r\n\t\t\t\t\t<td style = \"width:110px\">2<sup>1.5</sup> * <sup>1.333...</sup>√(log<sub>3</sub>(81))</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>10 + log<sub>1.2</sub>(125 / 216)</td>\r\n\t\t\t\t\t<td>(<sup>5/3 - 3/4</sup>√(45<sup>2</sup> + 23) + 10 * 46<sup>2</sup> - 56) / 7!</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t\t<!--11 8-->\r\n\t\t\t<!--7 5-->\r\n\t\t\t<p id = \"miracle\">YOU ARE A MIRACLE</p>\r\n\t\t\t<input type = \"text\" id = \"crypto4\" name = \"crypto4\" placeholder = \"Encode (numbers)\"><br>\r\n\t\t\t<button id = \"submit\" @click=\"submit\">Submit</button>\r\n\t\t</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Cryptography from '../cryptography'\r\n\r\nexport default {\r\n  mounted() {\r\n      Cryptography.start();\r\n  },\r\n  methods:{\r\n      submit() {\r\n        Cryptography.submit();\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.matrix tr {\r\n\theight: 30px;\r\n}\r\n\r\n.matrix td {\r\n\twidth: 20px;\r\n\tpadding: 5px;\r\n\ttext-align: center;\r\n}\r\n\r\n.matrix {\r\n\tcolor: blue;\r\n\tfont-size: 12pt;\r\n\tposition: relative;\r\n\tmargin-left: 8px;\r\n\tz-index: 0;\r\n}\r\n\r\n.matrix:before {\r\n\tleft: -6px;\r\n\tborder: 2px solid blue;\r\n\tborder-right: 0px;\r\n}\r\n\r\n.matrix:after {\r\n\tright: -6px;\r\n\tborder: 2px solid blue;\r\n\tborder-left: 0px;\r\n}\r\n\r\n.matrix:before, .matrix:after {\r\n\tcontent: \"\";\r\n\twidth: 6px;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\theight: 100%;\r\n} \r\n</style>\r\n","var answers = new Array(4)\r\nvar score\r\nvar correctAns = [\r\n    \"YOOA NUMBER ONE\",\r\n    \"HYOJUNG MIMI YOOA SEUNGHEE YUBIN ARIN\",\r\n    \"84 191 39 91 100 225 55 126 108 246\",\r\n    \"380 275 231 168 137 98 55 40 11 8 206 149 205 149 117 84 55 40\",\r\n]\r\nvar scores = [2, 3, 2, 3]\r\nvar check\r\nvar passed\r\n\r\nlet start = () => {\r\n    document.getElementById(\"miracle\").innerHTML = \"YOU ARE A \" + colorText(\"h3\", \"#F4A6D7\", \"MI\") + colorText(\"h3\", \"#9ADBE8\", \"RA\") + colorText(\"h3\", \"#EEE29F\", \"CLE\")\r\n}\r\n\r\nlet submit = () => {\r\n    score = 0\r\n    check = \"\"\r\n    for (let i = 1; i <= 4; i++) {\r\n        answers[i-1] = document.getElementById(\"crypto\" + i).value\r\n        if (correctAns[i-1] == answers[i-1]) {\r\n            score += scores[i-1]\r\n            check += i + \": <span style = 'color: green'>CORRECT!</span> \"\r\n        }\r\n        else check += i + \": <span style = 'color: red'>WRONG!</span> \"\r\n        check += \"(\" + scores[i-1] + \" pts)<br>\"\r\n    }\r\n    if (score >= 10) passed = \"are a \" + colorText(\"h3\", \"#F4A6D7\", \"MI\") + colorText(\"h3\", \"#9ADBE8\", \"RA\") + colorText(\"h3\", \"#EEE29F\", \"CLE\")\r\n    else if (score < 5) passed = \"<span style = 'color: red'>FAILED\"\r\n    else passed = \"<span style = 'color: green'>PASSED\"\r\n\r\n    let inst = document.getElementById(\"inst\")\r\n    document.getElementById(\"questions\").style.display = \"none\"\r\n    inst.style.fontSize = \"20pt\"\r\n    inst.innerHTML = \"Submitted!<br>\" + check + \"Score: \" + score + \"<br>You \" + passed + \"!</span> - YooA\"\r\n}\r\n\r\nvar exports = {\r\n    start,\r\n    submit\r\n}\r\nexport default exports","import { render } from \"./Cryptography.vue?vue&type=template&id=2a4f66dc\"\nimport script from \"./Cryptography.vue?vue&type=script&lang=js\"\nexport * from \"./Cryptography.vue?vue&type=script&lang=js\"\n\nimport \"./Cryptography.vue?vue&type=style&index=0&id=2a4f66dc&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"main\">\r\n    <h1>YooA Statistics</h1>\r\n\t<p>Find the mean, median, mode, and standard deviation (2 decimal places).</p>\r\n\t<table class = \"stats\">\r\n\t\t<tr>\r\n\t\t\t<th colspan = \"2\">OH MY GIRL Members Age (2024)</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Hyojung</td>\r\n\t\t\t<td>30</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Mimi</td>\r\n\t\t\t<td>29</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>YooA</td>\r\n\t\t\t<td>29</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Seunghee</td>\r\n\t\t\t<td>28</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Yubin</td>\r\n\t\t\t<td>27</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Arin</td>\r\n\t\t\t<td>25</td>\r\n\t\t</tr>\r\n\t</table>\r\n\t<p>Mean: </p>\r\n\t<input type = \"text\" id = \"mean1\" name = \"mean1\" placeholder = \"Mean\"><br>\r\n\t<p>Median: </p>\r\n\t<input type = \"text\" id = \"median1\" name = \"median1\" placeholder = \"Median\"><br>\r\n\t<p>Mode: </p>\r\n\t<input type = \"text\" id = \"mode1\" name = \"mode1\" placeholder = \"Mode\"><br>\r\n\t<p>Standard Deviation: </p>\r\n\t<input type = \"text\" id = \"sd1\" name = \"sd1\" placeholder = \"Standard Deviation\"><br>\r\n\t<button @click=\"submit\">Submit</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Statistics from '../statistics'\r\n\r\nexport default {\r\n  methods:{\r\n      submit() {\r\n        Statistics.submit();\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.stats th, .stats td {\r\n\tborder: 2px solid blue;\r\n\ttext-align: center;\r\n\tpadding: 5px;\r\n}\r\n\r\n.stats {\r\n\tcolor: blue;\r\n\tborder: 2px solid blue;\r\n\tborder-collapse: collapse;\r\n\tfont-size: 12pt;\r\n\tmargin-left: 8px;\r\n\tz-index: -1;\r\n\twidth: 300px;\r\n}\r\n</style>\r\n","var answers = new Array(1).fill(new Array(4))\r\nvar score\r\nvar correctAns = [\r\n    [28, 28.5, 29, 1.79]\r\n]\r\nvar scores = [\r\n    [1, 1, 1, 2]\r\n]\r\nvar element = [\"Mean\", \"Median\", \"Mode\", \"Standard Deviation\"]\r\nvar check\r\nvar passed\r\n\r\nlet submit = () => {\r\n    score = 0\r\n    check = \"\"\r\n    for (let i = 1; i <= 1; i++) {\r\n        answers[i-1][0] = document.getElementById(\"mean\" + i).value\r\n        answers[i-1][1] = document.getElementById(\"median\" + i).value\r\n        answers[i-1][2] = document.getElementById(\"mode\" + i).value\r\n        answers[i-1][3] = document.getElementById(\"sd\" + i).value\r\n        for (let j = 0; j <= 3; j++) {\r\n            if (correctAns[i-1][j] == answers[i-1][j]) {\r\n                score += scores[i-1][j]\r\n                check += i + \" \" + element[j] + \": CORRECT!\\n\"\r\n            }\r\n            else check += i + \" \" + element[j] + \": WRONG!\\n\"\r\n        }\r\n    }\r\n    if (score >= 10) passed = \"are YOOA\"\r\n    else if (score < 5) passed = \"FAILED\"\r\n    else passed = \"PASSED\"\r\n    alert(\"Submitted!\\n\" + check + \"Score: \" + score + \"\\nYou \" + passed + \"! - YooA\")\r\n}\r\n\r\nvar exports = {\r\n    submit\r\n}\r\n\r\nexport default exports","import { render } from \"./Statistics.vue?vue&type=template&id=41f9113c\"\nimport script from \"./Statistics.vue?vue&type=script&lang=js\"\nexport * from \"./Statistics.vue?vue&type=script&lang=js\"\n\nimport \"./Statistics.vue?vue&type=style&index=0&id=41f9113c&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"main\">\r\n    <h1>YooA-illions</h1>\r\n    <p>Type the number to convert to -illions (1 to eee2.9999999999e60): </p>\r\n    <input type = \"text\" id = \"num\" name = \"num\" placeholder = \"Number (sci not: XeY, eXeY, ...)\"><br>\r\n    <p id = \"illions\" style = \"font-size: 20pt;\">-illions: </p>\r\n    <button @click=\"submit\">Submit</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Illions from '../illions'\r\n\r\nexport default {\r\n  methods:{\r\n      submit() {\r\n        Illions.submit();\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n","var answer\r\n\r\nvar t1illions = [\"\", \"m\", \"b\", \"tr\", \"quadr\", \"quint\", \"sext\", \"sept\", \"oct\", \"non\"]\r\nvar t1ones = [\"\", \"un\", \"duo\", \"tre\", \"quattuor\", \"quin\", \"sex\", \"septen\", \"octo\", \"novem\"]\r\nvar t1tens = [\"\", \"dec\", \"vigint\", \"trigint\", \"quadragint\", \"quinquagint\", \"sexagint\", \"septuagint\", \"octogint\", \"nonagint\"]\r\nvar t1hundreds = [\"\", \"cent\", \"ducent\", \"tricent\", \"quadringent\", \"quingent\", \"sescent\", \"septingent\", \"octingent\", \"nongent\"]\r\n\r\nvar t2illions = [\"\", \"mill\", \"micr\", \"nan\", \"pic\", \"femt\", \"att\", \"zept\", \"yoct\", \"ront\", \"quect\"]\r\nvar t2ones = [\"\", \"me\", \"due\", \"trio\", \"tetre\", \"pente\", \"hexe\", \"hepte\", \"octe\", \"enne\"]\r\nvar t2tens = [\"\", \"c\", \"icos\", \"triacont\", \"tetracont\", \"pentacont\", \"hexacont\", \"heptacont\", \"octacont\", \"ennacont\"]\r\nvar t2hundreds = [\"\", \"hect\", \"dohect\", \"triahect\", \"tetrahect\", \"pentahect\", \"hexahect\", \"heptahect\", \"octahect\", \"ennahect\"]\r\n\r\nvar t3illions = [\"\", \"kill\", \"meg\", \"gig\", \"ter\", \"pet\", \"ex\", \"zett\", \"yott\", \"ronn\", \"quett\",\r\n    \"hend\", \"dok\", \"tradak\", \"tedak\", \"pedak\", \"exdak\", \"zedak\", \"yodak\", \"nedak\"\r\n]\r\nvar t3ones = [\"\", \"en\", \"od\", \"tr\", \"ter\", \"pet\", \"ect\", \"zet\", \"yot\", \"ron\"]\r\nvar t3mults = [\"\", \"\", \"d\", \"tr\", \"t\", \"p\", \"ex\", \"z\", \"y\", \"n\", \"quett\"]\r\nvar t3os = [\"k\", \"k\", \"c\", \"c\", \"c\", \"c\", \"k\", \"c\", \"k\", \"c\"]\r\nvar t3tens = [\"\", \"\", \"i\", \"tra\", \"te\", \"pe\", \"exa\", \"za\", \"yo\", \"ne\"]\r\nvar t3hundreds = [\"\", \"ho\", \"bo\", \"tro\", \"to\", \"po\", \"exo\", \"zo\", \"yoo\", \"no\"]\r\n\r\nvar t4illions = [\"\", \"al\", \"ej\", \"ij\", \"ast\", \"un\", \"erm\", \"ov\", \"ol\", \"et\",\r\n  \"oc\", \"ax\", \"up\", \"ers\", \"ult\", \"et\", \"ev\", \"yp\", \"omn\", \"ut\"\r\n]\r\nvar t4ons = [\"\", \"k\", \"m\", \"g\", \"\", \"l\", \"f\", \"j\", \"s\", \"b\",\r\n  \"gl\", \"g\", \"s\", \"v\", \"m\", \"m\", \"x\", \"h\", \"\", \"o\"\r\n]\r\nvar t4ones = [\"\", \"en\", \"od\", \"tr\", \"ter\", \"pet\", \"ect\", \"zet\", \"yot\", \"ron\"]\r\nvar t4tens = [\"\", \"\", \"i\", \"tra\", \"te\", \"pe\", \"exa\", \"za\", \"yo\", \"ne\"]\r\nvar t4os = [\"k\", \"k\", \"c\", \"c\", \"c\", \"c\", \"k\", \"c\", \"k\", \"c\"]\r\nvar t4hundreds = [\"\", \"ho\", \"bo\", \"tro\", \"to\", \"po\", \"exo\", \"zo\", \"yoo\", \"no\"]\r\n\r\nvar num_illion\r\nvar illions\r\nvar tN_illions = [0, 0, 0, 0]\r\nvar t2_1 = \"\"\r\nvar t3_1 = \"\"\r\nvar t4_1 = \"\"\r\n\r\nvar EXP_LIMIT = 9e15; //If we're ABOVE this value, increase a layer. (9e15 is close to the largest integer that can fit in a Number.)\r\n  \r\nvar LAYER_DOWN = Math.log10(9e15); //If we're BELOW this value, drop down a layer. About 15.954.\r\n  \r\nvar FIRST_NEG_LAYER = 1/9e15; //At layer 0, smaller non-zero numbers than this become layer 1 numbers with negative mag. After that the pattern continues as normal.\r\n\r\nvar NUMBER_EXP_MAX = 308; //The largest exponent that can appear in a Number, though not all mantissas are valid here.\r\n\r\nvar NUMBER_EXP_MIN = -324; //The smallest exponent that can appear in a Number, though not all mantissas are valid here.\r\n  \r\nvar MAX_ES_IN_A_ROW = 5; //For default toString behaviour, when to swap from eee... to (e^n) syntax.\r\n\r\nfunction Decimal(value) {\r\n      \r\n    this.sign = Number.NaN;\r\n    this.layer = Number.NaN;\r\n    this.mag = Number.NaN;\r\n\r\n    if (value instanceof Decimal) {\r\n      this.fromDecimal(value);\r\n    } else if (typeof value === \"number\") {\r\n      this.fromNumber(value);\r\n    } else if (typeof value === \"string\") {\r\n      this.fromString(value);\r\n    } else {\r\n      this.sign = 0;\r\n      this.layer = 0;\r\n      this.mag = 0;\r\n    }\r\n}\r\n\r\nvar D = function D(value) {\r\n    return Decimal.fromValue_noAlloc(value);\r\n};\r\n\r\nvar FC = function FC(sign, layer, mag) {\r\n    return Decimal.fromComponents(sign, layer, mag);\r\n};\r\n\r\nvar FC_NN = function FC_NN(sign, layer, mag) {\r\n    return Decimal.fromComponents_noNormalize(sign, layer, mag);\r\n};\r\n\r\n  Decimal.fromValue_noAlloc = function (value) {\r\n    return value instanceof Decimal ? value : new Decimal(value);\r\n  };\r\n\r\n  Decimal.prototype.fromComponents = function (sign, layer, mag) {\r\n    this.sign = sign;\r\n    this.layer = layer;\r\n    this.mag = mag;\r\n\r\n    this.normalize();\r\n    return this;\r\n  };\r\n\r\n  Decimal.prototype.fromComponents_noNormalize = function (sign, layer, mag) {\r\n    this.sign = sign;\r\n    this.layer = layer;\r\n    this.mag = mag;\r\n    return this;\r\n  };\r\n\r\n  Decimal.fromComponents = function (sign, layer, mag) {\r\n    return new Decimal().fromComponents(sign, layer, mag);\r\n  };\r\n\r\n  Decimal.fromComponents_noNormalize = function (sign, layer, mag) {\r\n    return new Decimal().fromComponents_noNormalize(sign, layer, mag);\r\n  };\r\n\r\n  Decimal.mul = function (value, other) {\r\n    return D(value).mul(other);\r\n  };\r\n\r\n  Decimal.prototype.mul = function (value) {\r\n    var decimal = D(value);\r\n    \r\n    //inf/nan check\r\n    if (!Number.isFinite(this.layer)) { return this; }\r\n    if (!Number.isFinite(decimal.layer)) { return decimal; }\r\n    \r\n    //Special case - if one of the numbers is 0, return 0.\r\n    if (this.sign === 0 || decimal.sign === 0) { return FC_NN(0, 0, 0); }\r\n    \r\n    //Special case - Multiplying a number by its own reciprocal yields +/- 1, no matter how large.\r\n    if (this.layer === decimal.layer && this.mag === -decimal.mag) { return FC_NN(this.sign*decimal.sign, 0, 1); }\r\n          \r\n    var a;\r\n    var b;\r\n    \r\n    //Which number is bigger in terms of its multiplicative distance from 1?\r\n    if ((this.layer > decimal.layer) || (this.layer == decimal.layer && Math.abs(this.mag) > Math.abs(decimal.mag)))\r\n    {\r\n      a = this;\r\n      b = decimal;\r\n    }\r\n    else\r\n    {\r\n      a = decimal;\r\n      b = this;\r\n    }\r\n    \r\n    if (a.layer === 0 && b.layer === 0) { return D(a.sign*b.sign*a.mag*b.mag); }\r\n    \r\n    //Special case: If one of the numbers is layer 3 or higher or one of the numbers is 2+ layers bigger than the other, just take the bigger number.\r\n    if (a.layer >= 3 || (a.layer - b.layer >= 2)) { return FC(a.sign*b.sign, a.layer, a.mag); }\r\n\r\n    if (a.layer === 1 && b.layer === 0)\r\n    { \r\n      return FC(a.sign*b.sign, 1, a.mag+Math.log10(b.mag));\r\n    }\r\n    \r\n    if (a.layer === 1 && b.layer === 1)\r\n    {\r\n      return FC(a.sign*b.sign, 1, a.mag+b.mag);\r\n    }\r\n    \r\n    if (a.layer === 2 && b.layer === 1)\r\n    {\r\n      var newmag = FC(Math.sign(a.mag), a.layer-1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer-1, Math.abs(b.mag)));\r\n      return FC(a.sign*b.sign, newmag.layer+1, newmag.sign*newmag.mag);\r\n    }\r\n    \r\n    if (a.layer === 2 && b.layer === 2)\r\n    {\r\n      var newmag = FC(Math.sign(a.mag), a.layer-1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer-1, Math.abs(b.mag)));\r\n      return FC(a.sign*b.sign, newmag.layer+1, newmag.sign*newmag.mag);\r\n    }\r\n    \r\n    throw Error(\"Bad arguments to mul: \" + this + \", \" + value);\r\n  };\r\n\r\nDecimal.prototype.normalize = function () {\r\n    /*\r\n    PSEUDOCODE:\r\n    Whenever we are partially 0 (sign is 0 or mag and layer is 0), make it fully 0.\r\n    Whenever we are at or hit layer 0, extract sign from negative mag.\r\n    If layer === 0 and mag < FIRST_NEG_LAYER (1/9e15), shift to 'first negative layer' (add layer, log10 mag).\r\n    While abs(mag) > EXP_LIMIT (9e15), layer += 1, mag = maglog10(mag).\r\n    While abs(mag) < LAYER_DOWN (15.954) and layer > 0, layer -= 1, mag = pow(10, mag).\r\n    \r\n    When we're done, all of the following should be true OR one of the numbers is not IsFinite OR layer is not IsInteger (error state):\r\n    Any 0 is totally zero (0, 0, 0).\r\n    Anything layer 0 has mag 0 OR mag > 1/9e15 and < 9e15.\r\n    Anything layer 1 or higher has abs(mag) >= 15.954 and < 9e15.\r\n    We will assume in calculations that all Decimals are either erroneous or satisfy these criteria. (Otherwise: Garbage in, garbage out.)\r\n    */\r\n    if (this.sign === 0 || (this.mag === 0 && this.layer === 0))\r\n    {\r\n      this.sign = 0;\r\n      this.mag = 0;\r\n      this.layer = 0;\r\n      return this;\r\n    }\r\n    \r\n    if (this.layer === 0 && this.mag < 0)\r\n    {\r\n      //extract sign from negative mag at layer 0\r\n      this.mag = -this.mag;\r\n      this.sign = -this.sign;\r\n    }\r\n    \r\n    //Handle shifting from layer 0 to negative layers.\r\n    if (this.layer === 0 && this.mag < FIRST_NEG_LAYER)\r\n    {\r\n      this.layer += 1;\r\n      this.mag = Math.log10(this.mag);\r\n      return this;\r\n    }\r\n    \r\n    var absmag = Math.abs(this.mag);\r\n    var signmag = Math.sign(this.mag);\r\n    \r\n    if (absmag >= EXP_LIMIT)\r\n    {\r\n      this.layer += 1;\r\n      this.mag = signmag*Math.log10(absmag);\r\n      return this;\r\n    }\r\n    else\r\n    {\r\n      while (absmag < LAYER_DOWN && this.layer > 0)\r\n      {\r\n        this.layer -= 1;\r\n        if (this.layer === 0)\r\n        {\r\n          this.mag = Math.pow(10, this.mag);\r\n        }\r\n        else\r\n        {\r\n          this.mag = signmag*Math.pow(10, absmag);\r\n          absmag = Math.abs(this.mag);\r\n          signmag = Math.sign(this.mag);\r\n        }\r\n      }\r\n      if (this.layer === 0)\r\n      {\r\n        if (this.mag < 0)\r\n        {\r\n          //extract sign from negative mag at layer 0\r\n          this.mag = -this.mag;\r\n          this.sign = -this.sign;\r\n        }\r\n        else if (this.mag === 0)\r\n        {\r\n          //excessive rounding can give us all zeroes\r\n          this.sign = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nvar IGNORE_COMMAS = true;\r\n    var COMMAS_ARE_DECIMAL_POINTS = false;\r\n    \r\n    Decimal.prototype.fromString = function (value) {\r\n      if (IGNORE_COMMAS) { value = value.replace(\",\", \"\"); }\r\n      else if (COMMAS_ARE_DECIMAL_POINTS) { value = value.replace(\",\", \".\"); }\r\n    \r\n      //Handle x^^^y format.\r\n      var pentationparts = value.split(\"^^^\");\r\n      if (pentationparts.length === 2)\r\n      {\r\n        var base = parseFloat(pentationparts[0]);\r\n        var height = parseFloat(pentationparts[1]);\r\n        var payload = 1;\r\n        var heightparts = pentationparts[1].split(\";\");\r\n        if (heightparts.length === 2)\r\n        {\r\n          var payload = parseFloat(heightparts[1]);\r\n          if (!isFinite(payload)) { payload = 1; }\r\n        }\r\n        if (isFinite(base) && isFinite(height))\r\n        {\r\n          var result = Decimal.pentate(base, height, payload);\r\n          this.sign = result.sign;\r\n          this.layer = result.layer;\r\n          this.mag = result.mag;\r\n          return this;\r\n        }\r\n      }\r\n    \r\n      //Handle x^^y format.\r\n      var tetrationparts = value.split(\"^^\");\r\n      if (tetrationparts.length === 2)\r\n      {\r\n        var base = parseFloat(tetrationparts[0]);\r\n        var height = parseFloat(tetrationparts[1]);\r\n        var heightparts = tetrationparts[1].split(\";\");\r\n        if (heightparts.length === 2)\r\n        {\r\n          var payload = parseFloat(heightparts[1]);\r\n          if (!isFinite(payload)) { payload = 1; }\r\n        }\r\n        if (isFinite(base) && isFinite(height))\r\n        {\r\n          var result = Decimal.tetrate(base, height, payload);\r\n          this.sign = result.sign;\r\n          this.layer = result.layer;\r\n          this.mag = result.mag;\r\n          return this;\r\n        }\r\n      }\r\n      \r\n      //Handle x^y format.\r\n      var powparts = value.split(\"^\");\r\n      if (powparts.length === 2)\r\n      {\r\n        var base = parseFloat(powparts[0]);\r\n        var exponent = parseFloat(powparts[1]);\r\n        if (isFinite(base) && isFinite(exponent))\r\n        {\r\n          var result = Decimal.pow(base, exponent);\r\n          this.sign = result.sign;\r\n          this.layer = result.layer;\r\n          this.mag = result.mag;\r\n          return this;\r\n        }\r\n      }\r\n      \r\n      //Handle various cases involving it being a Big Number.\r\n      value = value.trim().toLowerCase();\r\n      \r\n      //handle X PT Y format.\r\n      var ptparts = value.split(\"pt\");\r\n      if (ptparts.length === 2)\r\n      {\r\n        base = 10;\r\n        height = parseFloat(ptparts[0]);\r\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\r\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\r\n        var payload = parseFloat(ptparts[1]);\r\n        if (!isFinite(payload)) { payload = 1; }\r\n        if (isFinite(base) && isFinite(height))\r\n        {\r\n          var result = Decimal.tetrate(base, height, payload);\r\n          this.sign = result.sign;\r\n          this.layer = result.layer;\r\n          this.mag = result.mag;\r\n          return this;\r\n        }\r\n      }\r\n      \r\n      //handle XpY format (it's the same thing just with p).\r\n      var ptparts = value.split(\"p\");\r\n      if (ptparts.length === 2)\r\n      {\r\n        base = 10;\r\n        height = parseFloat(ptparts[0]);\r\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\r\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\r\n        var payload = parseFloat(ptparts[1]);\r\n        if (!isFinite(payload)) { payload = 1; }\r\n        if (isFinite(base) && isFinite(height))\r\n        {\r\n          var result = Decimal.tetrate(base, height, payload);\r\n          this.sign = result.sign;\r\n          this.layer = result.layer;\r\n          this.mag = result.mag;\r\n          return this;\r\n        }\r\n      }\r\n\r\n      var parts = value.split(\"e\");\r\n      var ecount = parts.length-1;\r\n    \r\n      //Handle numbers that are exactly floats (0 or 1 es).\r\n      if (ecount === 0)\r\n      {\r\n        var numberAttempt = parseFloat(value);\r\n        if (isFinite(numberAttempt))\r\n        {\r\n          return this.fromNumber(numberAttempt);\r\n        }\r\n      }\r\n      else if (ecount === 1)\r\n      {\r\n        //Very small numbers (\"2e-3000\" and so on) may look like valid floats but round to 0.\r\n        var numberAttempt = parseFloat(value);\r\n        if (isFinite(numberAttempt) && numberAttempt !== 0)\r\n        {\r\n          return this.fromNumber(numberAttempt);\r\n        }\r\n      }\r\n      \r\n      //Handle new (e^N)X format.\r\n      var newparts = value.split(\"e^\");\r\n      if (newparts.length === 2)\r\n      {\r\n        this.sign = 1;\r\n        if (newparts[0].charAt(0) == \"-\")\r\n        {\r\n          this.sign = -1;\r\n        }\r\n        var layerstring = \"\";\r\n        for (var i = 0; i < newparts[1].length; ++i)\r\n        {\r\n          var chrcode = newparts[1].charCodeAt(i);\r\n          if ((chrcode >= 43 && chrcode <= 57) || chrcode === 101) //is \"0\" to \"9\" or \"+\" or \"-\" or \".\" or \"e\" (or \",\" or \"/\")\r\n          {\r\n            layerstring += newparts[1].charAt(i);\r\n          }\r\n          else //we found the end of the layer count\r\n          {\r\n            this.layer = parseFloat(layerstring);\r\n            this.mag = parseFloat(newparts[1].substr(i+1));\r\n            this.normalize();\r\n            return this;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (ecount < 1) { this.sign = 0; this.layer = 0; this.mag = 0; return this; }\r\n      var mantissa = parseFloat(parts[0]);\r\n      if (mantissa === 0) { this.sign = 0; this.layer = 0; this.mag = 0; return this; }\r\n      var exponent = parseFloat(parts[parts.length-1]);\r\n      //handle numbers like AeBeC and AeeeeBeC\r\n      if (ecount >= 2)\r\n      {\r\n        var me = parseFloat(parts[parts.length-2]);\r\n        if (isFinite(me))\r\n        {\r\n          exponent *= Math.sign(me);\r\n          exponent += f_maglog10(me);\r\n        }\r\n      }\r\n      \r\n      //Handle numbers written like eee... (N es) X\r\n      if (!isFinite(mantissa))\r\n      {\r\n        this.sign = (parts[0] === \"-\") ? -1 : 1;\r\n        this.layer = ecount;\r\n        this.mag = exponent;\r\n      }\r\n      //Handle numbers written like XeY\r\n      else if (ecount === 1)\r\n      {\r\n        this.sign = Math.sign(mantissa);\r\n        this.layer = 1;\r\n        //Example: 2e10 is equal to 10^log10(2e10) which is equal to 10^(10+log10(2))\r\n        this.mag = exponent + Math.log10(Math.abs(mantissa));\r\n      }\r\n      //Handle numbers written like Xeee... (N es) Y\r\n      else\r\n      {\r\n        this.sign = Math.sign(mantissa);\r\n        this.layer = ecount;\r\n        if (ecount === 2)\r\n        {\r\n          var result = Decimal.mul(FC(1, 2, exponent), D(mantissa));\r\n          this.sign = result.sign;\r\n          this.layer = result.layer;\r\n          this.mag = result.mag;\r\n          return this;\r\n        }\r\n        else\r\n        {\r\n          //at eee and above, mantissa is too small to be recognizable!\r\n          this.mag = exponent;\r\n        }\r\n      }\r\n      \r\n      this.normalize();\r\n      return this;\r\n    };\r\n\r\n    Decimal.prototype.fromValue = function (value) {\r\n      if (value instanceof Decimal) {\r\n        return this.fromDecimal(value);\r\n      }\r\n\r\n      if (typeof value === \"number\") {\r\n        return this.fromNumber(value);\r\n      }\r\n\r\n      if (typeof value === \"string\") {\r\n        return this.fromString(value);\r\n      }\r\n\r\n      this.sign = 0;\r\n      this.layer = 0;\r\n      this.mag = 0;\r\n      return this;\r\n    };\r\n\r\n    Decimal.prototype.toNumber = function () {\r\n      if (!Number.isFinite(this.layer)) { return Number.NaN; }\r\n      if (this.layer === 0)\r\n      {\r\n        return this.sign*this.mag;\r\n      }\r\n      else if (this.layer === 1)\r\n      {\r\n        return this.sign*Math.pow(10, this.mag);\r\n      }\r\n      else //overflow for any normalized Decimal\r\n      {\r\n        return this.mag > 0 ? (this.sign > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY) : 0;\r\n      }\r\n    };\r\n\r\nDecimal.prototype.fromNumber = function (value) {\r\n    this.mag = Math.abs(value);\r\n    this.sign = Math.sign(value);\r\n    this.layer = 0;\r\n    this.normalize();\r\n    return this;\r\n  }\r\n\r\nvar f_maglog10 = function(n) {\r\n    return Math.sign(n)*Math.log10(Math.abs(n));\r\n  }\r\n\r\nfunction t1format(ill) {\r\n    let t1\r\n    let illion = ill % 1000\r\n    let hund = Math.floor(illion / 10) % 10 != 0 && Math.floor(illion / 100) % 10 != 0 ? \"i\" : \"\"\r\n    if (illion == -1) t1 = \"\"\r\n    else if (ill == 0) {\r\n        t1 = \"thousand\"\r\n    }\r\n    else if (illion < 10) {\r\n        t1 = t1illions[illion] + \"illion\"\r\n    }\r\n    else t1 = t1ones[illion % 10] + t1tens[Math.floor(illion / 10) % 10] + (hund) + t1hundreds[Math.floor(illion / 100) % 10] + \"illion\"\r\n    return t1\r\n}\r\n\r\nfunction t1mult(ill) {\r\n    let t1\r\n    let illion = ill % 1000\r\n    let hund = Math.floor(illion / 10) % 10 != 0 && Math.floor(illion / 100) % 10 != 0 ? \"i\" : \"\"\r\n    if (illion < 2) t1 = \"\"\r\n    else if (illion < 10) {\r\n        t1 = t1ones[illion]\r\n    }\r\n    else t1 = t1ones[illion % 10] + t1tens[Math.floor(illion / 10) % 10] + (hund) + t1hundreds[Math.floor(illion / 100) % 10] + (illion < 10 ? \"\" : \"i\")\r\n    return t1\r\n}\r\n\r\nfunction t2format(t1, ill, i, i2 = 0) {\r\n    if (ill < 1) return t1format(t1)\r\n    let t2\r\n    let illion = ill % 1000\r\n    let hund = Math.floor(illion / 10) % 10 != 0 && Math.floor(illion / 100) % 10 != 0 ? \"e\" : \"\"\r\n    let mult = Math.floor(t1 / 1000 ** ill) % 1000\r\n    if (ill >= 100) mult = Math.floor(10 ** (t1 - 3 * ill)) % 1000\r\n\r\n    let t2ill\r\n    if (illion < 11) {\r\n        t2ill = t2illions[illion]\r\n    }\r\n    else if (illion % 100 == 10) t2ill = \"quect\" + (hund) + t2hundreds[Math.floor(illion / 100) % 10]\r\n    else if (illion % 100 == 13) t2ill = \"trec\" + (hund) + t2hundreds[Math.floor(illion / 100) % 10]\r\n    else t2ill = t2ones[illion % 10] + t2tens[Math.floor(illion / 10) % 10] + (hund) + t2hundreds[Math.floor(illion / 100) % 10]\r\n\r\n    let t21 = \"\"\r\n    if (i < 3) {\r\n      if (ill - 1 < 100 && ill >= 100) t21 = t2format(10 ** t1, ill - 1, i + 1, i2)\r\n      else t21 = t2format(t1, ill - 1, i + 1, i2)\r\n    }\r\n    if (t21 == \"thousand\" || t21 == \"illion\") t21 = \"\"\r\n    t2_1 += t21\r\n    if (t2_1 == \"thousand\" || t2_1 == \"illion\") t2_1 = \"\"\r\n\r\n    let span1 = \"<span style = 'color:#7700dd'>\"\r\n    let span2 = \"</span>\"\r\n    let spant2 = span1 + span2\r\n    let spant3 = \"<span style = 'color:#dd00dd'>\" + span2\r\n\r\n    let not2 = t2_1 == \"\" || (t2_1.includes(spant2) && t2_1.length % spant2.length == 0)\r\n    let no_illion = ill < 1 || mult < 1\r\n\r\n    let t3 = \"\"\r\n    if (i2 == 0 && !no_illion) {\r\n        for (let j = 0; j < 4; j++) {\r\n            if (tN_illions[2] - j > 0) {\r\n                if (tN_illions[2] - j < 100 && tN_illions[2] >= 100) t3 += t3format(10 ** tN_illions[1] - i, tN_illions[2] - j, j)\r\n                else t3 += t3format(tN_illions[1] - i, tN_illions[2] - j, j)\r\n                t3_1 = \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    t2 = t1mult(mult) + t3 + (no_illion ? \"\" : span1 + t2ill) + (not2 || no_illion ? \"\" : illion == 1 ? \"i-\" : \"o-\") + (no_illion ? \"\" : span2)\r\n    t2 = t2.replaceAll(spant2, \"\")\r\n    t2 = t2.replaceAll(spant3, \"\")\r\n    return t2\r\n}\r\n\r\nfunction t2mult(ill) {\r\n  let t2\r\n  let illion = ill % 1000\r\n  let hund = Math.floor(illion / 10) % 10 != 0 && Math.floor(illion / 100) % 10 != 0 ? \"e\" : \"\"\r\n  if (illion < 2) t2 = \"\"\r\n  else if (illion < 11) {\r\n      t2 = t2illions[illion] + \"e\"\r\n  }\r\n  else if (illion % 100 == 10) t2 = \"quect\" + (hund) + t2hundreds[Math.floor(illion / 100) % 10] + \"e\"\r\n  else if (illion % 100 == 13) t2 = \"trec\" + (hund) + t2hundreds[Math.floor(illion / 100) % 10] + \"e\"\r\n  else t2 = t2ones[illion % 10] + t2tens[Math.floor(illion / 10) % 10] + (hund) + t2hundreds[Math.floor(illion / 100) % 10] + \"e\"\r\n  return \"<span style = 'color:#7700dd'>\" + t2 + \"</span>\"\r\n}\r\n\r\nfunction t3format(t2, ill, i, i2 = 0) {\r\n  if (ill < 1) {\r\n    if (t2 < 100) return t2format(1000 ** t2, t2, i, 1)\r\n    return t2format(3 * t2, t2, i, 1)\r\n  }\r\n  let t3\r\n  let illion = ill % 1000\r\n  let mult = Math.floor(t2 / 1000 ** ill) % 1000\r\n  if (ill >= 100) mult = Math.floor(10 ** (t2 - 3 * ill)) % 1000\r\n\r\n  let v = [\"a\", \"e\", \"i\", \"o\", \"u\"]\r\n  let t3ill\r\n  let t3ot = t3tens[Math.floor(illion / 10) % 10] + t3ones[illion % 10]\r\n  if (illion % 100 >= 20) t3ot = t3tens[Math.floor(illion / 10) % 10] + t3os[illion % 10] + t3ones[illion % 10]\r\n  else if (illion % 100 >= 10) {\r\n    if (illion % 100 == 11 && illion >= 100) t3ot = \"tend\"\r\n    else t3ot = t3illions[illion % 100]\r\n  }\r\n  let hund = (v.includes(t3ot[0]) || illion % 100 == 0) && illion >= 100 ? \"t\" : \"\"\r\n  if (illion < 20) {\r\n      t3ill = ill < 1000 ? t3illions[illion] : illion == 11 ? \"tend\" : t3ot\r\n  }\r\n  else t3ill = t3hundreds[Math.floor(illion / 100) % 10] + hund + t3ot\r\n\r\n  let span1 = \"<span style = 'color:#dd00dd'>\"\r\n  let span2 = \"</span>\"\r\n  let spant2 = \"<span style = 'color:#7700dd'>\" + span2\r\n  let spant3 = span1 + span2\r\n  \r\n  let t31 = \"\"\r\n  if (i < 3) {\r\n    if (ill - 1 < 100 && ill >= 100) t31 = t3format(10 ** t2, ill - 1, i + 1)\r\n    else t31 = t3format(t2, ill - 1, i + 1)\r\n  }\r\n  if (t31 == \"<span style = 'color:#7700dd'>o-\" + span2) t31 = \"\"\r\n  t3_1 += t31\r\n\r\n  let not3 = t3_1 == \"\" || (t3_1.includes(spant3) && t3_1.length % spant3.length == 0)\r\n  let no_illion = ill < 1 || mult < 1\r\n\r\n  let t4 = \"\"\r\n  if (i2 == 0 && !no_illion) {\r\n      for (let j = 0; j < 4; j++) {\r\n          if (tN_illions[3] - j > 0) {\r\n              if (tN_illions[3] - j < 100 && tN_illions[3] >= 100) t4 += t4format(10 ** tN_illions[2] - i, tN_illions[3] - j, j)\r\n              else t4 += t4format(tN_illions[2] - i, tN_illions[3] - j, j)\r\n              t4_1 = \"\"\r\n          }\r\n      }\r\n  }\r\n\r\n  t3 = t2mult(mult) + t4 + span1 + (mult >= 1 ? t3ill : \"\") + (not3 || no_illion ? \"\" : \"a\") + span2\r\n  t3 = t3.replaceAll(spant2, \"\")\r\n  return t3\r\n}\r\n\r\nfunction t3mult(ill) {\r\n  let t3\r\n  let illion = ill % 1000\r\n\r\n  let v = [\"a\", \"e\", \"i\", \"o\", \"u\"]\r\n  let t3ot = t3tens[Math.floor(illion / 10) % 10] + t3ones[illion % 10]\r\n  if (illion % 100 >= 20) t3ot = t3tens[Math.floor(illion / 10) % 10] + t3os[illion % 10] + t3ones[illion % 10]\r\n  else if (illion % 100 >= 10) {\r\n    if (illion % 100 == 11 && illion >= 100) t3ot = \"tend\"\r\n    else t3ot = t3illions[illion % 100]\r\n  }\r\n  let hund = (v.includes(t3ot[0]) || illion % 100 == 0) && illion >= 100 ? \"t\" : \"\"\r\n  if (illion < 2) t3 = \"\"\r\n  else if (illion < 10) {\r\n    t3 = t3mults[illion]\r\n  }\r\n  else if (illion < 20) {\r\n    t3 = t3illions[illion]\r\n  }\r\n  else t3 = t3hundreds[Math.floor(illion / 100) % 10] + hund + t3ot\r\n  return \"<span style = 'color:#dd00dd'>\" + t3 + \"</span>\"\r\n}\r\n\r\nfunction t4format(t3, ill, i) {\r\n  if (ill < 1) {\r\n    if (t3 < 100) return t3format(1000 ** t3, t3, i, 1)\r\n    return t3format(3 * t3, t3, i, 1)\r\n  }\r\n  let t4\r\n  let illion = ill % 1000\r\n  let mult = Math.floor(t3 / 1000 ** ill) % 1000\r\n  if (ill >= 100) mult = Math.floor(10 ** (t3 - 3 * ill)) % 1000\r\n\r\n  let v = [\"a\", \"e\", \"i\", \"o\", \"u\"]\r\n  let t4ill\r\n  let t4ot = t4tens[Math.floor(illion / 10) % 10] + t4ones[illion % 10]\r\n  if (illion % 100 >= 20) t4ot = t4tens[Math.floor(illion / 10) % 10] + t4os[illion % 10] + t4ones[illion % 10]\r\n  else if (illion % 100 >= 10) {\r\n    if (illion % 100 == 11 && illion >= 100) t4ot = \"tend\"\r\n    else t4ot = t4illions[illion % 100]\r\n  }\r\n  let hund = (v.includes(t4ot[0]) || illion % 100 == 0) && illion >= 100 ? \"t\" : \"\"\r\n  if (illion < 20) {\r\n      t4ill = t4illions[illion]\r\n  }\r\n  else t4ill = t4hundreds[Math.floor(illion / 100) % 10] + hund + t4ot\r\n  if (mult < 2) t4ill = t4ons[illion] + t4ill\r\n\r\n  let span1 = \"<span style = 'color:#dd0077'>\"\r\n  let span2 = \"</span>\"\r\n  let spant2 = \"<span style = 'color:#7700dd'>\" + span2\r\n  let spant3 = \"<span style = 'color:#dd00dd'>\" + span2\r\n  let spant4 = span1 + span2\r\n  \r\n  let t41 = \"\"\r\n  if (i < 3) {\r\n    if (ill - 1 < 100 && ill >= 100) t41 = t4format(10 ** t3, ill - 1, i + 1)\r\n    else t41 = t4format(t3, ill - 1, i + 1)\r\n  }\r\n  if (t41 == \"<span style = 'color:#dd00dd'>a\" + span2) t41 = \"\"\r\n  t4_1 += t41\r\n\r\n\r\n  t4 = t3mult(mult) + span1 + (mult >= 1 ? t4ill : \"\") + span2\r\n  t4 = t4.replaceAll(spant2, \"\")\r\n  t4 = t4.replaceAll(spant3, \"\")\r\n  t4 = t4.replaceAll(span1 + \"et\", span1 + (illion == 9 ? \"eet\" : mult == 7 ? \"eett\" : \"ett\"))\r\n  return t4\r\n}\r\n\r\nlet submit = () => {\r\n    answer = document.getElementById(\"num\").value\r\n    let num = new Decimal(answer)\r\n    let t1illion = -1\r\n    let t2illion = 0\r\n    let t3illion = 0\r\n    let t4illion = 0\r\n    let mag = 1\r\n    if (num.layer == 4) {\r\n      if (num.mag >= 300 + Math.log10(3)) {\r\n        t2illion = num.mag - Math.log10(3)\r\n        t3illion = Math.max(Math.floor(t2illion / 3), 0)\r\n        t4illion = Math.max(Math.floor(Math.log10(t3illion) / 3), 0)\r\n      }\r\n      else {\r\n        t3illion = Math.max(10 ** (num.mag - Math.log10(3)), 0)\r\n        t4illion = Math.max(Math.floor(Math.log10(t3illion) / 3), 0)\r\n      }\r\n  }\r\n    if (num.layer == 3) {\r\n        if (num.mag >= 300 + Math.log10(3)) {\r\n          t2illion = num.mag - Math.log10(3)\r\n          t3illion = Math.max(Math.floor(t2illion / 3), 0)\r\n          t4illion = Math.max(Math.floor(Math.log10(t3illion) / 3), 0)\r\n        }\r\n        else {\r\n          t2illion = Math.max(10 ** (num.mag - Math.log10(3)), 0)\r\n          t3illion = Math.max(Math.floor(Math.log10(t2illion) / 3), 0)\r\n        }\r\n    }\r\n    if (num.layer == 2) {\r\n        if (num.mag >= 300 + Math.log10(3)) {\r\n          t1illion = num.mag - Math.log10(3)\r\n          t2illion = Math.max(Math.floor(t1illion / 3), 0)\r\n          t3illion = Math.max(Math.floor(Math.log10(t2illion) / 3), 0)\r\n        }\r\n        else {\r\n          t1illion = Math.max(10 ** (num.mag - Math.log10(3)), 0) - 1\r\n          t2illion = Math.max(Math.floor(Math.log10(t1illion) / 3), 0)\r\n        }\r\n    }\r\n    else if (num.layer == 1) {\r\n        t1illion = Math.max(Math.floor(num.mag / 3), 0) - 1\r\n        t2illion = Math.max(Math.floor(Math.log10(t1illion) / 3), 0)\r\n        mag = 10 ** (num.mag % 3)\r\n    }\r\n    else if (num.layer == 0) {\r\n        t1illion = Math.max(Math.floor(Math.log10(num.mag) / 3), 0) - 1\r\n        mag = 10 ** (Math.log10(num.mag) % 3)\r\n    }\r\n    tN_illions = [t1illion, t2illion, t3illion, t4illion]\r\n    /*for (let i = 0; i < tN_illions.length; i++) {\r\n        if (tN_illions[i] > 0) tN_illions[i] = Math.round(tN_illions[i] / 10 ** Math.floor(Math.log10(tN_illions[i]) - 14)) * 10 ** Math.floor(Math.log10(tN_illions[i]) - 14)\r\n    }*/\r\n    \r\n    let slogmag = 0\r\n    if (num.mag < 10) slogmag = Math.log10(num.mag)\r\n    else if (num.mag < 1e10) slogmag = 1 + Math.log10(Math.log10(num.mag))\r\n    else slogmag = 2 + Math.log10(Math.log10(Math.log10(num.mag)))\r\n    let slognum = num.layer + slogmag\r\n\r\n    let t1 = tN_illions[1] < 4 ? t1format(tN_illions[0]) : \"\"\r\n    let t2 = \"\"\r\n    let t3 = \"\"\r\n    let t4 = \"\"\r\n    if (tN_illions[2] < 4) {\r\n        for (let i = 0; i < 4; i++) {\r\n            if (tN_illions[1] - i > 0) {\r\n                if (tN_illions[1] - i < 100 && tN_illions[1] >= 100) t2 += t2format(10 ** tN_illions[0], tN_illions[1] - i, i)\r\n                else t2 += t2format(tN_illions[0], tN_illions[1] - i, i)\r\n                t2_1 = \"\"\r\n                if (i == 3) t2 += \"illion\"\r\n            }\r\n        }\r\n    }\r\n    else if (tN_illions[3] < 4) {\r\n      for (let i = 0; i < 4; i++) {\r\n          if (tN_illions[2] - i > 0) {\r\n              if (tN_illions[2] - i < 100 && tN_illions[2] >= 100) t3 += t3format(10 ** tN_illions[1], tN_illions[2] - i, i)\r\n              else t3 += t3format(tN_illions[1], tN_illions[2] - i, i)\r\n              t3_1 = \"\"\r\n              if (i == 3) t3 += \"illion\"\r\n          }\r\n      }\r\n    }\r\n    else {\r\n      for (let i = 0; i < 4; i++) {\r\n          if (tN_illions[3] - i > 0) {\r\n              if (tN_illions[3] - i < 100 && tN_illions[3] >= 100) t4 += t4format(10 ** tN_illions[2], tN_illions[3] - i, i)\r\n              else t4 += t4format(tN_illions[2], tN_illions[3] - i, i)\r\n              t4_1 = \"\"\r\n              if (i == 3) t4 += \"illion\"\r\n          }\r\n      }\r\n    }\r\n    illions = t4 + t3 + t2 + t1\r\n\r\n    num_illion = mag.toFixed(3) + \" \" + illions\r\n    num_illion += \" - YooA<br>slog: \" + slognum.toFixed(3)\r\n    document.getElementById(\"illions\").innerHTML = \"-illions: \" + num_illion \r\n}\r\n\r\nvar exports = {\r\n    submit\r\n}\r\n\r\nexport default exports","import { render } from \"./Illions.vue?vue&type=template&id=677317ca\"\nimport script from \"./Illions.vue?vue&type=script&lang=js\"\nexport * from \"./Illions.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"main\">\r\n    <h1>YooA Numbers</h1>\r\n    <p>Learning numbers in any language is always a bit challenging, but Korean numbers are kind of… twice as hard. This is because in Korean, there are two sets of numbers: Sino-Korean numbers and Native Korean numbers.\r\n    Each number system has its own specific uses, so it’s important to learn both number systems.</p>\r\n    <p>Type the English (numerals) / Korean (words) number.</p>\r\n    <p>\r\n        Click to type Korean:\r\n        <a href = \"https://www.branah.com/korean\" target=\"_blank\">Korean Keyboard</a>\r\n    </p>\r\n    <div class = \"game\">\r\n      <p id = \"number\" ref = \"number\" style = \"font-size: 20pt;\">Korean Numbers (한국어 숫자)<br></p>\r\n      <div class=\"center\">\r\n        <input style = \"width: 340px; display: none;\" type = \"text\" id = \"knum\" ref = \"knum\" name = \"knum\" placeholder = \"Number (English = numerals, 한국어 = 단어 (words))\"><br>\r\n        <button style = \"display: none;\" id = \"submit\" ref = \"submit\" @click=\"submit\">Submit</button>\r\n      </div>\r\n      <button style = \"width: 150px; height: 100px; font-size: 30pt;\" id = \"start\" @click=\"start\">Start</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport Numbers from '../numbers'\r\n\r\nexport default {\r\n  methods:{\r\n      start() {\r\n        Numbers.start(this.$refs.submit, this.$refs.knum, this.$refs.number);\r\n      },\r\n      submit() {\r\n        Numbers.submit(this.$refs.knum);\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","var rand\r\nvar num\r\nvar score = 0\r\nvar eng_num = \"\"\r\nvar k_num = \"\"\r\nvar scores = \"Score: 0<br>\"\r\nvar plus\r\nvar num_system\r\n\r\nvar ans\r\nvar correct_ans = \"YooArin\"\r\nvar ans_lang\r\n\r\nvar time\r\nvar start_time\r\n\r\nvar sino_ones = [\"\", \"일\", \"이\", \"삼\", \"사\", \"오\", \"육\", \"칠\", \"팔\", \"구\"]\r\nvar sino_pow10 = [\"\", \"십\", \"백\", \"천\"]\r\nvar sino_pow10000 = [\"\", \"만\", \"억\", \"조\"]\r\n\r\nvar native_ones = [\"\", \"하나\", \"둘\", \"셋\", \"넷\", \"다섯\", \"여섯\", \"일곱\", \"여덟\", \"아홉\"]\r\nvar native_tens = [\"\", \"열\", \"스물\", \"서른\", \"마흔\", \"쉰\", \"예순\", \"일흔\", \"여든\", \"아흔\"]\r\n\r\nvar timer \r\n\r\nlet start = (button, input, dis) => {\r\n    if (input) {\r\n        input.addEventListener(\"keypress\", function(event) {\r\n            if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            button.click();\r\n            }\r\n        });\r\n    }\r\n    button.style.display = \"\"\r\n    input.style.display = \"\"\r\n    document.getElementById(\"start\").style.display = \"none\"\r\n    start_time = new Date().getTime()\r\n    time = 300\r\n    plus = \"\"\r\n    submit(input)\r\n    timer = setInterval(() => timerTick(button, input, dis), 1)\r\n}\r\n\r\nfunction timerTick(button, input, dis) {\r\n    time = Math.max(300 - (new Date().getTime() - start_time) / 1000, 0)\r\n    dis.innerHTML = \"Time: \" + formatTime(time) + \"<br>\" + scores + num_system + eng_num + k_num + \"<br>\"\r\n    if (time <= 0) {\r\n        clearInterval(timer)\r\n        let miracle = \"are a \" + colorText(\"h3\", \"#F4A6D7\", \"MI\") + colorText(\"h3\", \"#9ADBE8\", \"RA\") + colorText(\"h3\", \"#EEE29F\", \"CLE\")\r\n        let passed = score < 20 ? \"<span style = 'color: red'>FAILED\" : score < 40 ? \"<span style = 'color: green'>PASSED\" : miracle\r\n        dis.innerHTML = \"Time's Up!<br>\" + scores + \"You \" + passed + \"!</span> - YooA\"\r\n        input.style.display = \"none\"\r\n        button.style.display = \"none\"\r\n    }\r\n}\r\n\r\nlet submit = (input) => {\r\n    if ((plus == \"\" || !scores.includes(\"+\")) && time > 0) {\r\n        let score_time = 0\r\n        ans = input.value\r\n        if (ans == correct_ans || (ans == num && ans_lang == \"English\")) {\r\n            let div = ans_lang == \"English\" ? 4 : 2.5\r\n            let add = Math.floor((num.toString().length - 1) / div) + 1\r\n            plus = \" (+\" + add + \")<br><span style = 'color: green'>Correct!</span>\"\r\n            score += add\r\n        }\r\n        else plus = \" (+0)<br><span style = 'color: red'>Wrong! Correct Answer: \" + correct_ans + \"</span>\"\r\n        scores = \"Score: \" + score + plus + \"<br>\"\r\n        if (correct_ans != \"YooArin\") { \r\n            score_time = new Date().getTime()\r\n            setTimeout(function(){ \r\n                scores = \"Score: \" + score + \"<br>\" \r\n                randNum()\r\n            }, 5000)\r\n        }\r\n        else {\r\n            scores = \"Score: \" + score + \"<br>\" \r\n            randNum()\r\n        }\r\n    }\r\n}\r\n\r\nfunction randNum() {\r\n    //Math.random = random number from 0.00 to 1.00\r\n    num_system = Math.random() < 0.5 ? \"Sino-Korean\" : \"Native Korean\" //50% sino/native\r\n    ans_lang = Math.random() < 0.5 ? \"English\" : \"Korean\"\r\n    if (num_system == \"Sino-Korean\") {\r\n        rand =  Math.floor(10 ** (Math.random() * 16)) - 1 //x ** y = x^y (exponents), Math.floor = Round down.\r\n        let n = rand.toString()\r\n        k_num = \"\"\r\n        if (rand == 0) k_num = \"영\"\r\n        else {\r\n            for (let i = n.length; i > 0; i--) {\r\n                //x % y= remainder of x/y \r\n                let ones = sino_ones[n[i - 1] % 10]\r\n                let pow10 = (n.length - i) % 4 \r\n                let pow10000 = Math.floor((n.length - i) / 4)\r\n                if (n[i - 1] == '1' && i < n.length && (pow10 != 0 || (n.length % 4 == 1 && i == 1))) ones = \"\"\r\n                if (n[i - 1] != '0' || (n[i - 1] == 0 && pow10 == 0)) {\r\n                    let pow = pow10 == 0 ? sino_pow10000[pow10000] + \" \" : \"\"\r\n                    k_num = ones + sino_pow10[pow10] + pow + k_num\r\n                }\r\n                k_num = k_num.replace(\" 일만\", \" 만\")\r\n                k_num = k_num.replace(\" 일억\", \" 억\")\r\n                k_num = k_num.replace(\" 일조\", \" 조\")\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        rand = Math.floor(Math.random() * 100)\r\n        if (rand == 0) k_num = \"영\"\r\n        else k_num = native_tens[Math.floor(rand / 10)] + native_ones[rand % 10]\r\n    }\r\n    num = rand\r\n    k_num = k_num.trim()\r\n    let knum = k_num\r\n    \r\n    k_num = \"<br>\" + k_num\r\n    eng_num = \"<br>\" + num.toLocaleString()\r\n\r\n    if (ans_lang == \"English\") {\r\n        correct_ans = num.toLocaleString()\r\n        eng_num = \"\"\r\n    }\r\n    else {\r\n        correct_ans = knum\r\n        k_num = \"\"\r\n    }\r\n    document.getElementById(\"knum\").value = \"\"\r\n}\r\n\r\nvar exports = {\r\n    start,\r\n    submit\r\n}\r\n\r\nexport default exports","import { render } from \"./Numbers.vue?vue&type=template&id=0ddeee53\"\nimport script from \"./Numbers.vue?vue&type=script&lang=js\"\nexport * from \"./Numbers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"main\">\r\n    <Main></Main>\r\n    <ProgressBar></ProgressBar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Main from '@/components/Main.vue'\r\nimport ProgressBar from '@/components/ProgressBar.vue'\r\n\r\nexport default {\r\n  components: {\r\n    Main,\r\n    ProgressBar\r\n  },\r\n  methods:{\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv.main {\r\n  text-align: center;\r\n  color: white;\r\n  background-color: black;\r\n}\r\n</style>\r\n\r\n","<template>\r\n  <Header msg = \"YooA Incremental\" ref=\"header\"></Header>\r\n</template>\r\n\r\n<script>\r\nimport Header from './Header.vue'\r\n\r\nimport { start } from '@/incremental/incremental.js';\r\n\r\nexport default {\r\n  name: 'Main',\r\n  mounted() {\r\n    start();\r\n  },\r\n  components: {\r\n    Header\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"header\">\r\n    <h1>{{ msg }}</h1>\r\n    <p class=\"points\">You have <span v-html=\"pointsText\"></span> YooA Points<br>\r\n    ({{ ppsText }}/s)<br>\r\n    Current Endgame: <span v-html=\"endgameText\"></span> YooAmatter\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getYooAGain } from '@/incremental/incremental.js';\r\n\r\nexport default {\r\n  name: 'Header',\r\n  mounted() {\r\n    setInterval(() => this.update(), 33); // Use Vue instance's method\r\n  },\r\n  data() {\r\n    return {\r\n      points: new Decimal(0),\r\n      pointsPerSecond: new Decimal(0)\r\n    }\r\n  },\r\n  computed: {\r\n    pointsText() {\r\n      return colorText(\"h3\", \"#d17be2\", format(this.points));\r\n    },\r\n    ppsText() {\r\n      return format(this.pointsPerSecond);\r\n    },\r\n    endgameText() {\r\n      return colorText(\"h3\", \"#bcc70f\", format(\"9.17e1995\"))\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.points = player.YooAPoints\r\n      this.pointsPerSecond = getYooAGain()\r\n    },\r\n  },\r\n  props: {\r\n    msg: String,\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\np.points {\r\n  font-size: 20pt;\r\n}\r\n</style>\r\n","import Decimal from \"./break_eternity.js\";\r\nimport Header from '@/components/Header.vue'\r\n\r\nvar timer\r\n\r\n// Initialize player as a reactive object\r\nwindow.player = getStartPlayer();\r\nconsole.log(window.player)\r\n\r\nexport function getStartPlayer() {\r\n    return {\r\n        time: Date.now(),\r\n        YooAPoints: new Decimal(0),\r\n        YooAmatter: new Decimal(0)\r\n    }\r\n}\r\n\r\nexport function start() {\r\n    /*load()\r\n    main()*/\r\n    timer = setInterval(gameLoop, 33)\r\n}\r\n\r\nexport function getYooAGain() {\r\n    let gain = new Decimal(124).mul(player.YooAPoints.add(1).pow(0.995)).mul(player.YooAPoints.add(1).log10().pow(0.75).pow10())\r\n    return gain\r\n}\r\n\r\nexport function getProgress() {\r\n    let progress = player.YooAmatter.add(1).log(\"9.17e1995\").mul(100).min(100)\r\n    document.getElementById(\"percent\").innerHTML = format(progress) + \"%\"\r\n    document.getElementById(\"percentbar\").style.width = progress.toNumber() + \"%\"\r\n}\r\n\r\nexport function gameLoop() {\r\n    let now = Date.now()\r\n\tlet diff = (now - player.time) / 1e3\r\n    let gain = getYooAGain()\r\n    player.YooAPoints = player.YooAPoints.add(gain.mul(diff))\r\n    player.time = now\r\n    //getProgress()\r\n}\r\n\r\nvar exports = {\r\n    start,\r\n    getYooAGain\r\n}\r\nexport default exports","import { render } from \"./Header.vue?vue&type=template&id=21269414&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=21269414&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-21269414\"]])\n\nexport default __exports__","import { render } from \"./Main.vue?vue&type=template&id=b655335a\"\nimport script from \"./Main.vue?vue&type=script&lang=js\"\nexport * from \"./Main.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"progress\">\r\n    <div id=\"percentbar\" class=\"percent\">\r\n      <span data-text = \"Percentage to YooAity\" id=\"percent\" class=\"tooltip\">{{ percent }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'ProgressBar',\r\n  mounted() {\r\n    setInterval(() => this.update(), 33); // Use Vue instance's method\r\n  },\r\n  data() {\r\n    return {\r\n      progress: new Decimal(0)\r\n    }\r\n  },\r\n  computed: {\r\n    percent() {\r\n      return format(this.progress.mul(100)) + \"%\";\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.progress = player.YooAPoints.max(10).log10().div(198895).min(1)\r\n      document.getElementById(\"percentbar\").style.width = this.progress.toNumber() * 100 + \"%\"\r\n    },\r\n  },\r\n  props: {\r\n    msg: String,\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\ndiv.progress{\r\n\tposition: fixed;\r\n\tbottom: 10px;\r\n\tleft: 15px;\r\n\twidth: calc(100% - 30px);\r\n\tfont-size: 16pt;\r\n\ttext-align: left;\r\n\tbackground-color: #a3a3a3;\r\n\tborder-radius: var(--var-border-radius, 0.5rem);\r\n\tmargin-right: auto;\r\n\tmargin-left: auto;\r\n}\r\n\r\ndiv.percent{\r\n\twidth: 0;\r\n\ttext-align: center;\r\n\tbackground-color: #200642;\r\n\tborder-radius: inherit;\r\n\ttransition-duration: 0.1s;\r\n\tcolor: white;\r\n}\r\n\r\n.tooltip {\r\n\toverflow-wrap: normal;\r\n\tposition: relative;\r\n}\r\n\r\n.tooltip:before {\r\n\tcontent: attr(data-text);\r\n\tposition: absolute;\r\n\r\n\tleft: 50%;\r\n\ttransform: translateX(-50%);\r\n\r\n\tbottom: 100%;\r\n\tmargin-bottom: 15px;\r\n\r\n\twidth: 200px;\r\n\tpadding: 10px;\r\n\tborder-radius: 10px;\r\n\tbackground: #200642;\r\n\tcolor: #fff;\r\n\ttext-align: center;\r\n\r\n\tvisibility: hidden;\r\n\topacity: 0;\r\n  \ttransition: .3s;\r\n}\r\n\r\n.tooltip:hover:before, .tooltip:hover:after {\r\n\tdisplay: block;\r\n\topacity: 1;\r\n\tvisibility: visible;\r\n}\r\n\r\n.tooltip:after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\r\n\tbottom: 100%;\r\n\tmargin-bottom: -5px;\r\n\r\n\tleft: 50%;\r\n\ttransform: translateX(-50%);\r\n\r\n\tborder: 10px solid #200642;\r\n\tborder-color: #200642 transparent transparent transparent;\r\n\r\n\tvisibility: hidden;\r\n\topacity: 0;\r\n  \ttransition: .3s;\r\n}\r\n</style>\r\n","import { render } from \"./ProgressBar.vue?vue&type=template&id=8d77648c&scoped=true\"\nimport script from \"./ProgressBar.vue?vue&type=script&lang=js\"\nexport * from \"./ProgressBar.vue?vue&type=script&lang=js\"\n\nimport \"./ProgressBar.vue?vue&type=style&index=0&id=8d77648c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8d77648c\"]])\n\nexport default __exports__","import { render } from \"./Incremental.vue?vue&type=template&id=dd84aad4&scoped=true\"\nimport script from \"./Incremental.vue?vue&type=script&lang=js\"\nexport * from \"./Incremental.vue?vue&type=script&lang=js\"\n\nimport \"./Incremental.vue?vue&type=style&index=0&id=dd84aad4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dd84aad4\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport Math from '../views/Math.vue'\r\nimport Cryptography from '../views/Cryptography.vue'\r\nimport Statistics from '../views/Statistics.vue'\r\nimport Illions from '../views/Illions.vue'\r\nimport Numbers from '../views/Numbers.vue'\r\nimport Incremental from '../views/Incremental.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: Home\r\n  },\r\n  {\r\n    path: '/math',\r\n    name: 'math',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: Math\r\n  },\r\n  {\r\n    path: '/cryptography',\r\n    name: 'cryptography',\r\n    component: Cryptography\r\n  },\r\n  {\r\n    path: '/statistics',\r\n    name: 'statistics',\r\n    component: Statistics\r\n  },\r\n  {\r\n    path: '/illions',\r\n    name: 'illions',\r\n    component: Illions\r\n  },\r\n  {\r\n    path: '/numbers',\r\n    name: 'numbers',\r\n    component: Numbers\r\n  },\r\n  {\r\n    path: '/incremental',\r\n    name: 'incremental',\r\n    component: Incremental\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\nexport default router\r\n","import Decimal from \"@/incremental/break_eternity.js\";\r\nimport Vue from \"vue\";\r\n\r\nwindow.Decimal = Decimal;\r\nwindow.Vue = Vue;\r\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nimport \"./shims\";\r\nimport \"./format\";\r\nimport \"./incremental/incremental.js\";\r\nimport \"./incremental/menu.js\";\r\nimport \"./incremental/options.js\";\r\nimport \"./incremental/save.js\";\r\n\r\n\r\nconst app = createApp(App)\r\napp.use(router).mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/yooa-com/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkyooa_com\"] = self[\"webpackChunkyooa_com\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9673); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["window","addCommas","s","length","rem","slice","exponentialFormat","num","precision","e","log10","floor","m","div","Decimal","pow","toStringWithDecimalPlaces","add","lt","mul","sub","start","abs","end","includes","replace","commaFormat","undefined","mag","toFixed","init","portions","split","regularFormat","Math","max","fixValue","x","y","sumValues","Object","values","reduce","a","b","format","decimal","isNaN","sign","layer","neg","recip","Number","POSITIVE_INFINITY","slog","gte","formatWhole","lte","eq","formatTime","toPlaces","maxAccepted","result","formatSmall","invertOOM","ceil","times","colorText","elem","color","text","global","factory","module","exports","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","_toPrimitive","input","hint","prim","Symbol","toPrimitive","res","call","String","arg","LRUCache","maxSize","map","Map","first","last","get","size","value","node","prev","next","has","Error","ListNode","set","MAX_SIGNIFICANT_DIGITS","EXP_LIMIT","LAYER_DOWN","FIRST_NEG_LAYER","NUMBER_EXP_MAX","NUMBER_EXP_MIN","MAX_ES_IN_A_ROW","DEFAULT_FROM_STRING_CACHE_SIZE","powerOf10","powersOf10","push","indexOf0InPowersOf10","power","critical_headers","E","critical_tetr_values","critical_slog_values","D","fromValue_noAlloc","FC","fromComponents","FC_NN","fromComponents_noNormalize","decimalPlaces","places","len","numDigits","rounded","round","parseFloat","f_maglog10","n","f_gamma","isFinite","trunc","NEGATIVE_INFINITY","scal1","l","log","n2","np","exp","_EXPN1","OMEGA","f_lambertw","z","w","wn","tol","arguments","principal","Infinity","concat","toString","d_lambertw","ew","wewz","dZero","dOne","fromNumber","ln","dNegInf","fromDecimal","fromString","man","residue","fromMantissaExponent","exponent","absmag","signmag","NaN","normalize","mantissa","linearhyper4","originalValue","cached","fromStringCache","pentationparts","_base","_height","heightparts","payload","pentate","tetrationparts","_base2","_height2","_heightparts","_payload","_result","tetrate","base","height","powparts","_base3","_exponent","_result2","trim","toLowerCase","ptparts","negative","_payload2","_result3","_negative","_payload3","_result4","_negative2","_payload4","_result5","parts","ecount","numberAttempt","_numberAttempt","newparts","charAt","layerstring","chrcode","charCodeAt","substr","_result6","me","_result7","repeat","toExponential","dInf","dNaN","maxabs","cmpabs","layera","layerb","magdiff","_magdiff","_mantissa","_magdiff2","_mantissa2","newmag","_newmag","floored","vd","absmod","mod","num_this","toNumber","num_decimal","cmp","_isFinite2","apply","neq","gt","min","tolerance","eq_tolerance","cmp_tolerance","magA","magB","neq_tolerance","log2","absLog10","pow10","root","gamma","t","lm","adj","l2","sqrt","linear","this_num","negln","lower","lambertw","upper","iteratedlog","oldheight","fracheight","limitheight","layeradd","old_payload","tetrate_critical","minus","plus","layeradd10","_i","fulltimes","fraction","layerloss","iterations","step_size","has_changed_directions_once","previously_rose","slog_internal","new_decimal","currently_rose","infTower","copy","slog_critical","diff","_layeradd","baseD","excessSlog","excess_slog","_slogthis","range","_slogdest","slogzero","slogone","wholeheight","towertop","slogthis","slogdest","linear_sroot","degree","upperBound","dTen","previous","guess","loopGoing","iteratedexp","stage","minimum","maximum","_lower","_upper","prevspan","difference","_upperBound","distance","prevPoint","nextPoint","evenDegree","lastValid","infLoopDetector","previousUpper","decreasingFound","gt_tolerance","cutOff","_cutOff","_previous","_guess","_loopGoing","prevpayload","prevtwopayload","penta_log","_i2","limitcheck","increasingInverse","sin","cos","tan","asin","acos","atan","negate","sinh","cosh","sqr","ascensions","other","fromMantissaExponent_noNormalize","fromValue","reciprocate","modulo","modular","_isNaN","_x","_isFinite","_x2","notEquals","minabs","clamp","clampMin","clampMax","notEquals_tolerance","lt_tolerance","lte_tolerance","gte_tolerance","pLog10","logarithm","_other","factorial","lngamma","cube","cbrt","ssqrt","linear_penta_root","tanh","asinh","acosh","atanh","resourcesAvailable","priceStart","priceRatio","currentOwned","affordGeometricSeries_core","numItems","sumGeometricSeries_core","priceAdd","affordArithmeticSeries_core","sumArithmeticSeries_core","cost","currentRpS","deltaRpS","efficiencyOfPurchase_core","maxLayers","random","randomsign","randomexp","randommag","actualStart","b2","critical_section","grid","basefrac","frac","estimate","layersleft","_payload5","tested","_slogzero","_slogone","_estimate","_payload6","_payload7","_fracheight","_tested","_step_size","_towertop","_guess2","func","decreasing","minX","dLayerMax","maxX","minY","maxY","isNan","rangeApply","currentCheck","valCheck","reciprocal","positive","_valCheck","limit","_valCheck2","_limit","_valCheck3","MAX_VALUE","_valCheck4","_limit2","_valCheck5","_limit3","_valCheck6","_valCheck7","_limit4","_valCheck8","_limit5","_valCheck9","_valCheck10","_limit6","_valCheck11","_limit7","_valCheck12","searchIncreasing","comparative","appliedResult","oldresult","critical","dNegOne","dTwo","dNumberMax","dNumberMin","MIN_VALUE","dLayerSafeMax","MAX_SAFE_INTEGER","dLayerSafeMin","dLayerMin","_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_component_router_view","script","__exports__","render","class","_hoisted_1","src","_imports_0","width","_hoisted_2","_createStaticVNode","id","onClick","args","$options","submit","score","check","answers","Array","correctAns","scores","document","getElementById","miracle","passed","inst","style","display","fontSize","innerHTML","methods","_hoisted_3","mounted","Cryptography","fill","element","j","alert","Statistics","type","name","placeholder","answer","num_illion","illions","t1illions","t1ones","t1tens","t1hundreds","t2illions","t2ones","t2tens","t2hundreds","t3illions","t3ones","t3mults","t3os","t3tens","t3hundreds","t4illions","t4ons","t4ones","t4tens","t4os","t4hundreds","tN_illions","t2_1","t3_1","IGNORE_COMMAS","COMMAS_ARE_DECIMAL_POINTS","t1format","ill","t1","illion","hund","t1mult","t2format","i2","t2","t2ill","mult","t21","span1","span2","spant2","spant3","not2","no_illion","t3","t3format","replaceAll","t2mult","t3ill","v","t3ot","t31","not3","t4","t4format","t3mult","t4ill","t4ot","t41","t1illion","t2illion","t3illion","t4illion","slogmag","slognum","Illions","ref","href","_hoisted_4","_hoisted_5","rand","num_system","ans","ans_lang","time","start_time","timer","eng_num","k_num","correct_ans","sino_ones","sino_pow10","sino_pow10000","native_ones","native_tens","button","dis","addEventListener","event","preventDefault","click","Date","getTime","setInterval","timerTick","clearInterval","score_time","setTimeout","randNum","ones","pow10000","knum","toLocaleString","Numbers","$refs","number","_component_Main","_component_ProgressBar","_createBlock","_component_Header","msg","_toDisplayString","$props","pointsText","ppsText","endgameText","getStartPlayer","now","YooAPoints","YooAmatter","gameLoop","getYooAGain","gain","player","console","update","data","points","pointsPerSecond","computed","components","Header","percent","progress","Main","ProgressBar","routes","path","component","Home","Incremental","router","createRouter","history","createWebHistory","process","Vue","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","splice","r","getter","__esModule","d","definition","o","g","globalThis","Function","obj","prop","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}